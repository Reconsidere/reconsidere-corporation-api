{
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "mongoose = require('mongoose');\ngraphlHTTP = require('express-graphql');\n\nconst express = require('express');\n\nconst {\n  importSchema\n} = require('graphql-import');\n\nconst bodyParser = require('body-parser');\n\nconst cors = require('cors');\n\nconst {\n  graphqlUploadExpress\n} = require('graphql-upload');\n\nconst {\n  makeExecutableSchema\n} = require('graphql-tools');\n\nconst resolverCollector = require('./resolvers/indexCollector');\n\nconst resolverPicture = require('./resolvers/indexPicture');\n\nconst resolverArchive = require('./resolvers/indexArchive');\n\nconst resolverCorporation = require('./resolvers/indexCorporation');\n\nconst resolverProvider = require('./resolvers/indexProvider');\n\nconst resolverLogin = require('./resolvers/indexLogin');\n\nconst resolverCheckPoint = require('./resolvers/indexCheckPoint');\n\nconst resolverTransactionHistory = require('./resolvers/indexTransactionHistory');\n\nconst schemaPathCollector = './schemas/indexCollector.graphql';\nconst schemaPathPicture = './schemas/indexPicture.graphql';\nconst schemaPathArchive = './schemas/indexArchive.graphql';\nconst schemaPathCorporation = './schemas/indexCorporation.graphql';\nconst schemaPathProvider = './schemas/indexProvider.graphql';\nconst schemaPathCheckPoint = './schemas/indexCheckPoint.graphql';\nconst schemaPathTransactionHistory = './schemas/indexTransactionHistory.graphql';\nconst schemaPathLogin = './schemas/indexLogin.graphql';\nconst schemaLogin = makeExecutableSchema({\n  typeDefs: importSchema(schemaPathLogin),\n  resolvers: resolverLogin\n});\nconst schemaCollector = makeExecutableSchema({\n  typeDefs: importSchema(schemaPathCollector),\n  resolvers: resolverCollector\n});\nconst schemaCorporation = makeExecutableSchema({\n  typeDefs: importSchema(schemaPathCorporation),\n  resolvers: resolverCorporation\n});\nconst schemaProvider = makeExecutableSchema({\n  typeDefs: importSchema(schemaPathProvider),\n  resolvers: resolverProvider\n});\nconst schemaCheckPoint = makeExecutableSchema({\n  typeDefs: importSchema(schemaPathCheckPoint),\n  resolvers: resolverCheckPoint\n});\nconst schemaTransactionHistory = makeExecutableSchema({\n  typeDefs: importSchema(schemaPathTransactionHistory),\n  resolvers: resolverTransactionHistory\n});\nconst schemaPicture = makeExecutableSchema({\n  typeDefs: importSchema(schemaPathPicture),\n  resolvers: resolverPicture\n});\nconst schemaArchive = makeExecutableSchema({\n  typeDefs: importSchema(schemaPathArchive),\n  resolvers: resolverArchive\n});\nconst app = express();\nconst PORT = 32546;\nmongoose.Promise = global.Promise;\nmongoose.connect('mongodb://localhost:27017/eowyn-reconsidere-corporation');\napp.get('/', (req, res) => {\n  res.json({\n    msg: 'Welcome to GraphQL'\n  });\n});\napp.use(express.static('/reconsidere-corp/images'));\napp.use(express.static('/reconsidere-corp/archives'));\nvar jsonParser = bodyParser.json({\n  limit: '20mb',\n  type: 'application/json'\n});\nvar urlencodedParser = bodyParser.urlencoded({\n  extended: true,\n  limit: '20mb',\n  type: 'application/x-www-form-urlencoding'\n});\napp.use('/reconsidere/images', jsonParser, urlencodedParser, cors(), graphlHTTP({\n  schema: schemaPicture,\n  graphiql: true\n}));\napp.use('/reconsidere/archives', jsonParser, urlencodedParser, cors(), graphlHTTP({\n  schema: schemaArchive,\n  graphiql: true\n}));\napp.use('/login', bodyParser.text({\n  type: 'application/graphql'\n}), bodyParser.json(), cors(), graphlHTTP({\n  schema: schemaLogin,\n  graphiql: true\n}));\napp.use('/collector', bodyParser.text({\n  type: 'application/graphql'\n}), bodyParser.json(), cors(), graphlHTTP({\n  schema: schemaCollector,\n  graphiql: true\n}));\napp.use('/corporation', bodyParser.text({\n  type: 'application/graphql'\n}), bodyParser.json(), cors(), graphlHTTP({\n  schema: schemaCorporation,\n  graphiql: true\n}));\napp.use('/provider', bodyParser.text({\n  type: 'application/graphql'\n}), bodyParser.json(), cors(), graphlHTTP({\n  schema: schemaProvider,\n  graphiql: true\n}));\napp.use('/checkpoint', bodyParser.text({\n  type: 'application/graphql'\n}), bodyParser.json(), cors(), graphlHTTP({\n  schema: schemaCheckPoint,\n  graphiql: true\n}));\napp.use('/transactionhistory', bodyParser.text({\n  type: 'application/graphql'\n}), bodyParser.json(), cors(), graphlHTTP({\n  schema: schemaTransactionHistory,\n  graphiql: true\n}));\napp.listen(PORT, () => {\n  console.log(`Server is listening on PORT ${PORT}`);\n});\nexports.mongoose = mongoose;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "require",
        "graphlHTTP",
        "express",
        "importSchema",
        "bodyParser",
        "cors",
        "graphqlUploadExpress",
        "makeExecutableSchema",
        "resolverCollector",
        "resolverPicture",
        "resolverArchive",
        "resolverCorporation",
        "resolverProvider",
        "resolverLogin",
        "resolverCheckPoint",
        "resolverTransactionHistory",
        "schemaPathCollector",
        "schemaPathPicture",
        "schemaPathArchive",
        "schemaPathCorporation",
        "schemaPathProvider",
        "schemaPathCheckPoint",
        "schemaPathTransactionHistory",
        "schemaPathLogin",
        "schemaLogin",
        "typeDefs",
        "resolvers",
        "schemaCollector",
        "schemaCorporation",
        "schemaProvider",
        "schemaCheckPoint",
        "schemaTransactionHistory",
        "schemaPicture",
        "schemaArchive",
        "app",
        "PORT",
        "Promise",
        "global",
        "connect",
        "get",
        "req",
        "res",
        "json",
        "msg",
        "use",
        "static",
        "jsonParser",
        "limit",
        "type",
        "urlencodedParser",
        "urlencoded",
        "extended",
        "schema",
        "graphiql",
        "text",
        "listen",
        "console",
        "log",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourcesContent": [
        "mongoose = require('mongoose');\r\ngraphlHTTP = require('express-graphql');\r\nconst express = require('express');\r\nconst { importSchema } = require('graphql-import');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\nconst { graphqlUploadExpress } = require('graphql-upload');\r\n\r\nconst { makeExecutableSchema } = require('graphql-tools');\r\nconst resolverCollector = require('./resolvers/indexCollector');\r\nconst resolverPicture = require('./resolvers/indexPicture');\r\nconst resolverArchive = require('./resolvers/indexArchive');\r\nconst resolverCorporation = require('./resolvers/indexCorporation');\r\nconst resolverProvider = require('./resolvers/indexProvider');\r\nconst resolverLogin = require('./resolvers/indexLogin');\r\nconst resolverCheckPoint = require('./resolvers/indexCheckPoint');\r\nconst resolverTransactionHistory = require('./resolvers/indexTransactionHistory');\r\nconst schemaPathCollector = './schemas/indexCollector.graphql';\r\nconst schemaPathPicture = './schemas/indexPicture.graphql';\r\nconst schemaPathArchive = './schemas/indexArchive.graphql';\r\nconst schemaPathCorporation = './schemas/indexCorporation.graphql';\r\nconst schemaPathProvider = './schemas/indexProvider.graphql';\r\nconst schemaPathCheckPoint = './schemas/indexCheckPoint.graphql';\r\nconst schemaPathTransactionHistory = './schemas/indexTransactionHistory.graphql';\r\nconst schemaPathLogin = './schemas/indexLogin.graphql';\r\n\r\nconst schemaLogin = makeExecutableSchema({\r\n\ttypeDefs: importSchema(schemaPathLogin),\r\n\tresolvers: resolverLogin\r\n});\r\n\r\nconst schemaCollector = makeExecutableSchema({\r\n\ttypeDefs: importSchema(schemaPathCollector),\r\n\tresolvers: resolverCollector\r\n});\r\n\r\nconst schemaCorporation = makeExecutableSchema({\r\n\ttypeDefs: importSchema(schemaPathCorporation),\r\n\tresolvers: resolverCorporation\r\n});\r\n\r\nconst schemaProvider = makeExecutableSchema({\r\n\ttypeDefs: importSchema(schemaPathProvider),\r\n\tresolvers: resolverProvider\r\n});\r\n\r\nconst schemaCheckPoint = makeExecutableSchema({\r\n\ttypeDefs: importSchema(schemaPathCheckPoint),\r\n\tresolvers: resolverCheckPoint\r\n});\r\n\r\nconst schemaTransactionHistory = makeExecutableSchema({\r\n\ttypeDefs: importSchema(schemaPathTransactionHistory),\r\n\tresolvers: resolverTransactionHistory\r\n});\r\n\r\nconst schemaPicture = makeExecutableSchema({\r\n\ttypeDefs: importSchema(schemaPathPicture),\r\n\tresolvers: resolverPicture\r\n});\r\n\r\nconst schemaArchive = makeExecutableSchema({\r\n\ttypeDefs: importSchema(schemaPathArchive),\r\n\tresolvers: resolverArchive\r\n});\r\n\r\nconst app = express();\r\nconst PORT = 32546;\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect('mongodb://localhost:27017/eowyn-reconsidere-corporation');\r\n\r\napp.get('/', (req, res) => {\r\n\tres.json({\r\n\t\tmsg: 'Welcome to GraphQL'\r\n\t});\r\n});\r\n\r\napp.use(express.static('/reconsidere-corp/images'));\r\napp.use(express.static('/reconsidere-corp/archives'));\r\n\r\nvar jsonParser = bodyParser.json({ limit: '20mb', type: 'application/json' });\r\nvar urlencodedParser = bodyParser.urlencoded({\r\n\textended: true,\r\n\tlimit: '20mb',\r\n\ttype: 'application/x-www-form-urlencoding'\r\n});\r\n\r\napp.use(\r\n\t'/reconsidere/images',\r\n\tjsonParser,\r\n\turlencodedParser,\r\n\tcors(),\r\n\tgraphlHTTP({\r\n\t\tschema: schemaPicture,\r\n\t\tgraphiql: true\r\n\t})\r\n);\r\n\r\napp.use(\r\n\t'/reconsidere/archives',\r\n\tjsonParser,\r\n\turlencodedParser,\r\n\tcors(),\r\n\tgraphlHTTP({\r\n\t\tschema: schemaArchive,\r\n\t\tgraphiql: true\r\n\t})\r\n);\r\n\r\napp.use(\r\n\t'/login',\r\n\tbodyParser.text({ type: 'application/graphql' }),\r\n\tbodyParser.json(),\r\n\tcors(),\r\n\tgraphlHTTP({\r\n\t\tschema: schemaLogin,\r\n\t\tgraphiql: true\r\n\t})\r\n);\r\napp.use(\r\n\t'/collector',\r\n\tbodyParser.text({ type: 'application/graphql' }),\r\n\tbodyParser.json(),\r\n\tcors(),\r\n\tgraphlHTTP({\r\n\t\tschema: schemaCollector,\r\n\t\tgraphiql: true\r\n\t})\r\n);\r\n\r\napp.use(\r\n\t'/corporation',\r\n\tbodyParser.text({ type: 'application/graphql' }),\r\n\tbodyParser.json(),\r\n\tcors(),\r\n\tgraphlHTTP({\r\n\t\tschema: schemaCorporation,\r\n\t\tgraphiql: true\r\n\t})\r\n);\r\n\r\napp.use(\r\n\t'/provider',\r\n\tbodyParser.text({ type: 'application/graphql' }),\r\n\tbodyParser.json(),\r\n\tcors(),\r\n\tgraphlHTTP({\r\n\t\tschema: schemaProvider,\r\n\t\tgraphiql: true\r\n\t})\r\n);\r\n\r\napp.use(\r\n\t'/checkpoint',\r\n\tbodyParser.text({ type: 'application/graphql' }),\r\n\tbodyParser.json(),\r\n\tcors(),\r\n\tgraphlHTTP({\r\n\t\tschema: schemaCheckPoint,\r\n\t\tgraphiql: true\r\n\t})\r\n);\r\n\r\napp.use(\r\n\t'/transactionhistory',\r\n\tbodyParser.text({ type: 'application/graphql' }),\r\n\tbodyParser.json(),\r\n\tcors(),\r\n\tgraphlHTTP({\r\n\t\tschema: schemaTransactionHistory,\r\n\t\tgraphiql: true\r\n\t})\r\n);\r\n\r\napp.listen(PORT, () => {\r\n\tconsole.log(`Server is listening on PORT ${PORT}`);\r\n});\r\n\r\nexports.mongoose = mongoose;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574112533899
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\indexCollector.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCollector.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCollector.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCollector.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "indexCollector.js"
      }
    },
    "ast": null,
    "code": "const collector = require('./collector/Mutation/collector');\n\nmodule.exports = { ...collector\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Q29sbGVjdG9yLmpzIl0sIm5hbWVzIjpbImNvbGxlY3RvciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxnQ0FBRCxDQUF6Qjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLEVBQ2hCLEdBQUdIO0FBRGEsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXHJlY29uc2lkZXJlXFxyZWNvbnNpZGVyZS1jb3Jwb3JhdGlvbi1hcGlcXHJlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbGxlY3RvciA9IHJlcXVpcmUoJy4vY29sbGVjdG9yL011dGF0aW9uL2NvbGxlY3RvcicpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcblx0Li4uY29sbGVjdG9yXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexCollector.js"
      ],
      "names": [
        "collector",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,gCAAD,CAAzB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EAChB,GAAGH;AADa,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const collector = require('./collector/Mutation/collector');\r\n\r\nmodule.exports = {\r\n\t...collector\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1566267302950
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\collector\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\collector\\\\Mutation\\\\collector.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\collector\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\collector\\Mutation\\collector.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\collector\\Mutation\\collector.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\collector\\Mutation\\collector.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\collector\\Mutation",
        "sourceFileName": "collector.js"
      }
    },
    "ast": null,
    "code": "var Collector = require('../../../models/collector.model');\n\nvar Corporation = require('../../../models/corporation.model');\n\nvar Provider = require('../../../models/provider.model');\n\nvar CheckPoint = require('../../../models/checkpoint.model');\n\nvar TransactionHistory = require('../../../models/transactionhistory.model');\n\nmongoose = require('mongoose');\nvar Classification = {\n  Provider: 'Fornecedor',\n  Collector: 'Empresa Coletora'\n};\nmodule.exports = collector = {\n  Query: {\n    async getCollector(root, {\n      _id\n    }) {\n      return await Collector.findById(_id);\n    },\n\n    async getCollectorByUser(root, {\n      _id\n    }) {\n      var res = await Collector.findOne({\n        'users._id': _id\n      });\n\n      if (!res) {\n        return null;\n      } else {\n        return res;\n      }\n    },\n\n    async allCollectors(root, {\n      _id\n    }) {\n      return await Collector.find();\n    },\n\n    async allUnits(root, {\n      _id\n    }) {\n      var res = await Collector.findById(_id);\n\n      if (res) {\n        var unit;\n        var units = [];\n\n        for (var i = 0; res.units.length > i; i++) {\n          unit = undefined;\n          unit = await Collector.findById(res.units[i]._id);\n\n          if (!unit) {\n            unit = await Corporation.findById(res.units[i]._id);\n          }\n\n          if (!unit) {\n            unit = await Provider.findById(res.units[i]._id);\n          }\n\n          units.push(unit);\n        }\n\n        return units;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allClientsToCollector(root, {\n      _id\n    }) {\n      var clients = [];\n      var corporation = await Corporation.findOne({\n        'entries.sale._idColector': _id\n      });\n      var provider = await Provider.findOne({\n        'entries.sale._idColector': _id\n      });\n\n      if (corporation) {\n        corporation.entries.sale.forEach((sale, index) => {\n          if (sale._idColector !== _id) {\n            sales.splice(index, 1);\n          }\n        });\n        clients.push(corporation);\n      }\n\n      if (provider) {\n        provider.entries.sale.forEach((sale, index) => {\n          if (sale._idColector !== _id) {\n            sales.splice(index, 1);\n          }\n        });\n        clients.push(provider);\n      }\n\n      return clients;\n    },\n\n    async allDocuments(root, {\n      _id\n    }) {\n      var res = await Collector.findById(_id);\n\n      if (res) {\n        return res.documents;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allDepartments(root, {\n      _id\n    }) {\n      var res = await Collector.findById(_id);\n\n      if (res) {\n        return res.departments;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allResiduesRegister(root, {\n      _id\n    }) {\n      var res = await Collector.findById(_id);\n\n      if (res) {\n        return res.residuesRegister;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allResidueArrived(root, {\n      _id\n    }) {\n      var res = await Collector.findById(_id);\n\n      if (res) {\n        return res.residuesPerformed;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allSchedulings(root, {\n      _id\n    }) {\n      var res = await Collector.findById(_id);\n\n      if (res) {\n        return res.scheduling;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allEntries(root, {\n      _id\n    }) {\n      var res = await Collector.findById(_id);\n\n      if (res) {\n        return res.entries;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allProvidersId(root, {\n      _id\n    }) {\n      var res = await Collector.findById(_id);\n\n      if (res) {\n        return res.myProviders;\n      } else {\n        return undefined;\n      }\n    }\n\n  },\n  Mutation: {\n    async createCollector(root, {\n      input\n    }) {\n      var res = await Collector.findOne({\n        'users.email': input.users[0].email\n      });\n\n      if (res) {\n        throw new Error('WRE005');\n      } else {\n        return await Collector.create(input);\n      }\n    },\n\n    async createCollectorUnit(root, {\n      _id,\n      typeCorporation,\n      input\n    }) {\n      var res = await Collector.findById(_id);\n\n      for (var i = 0; input.length > i; i++) {\n        for (var x = 0; res.units.length > x; x++) {\n          if (input[i].users[0].email === res.units[x].email) {\n            throw new Error('WRE005');\n          }\n        }\n      }\n\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n\n        for (var i = 0; input.length > i; i++) {\n          var id = undefined;\n          var returned = await Corporation.create(input[i]).then(x => {\n            id = x._id;\n          });\n          addID(_id, id, typeCorporation);\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        return await Collector.findById(_id);\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async updateCollector(root, {\n      _id,\n      input\n    }) {\n      return await Collector.findOneAndUpdate({\n        _id\n      }, input, {\n        new: true\n      });\n    },\n\n    async deleteCollector(root, {\n      _id\n    }) {// return await Collector.findOneAndRemove({\n      // \t_id\n      // });\n    },\n\n    async createorUpdateDepartment(root, {\n      _id,\n      input\n    }) {\n      try {\n        res = await Collector.findById(_id, function (err, corp) {\n          if (err) {\n            return next(new Error('ERE009'));\n          } else {\n            for (var i = 0; input.length > i; i++) {\n              if (input[i]._id) {\n                index = corp.departments.findIndex(x => x._id == input[i]._id);\n\n                if (index) {\n                  corp.departments[index] = input[i];\n                } else if (!corp.departments || corp.departments.length <= 0) {\n                  corp.departments = [input[i]];\n                }\n              } else {\n                if (!corp.departments || corp.departments.length <= 0) {\n                  corp.departments = [input[i]];\n                } else {\n                  corp.departments.push(input[i]);\n                }\n              }\n            }\n\n            corp.save();\n            return;\n          }\n        });\n        var res = await Collector.findById(_id);\n        return res.departments;\n      } catch (error) {\n        throw new Error('ERE009');\n      }\n    },\n\n    async createorUpdateResiduesRegister(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Collector.findById(_id);\n        var returnElement;\n\n        if (!res.residuesRegister || !res.residuesRegister.departments || res.residuesRegister.departments.length <= 0) {\n          var elementSaved;\n          returnElement = await new Promise((resolve, reject) => {\n            Collector.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                input.departments.forEach(department => {\n                  if (!res.residuesRegister || !res.residuesRegister.departments || res.residuesRegister.departments.length <= 0) {\n                    res['residuesRegister'] = new Object();\n                    var depart = {\n                      _id: department._id,\n                      name: department.name,\n                      isChanged: false,\n                      description: department.description,\n                      active: department.active,\n                      qrCode: []\n                    };\n                    res['residuesRegister']['departments'] = [depart];\n                  } else {\n                    var depart = {\n                      _id: department._id,\n                      name: department.name,\n                      isChanged: false,\n                      description: department.description,\n                      active: department.active,\n                      qrCode: []\n                    };\n                    var exist = res.residuesRegister.departments.find(x => x.name === depart.name);\n\n                    if (!exist) {\n                      res.residuesRegister.departments.push(depart);\n                    }\n                  }\n                });\n                input.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    res.residuesRegister.departments.forEach(departmentDB => {\n                      if (department.name === departmentDB.name) {\n                        departmentDB.qrCode.push(qrCode);\n                      }\n                    });\n                  });\n                });\n                corp.residuesRegister = res.residuesRegister;\n                corp.update(corp).then(x => {\n                  resolve(corp);\n                });\n              }\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.findOne({\n            _idCorporation: _id\n          });\n          var isNew = false;\n          res = await Collector.findById(_id);\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            res.residuesRegister.departments.forEach(department => {\n              department.qrCode.forEach(qrCode => {\n                if (!checkpoint) {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  checkpoint = new Object({\n                    _idCorporation: _id,\n                    wastegenerated: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!checkpoint.wastegenerated || checkpoint.wastegenerated.length <= 0) {\n                    checkpoint = new Object({\n                      _idCorporation: _id,\n                      wastegenerated: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.wastegenerated.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne(function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  if (!check || check.length <= 0) {\n                    check = check;\n                  } else {\n                    check.wastegenerated = checkpoint.wastegenerated;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /*Gerando historico */\n\n          var transaction = await TransactionHistory.findOne({\n            _idCorporation: _id\n          });\n          var isNew = false;\n          res = await Collector.findById(_id);\n          var history = await new Promise(async (resolve, reject) => {\n            res.residuesRegister.departments.forEach(department => {\n              department.qrCode.forEach(qrCode => {\n                if (!transaction) {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  transaction = new Object({\n                    _idCorporation: _id,\n                    checkPoints: new Object({\n                      wastegenerated: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (transaction.checkPoints.wastegenerated === undefined || transaction.checkPoints.wastegenerated.length <= 0) {\n                    transaction = new Object({\n                      _idCorporation: _id,\n                      checkPoints: new Object({\n                        wastegenerated: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.wastegenerated.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne(function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (trans === undefined || trans.length <= 0) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.wastegenerated = transaction.checkPoints.wastegenerated;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          var removed = false;\n\n          for (i = 0; input.departments.length > i; i++) {\n            if (input.departments[i].isChanged) {\n              var existRemoved = false;\n              /*verifica se existe mudança de departamento e exclui o item que esta salvo no departamento antigo para depois inserir no novo\r\n              Se por acaso o usuário modificou, mas voltou ao antigo ele apenas não exclui e retorn\r\n              */\n\n              for (y = 0; y < input.departments[i].qrCode.length; y++) {\n                res.residuesRegister.departments.forEach((department, index) => {\n                  department.qrCode.forEach((qrCode, indexQrCode) => {\n                    if (input.departments[i]._id !== department._id) {\n                      if (qrCode.code === input.departments[i].qrCode[y].code) {\n                        department.qrCode.splice(indexQrCode, 1);\n                      }\n                    }\n                  });\n                }); //se não tem mais qrcode remove o departamento\n\n                res.residuesRegister.departments.forEach((department, index) => {\n                  if (!department || !department.qrCode || department.qrCode.length <= 0) {\n                    res.residuesRegister.departments.splice(index, 1);\n                  }\n                });\n              }\n\n              input.departments[i].isChanged = false;\n              removed = true;\n            }\n          }\n\n          await res.update(res).then(console.log('ok removed from old'));\n          res = await Collector.findById(_id);\n\n          for (i = 0; input.departments.length > i; i++) {\n            res = await Collector.findById(_id);\n            var exist = await res.residuesRegister.departments.find(x => x._id == input.departments[i]._id);\n\n            if (exist === undefined || exist.length <= 0) {\n              await res.residuesRegister.departments.push(input.departments[i]);\n              await res.update(res).then(console.log('ok push in department'));\n              res = await Collector.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                res.residuesRegister.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    if (input.departments[i].name === department.name) {\n                      checkpoint.wastegenerated.qrCode.push(qrCode);\n                    }\n                  });\n                });\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.wastegenerated = checkpoint.wastegenerated;\n                    check.update(check).then(x => {});\n                  }\n                });\n                resolve();\n              });\n              /* gerando histórico de alterações */\n\n              res = await Collector.findById(_id);\n              var transaction = TransactionHistory.findOne({\n                _idCorporation: _id\n              });\n              var history = await new Promise((resolve, reject) => {\n                res.residuesRegister.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    if (input.departments[i].name === department.name) {\n                      var value = {\n                        date: new Date(),\n                        code: qrCode.code,\n                        material: qrCode.material\n                      };\n                      TransactionHistory.findOne({\n                        _idCorporation: _id\n                      }, function (err, trans) {\n                        if (!trans) console.log('ERE009');else {\n                          trans.checkPoints.wastegenerated.qrCode.push(value);\n                          trans.update(trans).then(x => {});\n                        }\n                      });\n                    }\n                  });\n                });\n                resolve();\n              });\n              res = await Collector.findById(_id);\n            } else {\n              for (q = 0; input.departments[i].qrCode.length > q; q++) {\n                var isUpdated = false;\n                res = await Collector.findById(_id);\n\n                if (input.departments[i].qrCode[q]._id) {\n                  res.residuesRegister.departments.forEach(department => {\n                    department.qrCode.forEach(qrCode => {\n                      if (qrCode.code == input.departments[i].qrCode[q].code) {\n                        qrCode.set(input.departments[i].qrCode[q]);\n                        isUpdated = true;\n                      }\n                    });\n                  });\n\n                  if (isUpdated) {\n                    await res.update(res).then(console.log('ok set qr codes'));\n                    res = await Collector.findById(_id);\n                    isUpdated = false;\n                    /* gerando checkPoint */\n\n                    var checkpoint = await CheckPoint.findOne({\n                      _idCorporation: _id\n                    });\n                    var element = await new Promise((resolve, reject) => {\n                      checkpoint.wastegenerated.qrCode.forEach(qrCode => {\n                        if (qrCode.code == input.departments[i].qrCode[q].code) {\n                          qrCode.set(input.departments[i].qrCode[q]);\n                        }\n                      });\n                      CheckPoint.findOne({\n                        _idCorporation: _id\n                      }, function (err, check) {\n                        if (!check) console.log('ERE009');else {\n                          check.wastegenerated = checkpoint.wastegenerated;\n                          check.update(check).then(x => {\n                            resolve();\n                          });\n                        }\n                      });\n                    });\n                    /* gerando histórico de alterações */\n\n                    var transaction = await TransactionHistory.findOne({\n                      _idCorporation: _id\n                    });\n                    res = await Collector.findById(_id);\n                    var history = await new Promise((resolve, reject) => {\n                      var value = {\n                        date: new Date(),\n                        code: input.departments[i].qrCode[q].code,\n                        material: input.departments[i].qrCode[q].material\n                      };\n                      TransactionHistory.findOne({\n                        _idCorporation: _id\n                      }, function (err, trans) {\n                        if (!trans) console.log('ERE009');else {\n                          trans.checkPoints.wastegenerated.qrCode.push(value);\n                          trans.update(trans).then(x => {});\n                        }\n                      });\n                      resolve();\n                    });\n                    res = await Collector.findById(_id);\n                  }\n                } else {\n                  res.residuesRegister.departments.forEach(department => {\n                    if (input.departments[i]._id == department._id) {\n                      department.qrCode.push(input.departments[i].qrCode[q]);\n                    }\n                  });\n                  await res.update(res).then(console.log('ok push to exist department'));\n                  res = await Collector.findById(_id);\n                  /* gerando checkPoint */\n\n                  var checkpoint = await CheckPoint.findOne({\n                    _idCorporation: _id\n                  });\n                  var isPushed = false;\n                  var element = await new Promise((resolve, reject) => {\n                    checkpoint.wastegenerated.qrCode.forEach((qrCode, index) => {\n                      if (!isPushed) {\n                        checkpoint.wastegenerated.qrCode.push(input.departments[i].qrCode[q]);\n                        isPushed = true;\n                      }\n                    });\n                    CheckPoint.findOne({\n                      _idCorporation: _id\n                    }, function (err, check) {\n                      if (!check) console.log('ERE009');else {\n                        check.wastegenerated = checkpoint.wastegenerated;\n                        check.update(check).then(x => {\n                          resolve();\n                        });\n                      }\n                    });\n                  });\n                  /* gerando histórico de alterações */\n\n                  res = await Collector.findById(_id);\n                  var transaction = await TransactionHistory.findOne({\n                    _idCorporation: _id\n                  });\n                  var history = await new Promise((resolve, reject) => {\n                    var value = {\n                      date: new Date(),\n                      code: input.departments[i].qrCode[q].code,\n                      material: input.departments[i].qrCode[q].material\n                    };\n                    TransactionHistory.findOne({\n                      _idCorporation: _id\n                    }, function (err, trans) {\n                      if (!trans) console.log('ERE009');else {\n                        trans.checkPoints.wastegenerated.qrCode.push(value);\n                        trans.update(trans).then(x => {});\n                        resolve();\n                      }\n                    });\n                  });\n                  res = await Collector.findById(_id);\n                }\n              }\n            }\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Collector.findById(_id);\n        return res.residuesRegister;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateScheduling(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Collector.findById(_id);\n\n        if (!res.scheduling || res.scheduling.length <= 0) {\n          returnElement = await new Promise((resolve, reject) => {\n            Collector.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                input.forEach(scheduling => {\n                  if (res.scheduling === undefined || res.scheduling.length <= 0) {\n                    res.scheduling = [scheduling];\n                  } else {\n                    res.scheduling.push(scheduling);\n                  }\n                });\n              }\n              corp.scheduling = res.scheduling;\n              corp.update(corp).then(x => {\n                resolve(corp);\n              });\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.findOne({\n            _idCorporation: _id\n          });\n          res = await Collector.findById(_id);\n          var isNew = false;\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            res.scheduling.forEach(scheduling => {\n              scheduling.qrCode.forEach(qrCode => {\n                if (!checkpoint) {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionrequested: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!checkpoint.collectionrequested || checkpoint.collectionrequested.length <= 0) {\n                    checkpoint = new Object({\n                      collectionrequested: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionrequested.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  if (!check || check.length <= 0) {\n                    check = check;\n                  } else {\n                    check.collectionrequested = checkpoint.collectionrequested;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /*Gerando historico */\n\n          var transaction = await TransactionHistory.findOne({\n            _idCorporation: _id\n          });\n          res = await Collector.findById(_id);\n          var isNew = false;\n          var history = await new Promise(async (resolve, reject) => {\n            res.scheduling.forEach(scheduling => {\n              scheduling.qrCode.forEach(qrCode => {\n                if (!transaction) {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionrequested: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionrequested || transaction.checkPoints.collectionrequested.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionrequested: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionrequested.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (!trans || trans.length <= 0) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          for (var i = 0; input.length > i; i++) {\n            var exist = await res.scheduling.find(x => x._id == input[i]._id);\n\n            if (!exist || exist.length <= 0) {\n              res.scheduling.push(input[i]);\n              await res.update(res).then(console.log('ok push scheduling'));\n            } else {\n              exist.set(input[i]);\n              await res.update(res).then(console.log('ok set scheduling'));\n            }\n\n            res = await Collector.findById(_id);\n            /* gerando checkPoint */\n\n            var checkpoint = await CheckPoint.findOne({\n              _idCorporation: _id\n            });\n            var element = await new Promise((resolve, reject) => {\n              for (var x = 0; input[i].qrCode.length > x; x++) {\n                var existQr = undefined;\n\n                for (y = 0; y < checkpoint.collectionrequested.qrCode.length; y++) {\n                  if (checkpoint.collectionrequested.qrCode[y].code === input[i].qrCode[x].code) {\n                    existQr = checkpoint.collectionrequested.qrCode[y];\n                  }\n                }\n\n                if (existQr) {\n                  existQr.set(input[i].qrCode[x]);\n                } else {\n                  checkpoint.collectionrequested.qrCode.push(input[i].qrCode[x]);\n                }\n              }\n\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  check.collectionrequested = checkpoint.collectionrequested;\n                  check.update(check).then(x => {\n                    resolve();\n                  });\n                }\n              });\n            });\n            /* gerando histórico de alterações */\n\n            var transaction = await TransactionHistory.findOne({\n              _idCorporation: _id\n            });\n            var element = await new Promise((resolve, reject) => {\n              for (var x = 0; input[i].qrCode.length > x; x++) {\n                transaction.checkPoints.collectionrequested.qrCode.push(input[i].qrCode[x]);\n              }\n\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  trans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\n                  trans.update(trans).then(x => {\n                    resolve();\n                  });\n                }\n              });\n            });\n            res = await Collector.findById(_id);\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Collector.findById(_id);\n        return res.scheduling;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateEntries(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Collector.findById(_id);\n\n        if (res.entries === undefined || res.entries === null) {\n          returnElement = await new Promise((resolve, reject) => {\n            Collector.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                if (res.entries === undefined || res.entries === null) {\n                  res.entries = input;\n                } else {\n                  res.entries = input;\n                }\n              }\n              corp.entries = res.entries;\n              corp.update(corp).then(x => {\n                resolve(corp);\n              });\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.find({\n            _idCorporation: _id\n          });\n          res = await Collector.findById(_id);\n          var isNew = false;\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            if (res.entries.sale && res.entries.sale.length > 0) {\n              res.entries.sale.forEach(sale => {\n                if (!checkpoint || checkpoint.length <= 0) {\n                  var value = {\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionperformed: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n\n                  if (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\n                    checkpoint = new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            } else if (res.entries.purchase && res.entries.purchase.length > 0) {\n              res.entries.purchase.forEach(purchase => {\n                if (!checkpoint || checkpoint.length <= 0) {\n                  var value = {\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionperformed: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n\n                  if (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\n                    checkpoint = new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            }\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) {\n                  console.log('ERE009');\n                } else {\n                  if (!check || check.length <= 0) {\n                    check = checkpoint;\n                  } else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /* gerando histórico de alterações */\n\n          var transaction = await TransactionHistory.find({\n            _idCorporation: _id\n          });\n          res = await Collector.findById(_id);\n          var isNew = false;\n          var history = await new Promise(async (resolve, reject) => {\n            if (res.entries.sale && res.entries.sale.length > 0) {\n              res.entries.sale.forEach(sale => {\n                if (transaction === undefined || transaction === null) {\n                  var value = {\n                    date: new Date(),\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionperformed || transaction.checkPoints.collectionperformed.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionperformed: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            } else if (res.entries.purchase && res.entries.purchase.length > 0) {\n              res.entries.purchase.forEach(purchase => {\n                if (transaction === undefined || transaction === null) {\n                  var value = {\n                    date: new Date(),\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionperformed || transaction.checkPoints.collectionperformed.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionperformed: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            }\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (trans === undefined || trans === null) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          if (input.sale !== undefined || input.sale.length > 0) {\n            for (i = 0; i < input.sale.length; i++) {\n              var exist = await res.entries.sale.find(x => x._id == input.sale[i]._id);\n\n              if (exist) {\n                exist.set(input.sale[i]);\n                await res.update(res).then(console.log('ok set entries sale'));\n              } else {\n                await res.entries.sale.push(input.sale[i]);\n                await res.update(res).then(console.log('ok push entries sale'));\n              }\n\n              res = await Collector.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.sale !== undefined && input.sale.length > 0) {\n                  var existQr = undefined;\n\n                  for (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\n                    if (checkpoint.collectionperformed.qrCode[y].code === input.sale[i].qrCode.code) {\n                      existQr = checkpoint.collectionperformed.qrCode[y];\n                    }\n                  }\n\n                  if (existQr) {\n                    existQr.set(input.sale[i].qrCode);\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(input.sale[i].qrCode);\n                  }\n                }\n\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                    check.update(check).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              /* gerando histórico de alterações */\n\n              res = await Collector.findById(_id);\n              var transaction = await TransactionHistory.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.sale !== undefined && input.sale.length > 0) {\n                  transaction.checkPoints.collectionperformed.qrCode.push(input.sale[i].qrCode);\n                }\n\n                TransactionHistory.findOne({\n                  _idCorporation: _id\n                }, function (err, trans) {\n                  if (!trans) console.log('ERE009');else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                    trans.update(trans).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              res = await Collector.findById(_id);\n            }\n          } else if (input.purchase !== undefined || input.purchase.length > 0) {\n            for (i = 0; i < input.purchase.length; i++) {\n              var exist = await res.entries.purchase.find(x => x._id == input.purchase[i]._id);\n\n              if (exist) {\n                exist.set(input.purchase[i]);\n                await res.update(res).then(console.log('ok set entries purchase'));\n              } else {\n                await res.entries.purchase.push(input.purchase[i]);\n                await res.update(res).then(console.log('ok push entries purchase'));\n              }\n\n              res = await Collector.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.purchase !== undefined && input.purchase.length > 0) {\n                  var existQr = undefined;\n\n                  for (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\n                    if (checkpoint.collectionperformed.qrCode[y].code === input.purchase[i].qrCode.code) {\n                      existQr = checkpoint.collectionperformed.qrCode[y];\n                    }\n                  }\n\n                  if (existQr) {\n                    existQr.set(input.purchase[i].qrCode);\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(input.purchase[i].qrCode);\n                  }\n                }\n\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                    check.update(check).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              /* gerando histórico de alterações */\n\n              res = await Collector.findById(_id);\n              var transaction = await TransactionHistory.findOne();\n              var element = await new Promise((resolve, reject) => {\n                if (input.purchase !== undefined && input.purchase.length > 0) {\n                  transaction.checkPoints.collectionperformed.qrCode.push(input.purchase[i].qrCode);\n                }\n\n                TransactionHistory.findOne({\n                  _idCorporation: _id\n                }, function (err, trans) {\n                  if (!trans) console.log('ERE009');else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                    trans.update(trans).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              res = await Collector.findById(_id);\n            }\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Collector.findById(_id);\n        return res.entries;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateResidueArrived(root, {\n      _id,\n      input\n    }) {},\n\n    async createorUpdateDocument(root, {\n      _id,\n      input\n    }) {\n      try {\n        var element = await new Promise((resolve, reject) => {\n          var res = Collector.findById(_id, function (err, corp) {\n            if (err) {\n              reject(next(new Error('ERE009')));\n            } else {\n              for (var i = 0; input.length > i; i++) {\n                if (input[i]._id) {\n                  index = corp.documents.findIndex(x => x._id == input[i]._id);\n                  corp.documents[index] = input[i];\n                } else {\n                  corp.documents.push(input[i]);\n                }\n              }\n\n              corp.save();\n              resolve(corp);\n            }\n          });\n        });\n        var res = await Collector.findById(_id);\n        return res.documents;\n      } catch (error) {\n        throw new Error('ERE009');\n      }\n    }\n\n  }\n};\n\nasync function addID(_id, id, typeCorporation) {\n  var object = {\n    unitsId: id\n  };\n\n  if (typeCorporation === Classification.Collector) {\n    var collector = await Collector.findById(_id);\n\n    if (collector.units === undefined || collector.units.length <= 0) {\n      collector['units'] = [object];\n    } else {\n      collector.units.push(object);\n    }\n\n    Collector.findOne(_id, function (err, coll) {\n      if (!coll) console.log('ERE009');else {\n        coll.units = collector.units;\n        coll.update(coll).then(x => {});\n      }\n    });\n  } else if (typeCorporation === Classification.Provider) {\n    var provider = await Provider.findById(_id);\n\n    if (provider.units === undefined || provider.units.length <= 0) {\n      provider['units'] = [object];\n    } else {\n      provider.units.push(object);\n    }\n\n    Provider.findOne(_id, function (err, prov) {\n      if (!prov) console.log('ERE009');else {\n        prov.units = provider.units;\n        prov.update(prov).then(x => {});\n      }\n    });\n  } else {\n    var corporation = await Corporation.findById(_id);\n\n    if (corporation.units === undefined || corporation.units.length <= 0) {\n      corporation['units'] = [object];\n    } else {\n      corporation.units.push(object);\n    }\n\n    await Corporation.findById(_id, function (err, corp) {\n      if (!corp) console.log('ERE009');else {\n        corp.units = corporation.units;\n        corp.update(corp).then(x => {});\n      }\n    });\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "collector.js"
      ],
      "names": [
        "Collector",
        "require",
        "Corporation",
        "Provider",
        "CheckPoint",
        "TransactionHistory",
        "mongoose",
        "Classification",
        "module",
        "exports",
        "collector",
        "Query",
        "getCollector",
        "root",
        "_id",
        "findById",
        "getCollectorByUser",
        "res",
        "findOne",
        "allCollectors",
        "find",
        "allUnits",
        "unit",
        "units",
        "i",
        "length",
        "undefined",
        "push",
        "allClientsToCollector",
        "clients",
        "corporation",
        "provider",
        "entries",
        "sale",
        "forEach",
        "index",
        "_idColector",
        "sales",
        "splice",
        "allDocuments",
        "documents",
        "allDepartments",
        "departments",
        "allResiduesRegister",
        "residuesRegister",
        "allResidueArrived",
        "residuesPerformed",
        "allSchedulings",
        "scheduling",
        "allEntries",
        "allProvidersId",
        "myProviders",
        "Mutation",
        "createCollector",
        "input",
        "users",
        "email",
        "Error",
        "create",
        "createCollectorUnit",
        "typeCorporation",
        "x",
        "session",
        "startSession",
        "startTransaction",
        "id",
        "returned",
        "then",
        "addID",
        "commitTransaction",
        "endSession",
        "console",
        "log",
        "error",
        "abortTransaction",
        "updateCollector",
        "findOneAndUpdate",
        "new",
        "deleteCollector",
        "createorUpdateDepartment",
        "err",
        "corp",
        "next",
        "findIndex",
        "save",
        "createorUpdateResiduesRegister",
        "returnElement",
        "elementSaved",
        "Promise",
        "resolve",
        "reject",
        "department",
        "Object",
        "depart",
        "name",
        "isChanged",
        "description",
        "active",
        "qrCode",
        "exist",
        "departmentDB",
        "update",
        "checkpoint",
        "_idCorporation",
        "isNew",
        "checkpoin",
        "value",
        "code",
        "material",
        "wastegenerated",
        "check",
        "transaction",
        "history",
        "date",
        "Date",
        "checkPoints",
        "trans",
        "removed",
        "existRemoved",
        "y",
        "indexQrCode",
        "element",
        "q",
        "isUpdated",
        "set",
        "isPushed",
        "createorUpdateScheduling",
        "collectionrequested",
        "existQr",
        "createorUpdateEntries",
        "collectionperformed",
        "purchase",
        "createorUpdateResidueArrived",
        "createorUpdateDocument",
        "object",
        "unitsId",
        "coll",
        "prov"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\collector\\Mutation",
      "sourcesContent": [
        "var Collector = require('../../../models/collector.model');\r\nvar Corporation = require('../../../models/corporation.model');\r\nvar Provider = require('../../../models/provider.model');\r\nvar CheckPoint = require('../../../models/checkpoint.model');\r\nvar TransactionHistory = require('../../../models/transactionhistory.model');\r\nmongoose = require('mongoose');\r\n\r\nvar Classification = {\r\n\tProvider: 'Fornecedor',\r\n\tCollector: 'Empresa Coletora'\r\n};\r\n\r\nmodule.exports = collector = {\r\n\tQuery: {\r\n\t\tasync getCollector(root, { _id }) {\r\n\t\t\treturn await Collector.findById(_id);\r\n\t\t},\r\n\t\tasync getCollectorByUser(root, { _id }) {\r\n\t\t\tvar res = await Collector.findOne({ 'users._id': _id });\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allCollectors(root, { _id }) {\r\n\t\t\treturn await Collector.find();\r\n\t\t},\r\n\t\tasync allUnits(root, { _id }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\tvar unit;\r\n\t\t\t\tvar units = [];\r\n\t\t\t\tfor (var i = 0; res.units.length > i; i++) {\r\n\t\t\t\t\tunit = undefined;\r\n\t\t\t\t\tunit = await Collector.findById(res.units[i]._id);\r\n\t\t\t\t\tif (!unit) {\r\n\t\t\t\t\t\tunit = await Corporation.findById(res.units[i]._id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!unit) {\r\n\t\t\t\t\t\tunit = await Provider.findById(res.units[i]._id);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunits.push(unit);\r\n\t\t\t\t}\r\n\t\t\t\treturn units;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allClientsToCollector(root, { _id }) {\r\n\t\t\tvar clients = [];\r\n\t\t\tvar corporation = await Corporation.findOne({ 'entries.sale._idColector': _id });\r\n\t\t\tvar provider = await Provider.findOne({ 'entries.sale._idColector': _id });\r\n\t\t\tif (corporation) {\r\n\t\t\t\tcorporation.entries.sale.forEach((sale, index) => {\r\n\t\t\t\t\tif (sale._idColector !== _id) {\r\n\t\t\t\t\t\tsales.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tclients.push(corporation);\r\n\t\t\t}\r\n\t\t\tif (provider) {\r\n\t\t\t\tprovider.entries.sale.forEach((sale, index) => {\r\n\t\t\t\t\tif (sale._idColector !== _id) {\r\n\t\t\t\t\t\tsales.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tclients.push(provider);\r\n\t\t\t}\r\n\t\t\treturn clients;\r\n\t\t},\r\n\t\tasync allDocuments(root, { _id }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.documents;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allDepartments(root, { _id }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.departments;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allResiduesRegister(root, { _id }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.residuesRegister;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allResidueArrived(root, { _id }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.residuesPerformed;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allSchedulings(root, { _id }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.scheduling;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allEntries(root, { _id }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.entries;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allProvidersId(root, { _id }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.myProviders;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tMutation: {\r\n\t\tasync createCollector(root, { input }) {\r\n\t\t\tvar res = await Collector.findOne({ 'users.email': input.users[0].email });\r\n\t\t\tif (res) {\r\n\t\t\t\tthrow new Error('WRE005');\r\n\t\t\t} else {\r\n\t\t\t\treturn await Collector.create(input);\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync createCollectorUnit(root, { _id, typeCorporation, input }) {\r\n\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\tfor (var x = 0; res.units.length > x; x++) {\r\n\t\t\t\t\tif (input[i].users[0].email === res.units[x].email) {\r\n\t\t\t\t\t\tthrow new Error('WRE005');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\tvar id = undefined;\r\n\t\t\t\t\tvar returned = await Corporation.create(input[i]).then((x) => {\r\n\t\t\t\t\t\tid = x._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddID(_id, id, typeCorporation);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\t\t\t\treturn await Collector.findById(_id);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync updateCollector(root, { _id, input }) {\r\n\t\t\treturn await Collector.findOneAndUpdate(\r\n\t\t\t\t{\r\n\t\t\t\t\t_id\r\n\t\t\t\t},\r\n\t\t\t\tinput,\r\n\t\t\t\t{\r\n\t\t\t\t\tnew: true\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\t\tasync deleteCollector(root, { _id }) {\r\n\t\t\t// return await Collector.findOneAndRemove({\r\n\t\t\t// \t_id\r\n\t\t\t// });\r\n\t\t},\r\n\r\n\t\tasync createorUpdateDepartment(root, { _id, input }) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await Collector.findById(_id, function(err, corp) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn next(new Error('ERE009'));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\t\tif (input[i]._id) {\r\n\t\t\t\t\t\t\t\tindex = corp.departments.findIndex((x) => x._id == input[i]._id);\r\n\t\t\t\t\t\t\t\tif (index) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments[index] = input[i];\r\n\t\t\t\t\t\t\t\t} else if (!corp.departments || corp.departments.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments = [ input[i] ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (!corp.departments || corp.departments.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments = [ input[i] ];\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcorp.departments.push(input[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcorp.save();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\t\treturn res.departments;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync createorUpdateResiduesRegister(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\t\tvar returnElement;\r\n\t\t\t\tif (\r\n\t\t\t\t\t!res.residuesRegister ||\r\n\t\t\t\t\t!res.residuesRegister.departments ||\r\n\t\t\t\t\tres.residuesRegister.departments.length <= 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar elementSaved;\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tCollector.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tinput.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!res.residuesRegister ||\r\n\t\t\t\t\t\t\t\t\t\t!res.residuesRegister.departments ||\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\tres['residuesRegister'] = new Object();\r\n\t\t\t\t\t\t\t\t\t\tvar depart = {\r\n\t\t\t\t\t\t\t\t\t\t\t_id: department._id,\r\n\t\t\t\t\t\t\t\t\t\t\tname: department.name,\r\n\t\t\t\t\t\t\t\t\t\t\tisChanged: false,\r\n\t\t\t\t\t\t\t\t\t\t\tdescription: department.description,\r\n\t\t\t\t\t\t\t\t\t\t\tactive: department.active,\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: []\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tres['residuesRegister']['departments'] = [ depart ];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tvar depart = {\r\n\t\t\t\t\t\t\t\t\t\t\t_id: department._id,\r\n\t\t\t\t\t\t\t\t\t\t\tname: department.name,\r\n\t\t\t\t\t\t\t\t\t\t\tisChanged: false,\r\n\t\t\t\t\t\t\t\t\t\t\tdescription: department.description,\r\n\t\t\t\t\t\t\t\t\t\t\tactive: department.active,\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: []\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tvar exist = res.residuesRegister.departments.find(\r\n\t\t\t\t\t\t\t\t\t\t\t(x) => x.name === depart.name\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tif (!exist) {\r\n\t\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.push(depart);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tinput.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((departmentDB) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (department.name === departmentDB.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepartmentDB.qrCode.push(qrCode);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tcorp.residuesRegister = res.residuesRegister;\r\n\t\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.wastegenerated || checkpoint.wastegenerated.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne(function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = check;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/*Gerando historico */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!transaction) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated === undefined ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne(function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (trans === undefined || trans.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated = transaction.checkPoints.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar removed = false;\r\n\t\t\t\t\tfor (i = 0; input.departments.length > i; i++) {\r\n\t\t\t\t\t\tif (input.departments[i].isChanged) {\r\n\t\t\t\t\t\t\tvar existRemoved = false;\r\n\t\t\t\t\t\t\t/*verifica se existe mudança de departamento e exclui o item que esta salvo no departamento antigo para depois inserir no novo\r\n\t\t\t\t\t\tSe por acaso o usuário modificou, mas voltou ao antigo ele apenas não exclui e retorn\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\tfor (y = 0; y < input.departments[i].qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department, index) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode, indexQrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i]._id !== department._id) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code === input.departments[i].qrCode[y].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.splice(indexQrCode, 1);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t//se não tem mais qrcode remove o departamento\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department, index) => {\r\n\t\t\t\t\t\t\t\t\tif (!department || !department.qrCode || department.qrCode.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tinput.departments[i].isChanged = false;\r\n\t\t\t\t\t\t\tremoved = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait res.update(res).then(console.log('ok removed from old'));\r\n\t\t\t\t\tres = await Collector.findById(_id);\r\n\r\n\t\t\t\t\tfor (i = 0; input.departments.length > i; i++) {\r\n\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\tvar exist = await res.residuesRegister.departments.find(\r\n\t\t\t\t\t\t\t(x) => x._id == input.departments[i]._id\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tif (exist === undefined || exist.length <= 0) {\r\n\t\t\t\t\t\t\tawait res.residuesRegister.departments.push(input.departments[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push in department'));\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i].name === department.name) {\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(qrCode);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i].name === department.name) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (q = 0; input.departments[i].qrCode.length > q; q++) {\r\n\t\t\t\t\t\t\t\tvar isUpdated = false;\r\n\t\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\t\tif (input.departments[i].qrCode[q]._id) {\r\n\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code == input.departments[i].qrCode[q].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode.set(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\tisUpdated = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tif (isUpdated) {\r\n\t\t\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set qr codes'));\r\n\t\t\t\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\t\t\t\tisUpdated = false;\r\n\r\n\t\t\t\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code == input.departments[i].qrCode[q].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode.set(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\t\tcode: input.departments[i].qrCode[q].code,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaterial: input.departments[i].qrCode[q].material\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i]._id == department._id) {\r\n\t\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.push(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push to exist department'));\r\n\t\t\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\r\n\t\t\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\tvar isPushed = false;\r\n\t\t\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.forEach((qrCode, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!isPushed) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\tisPushed = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tcode: input.departments[i].qrCode[q].code,\r\n\t\t\t\t\t\t\t\t\t\t\tmaterial: input.departments[i].qrCode[q].material\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\t\treturn res.residuesRegister;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync createorUpdateScheduling(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Collector.findById(_id);\r\n\r\n\t\t\t\tif (!res.scheduling || res.scheduling.length <= 0) {\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tCollector.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tinput.forEach((scheduling) => {\r\n\t\t\t\t\t\t\t\t\tif (res.scheduling === undefined || res.scheduling.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tres.scheduling = [ scheduling ];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tres.scheduling.push(scheduling);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcorp.scheduling = res.scheduling;\r\n\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.scheduling.forEach((scheduling) => {\r\n\t\t\t\t\t\t\tscheduling.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionrequested || checkpoint.collectionrequested.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionrequested.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = check;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionrequested = checkpoint.collectionrequested;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/*Gerando historico */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.scheduling.forEach((scheduling) => {\r\n\t\t\t\t\t\t\tscheduling.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!transaction) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionrequested ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!trans || trans.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionrequested =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\tvar exist = await res.scheduling.find((x) => x._id == input[i]._id);\r\n\r\n\t\t\t\t\t\tif (!exist || exist.length <= 0) {\r\n\t\t\t\t\t\t\tres.scheduling.push(input[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push scheduling'));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\texist.set(input[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set scheduling'));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\r\n\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\tfor (var x = 0; input[i].qrCode.length > x; x++) {\r\n\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionrequested.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\tif (checkpoint.collectionrequested.qrCode[y].code === input[i].qrCode[x].code) {\r\n\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionrequested.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\texistQr.set(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcheckpoint.collectionrequested.qrCode.push(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tcheck.collectionrequested = checkpoint.collectionrequested;\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\tfor (var x = 0; input[i].qrCode.length > x; x++) {\r\n\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.qrCode.push(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\t\treturn res.scheduling;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync createorUpdateEntries(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\t\tif (res.entries === undefined || res.entries === null) {\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tCollector.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (res.entries === undefined || res.entries === null) {\r\n\t\t\t\t\t\t\t\t\tres.entries = input;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tres.entries = input;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcorp.entries = res.entries;\r\n\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.find({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tif (res.entries.sale && res.entries.sale.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.sale.forEach((sale) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint || checkpoint.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (res.entries.purchase && res.entries.purchase.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.purchase.forEach((purchase) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint || checkpoint.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) {\r\n\t\t\t\t\t\t\t\t\tconsole.log('ERE009');\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = checkpoint;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.find({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tif (res.entries.sale && res.entries.sale.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.sale.forEach((sale) => {\r\n\t\t\t\t\t\t\t\tif (transaction === undefined || transaction === null) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionperformed ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (res.entries.purchase && res.entries.purchase.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.purchase.forEach((purchase) => {\r\n\t\t\t\t\t\t\t\tif (transaction === undefined || transaction === null) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionperformed ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (trans === undefined || trans === null) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (input.sale !== undefined || input.sale.length > 0) {\r\n\t\t\t\t\t\tfor (i = 0; i < input.sale.length; i++) {\r\n\t\t\t\t\t\t\tvar exist = await res.entries.sale.find((x) => x._id == input.sale[i]._id);\r\n\t\t\t\t\t\t\tif (exist) {\r\n\t\t\t\t\t\t\t\texist.set(input.sale[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set entries sale'));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tawait res.entries.sale.push(input.sale[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push entries sale'));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.sale !== undefined && input.sale.length > 0) {\r\n\t\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode[y].code === input.sale[i].qrCode.code\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionperformed.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\t\texistQr.set(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.sale !== undefined && input.sale.length > 0) {\r\n\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (input.purchase !== undefined || input.purchase.length > 0) {\r\n\t\t\t\t\t\tfor (i = 0; i < input.purchase.length; i++) {\r\n\t\t\t\t\t\t\tvar exist = await res.entries.purchase.find((x) => x._id == input.purchase[i]._id);\r\n\t\t\t\t\t\t\tif (exist) {\r\n\t\t\t\t\t\t\t\texist.set(input.purchase[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set entries purchase'));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tawait res.entries.purchase.push(input.purchase[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push entries purchase'));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.purchase !== undefined && input.purchase.length > 0) {\r\n\t\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode[y].code ===\r\n\t\t\t\t\t\t\t\t\t\t\tinput.purchase[i].qrCode.code\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionperformed.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\t\texistQr.set(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne();\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.purchase !== undefined && input.purchase.length > 0) {\r\n\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Collector.findById(_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\t\treturn res.entries;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync createorUpdateResidueArrived(root, { _id, input }) {},\r\n\t\tasync createorUpdateDocument(root, { _id, input }) {\r\n\t\t\ttry {\r\n\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\tvar res = Collector.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\treject(next(new Error('ERE009')));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\t\t\tif (input[i]._id) {\r\n\t\t\t\t\t\t\t\t\tindex = corp.documents.findIndex((x) => x._id == input[i]._id);\r\n\t\t\t\t\t\t\t\t\tcorp.documents[index] = input[i];\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcorp.documents.push(input[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcorp.save();\r\n\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar res = await Collector.findById(_id);\r\n\t\t\t\treturn res.documents;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error('ERE009');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nasync function addID(_id, id, typeCorporation) {\r\n\tvar object = {\r\n\t\tunitsId: id\r\n\t};\r\n\tif (typeCorporation === Classification.Collector) {\r\n\t\tvar collector = await Collector.findById(_id);\r\n\t\tif (collector.units === undefined || collector.units.length <= 0) {\r\n\t\t\tcollector['units'] = [ object ];\r\n\t\t} else {\r\n\t\t\tcollector.units.push(object);\r\n\t\t}\r\n\t\tCollector.findOne(_id, function(err, coll) {\r\n\t\t\tif (!coll) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tcoll.units = collector.units;\r\n\t\t\t\tcoll.update(coll).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t} else if (typeCorporation === Classification.Provider) {\r\n\t\tvar provider = await Provider.findById(_id);\r\n\t\tif (provider.units === undefined || provider.units.length <= 0) {\r\n\t\t\tprovider['units'] = [ object ];\r\n\t\t} else {\r\n\t\t\tprovider.units.push(object);\r\n\t\t}\r\n\t\tProvider.findOne(_id, function(err, prov) {\r\n\t\t\tif (!prov) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tprov.units = provider.units;\r\n\t\t\t\tprov.update(prov).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\tvar corporation = await Corporation.findById(_id);\r\n\t\tif (corporation.units === undefined || corporation.units.length <= 0) {\r\n\t\t\tcorporation['units'] = [ object ];\r\n\t\t} else {\r\n\t\t\tcorporation.units.push(object);\r\n\t\t}\r\n\t\tawait Corporation.findById(_id, function(err, corp) {\r\n\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tcorp.units = corporation.units;\r\n\t\t\t\tcorp.update(corp).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574220605593
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\\\\collector.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\collector.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\models\\collector.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\collector.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
        "sourceFileName": "collector.model.js"
      }
    },
    "ast": null,
    "code": "mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst Documents = new Schema({\n  type: {\n    type: String\n  },\n  name: String,\n  archive: String,\n  daysNotification: Number,\n  date: Date,\n  expire: Boolean\n});\nconst Material = new Schema({\n  type: {\n    type: String\n  },\n  name: String,\n  weight: Number,\n  quantity: Number,\n  active: Boolean,\n  unity: String\n});\nconst QrCode = new Schema({\n  code: String,\n  date: Date,\n  material: Material\n});\nconst ResidueArrived = new Schema({\n  date: Date,\n  name: String,\n  cost: Number,\n  typeEntrie: String,\n  quantity: Number,\n  weight: Number,\n  amount: Number,\n  qrCode: QrCode,\n  observation: String,\n  confirmedByCorporation: String,\n  confirmedByCollector: String\n});\nconst ResiduesRegisterSchema = new Schema({\n  departments: [{\n    isChanged: Boolean,\n    name: String,\n    description: String,\n    active: Boolean,\n    qrCode: [QrCode]\n  }]\n});\nconst Entries = new Schema({\n  purchase: [{\n    date: Date,\n    name: String,\n    cost: Number,\n    typeEntrie: String,\n    quantity: Number,\n    weight: Number,\n    amount: Number,\n    qrCode: QrCode\n  }],\n  sale: [{\n    date: Date,\n    name: String,\n    cost: Number,\n    typeEntrie: String,\n    quantity: Number,\n    weight: Number,\n    amount: Number,\n    qrCode: QrCode,\n    _idColector: String\n  }]\n});\nvar CollectorSchema = new Schema({\n  picture: String,\n  company: String,\n  cnpj: String,\n  tradingName: String,\n  active: Boolean,\n  class: String,\n  phone: Number,\n  email: String,\n  classification: String,\n  cellPhone: Number,\n  creationDate: Date,\n  activationDate: Date,\n  verificationDate: Date,\n  location: {\n    country: String,\n    state: String,\n    latitude: Number,\n    longitude: Number,\n    cep: String,\n    publicPlace: String,\n    neighborhood: String,\n    number: Number,\n    county: String,\n    complement: String\n  },\n  units: [{\n    unitsId: String\n  }],\n  users: [{\n    name: String,\n    email: String,\n    profile: {\n      name: String,\n      access: [String]\n    },\n    password: String,\n    active: Boolean\n  }],\n  myProviders: [{\n    providerId: String\n  }],\n  departments: [{\n    name: String,\n    description: String,\n    active: Boolean,\n    isChanged: Boolean\n  }],\n  residuesRegister: ResiduesRegisterSchema,\n  scheduling: [{\n    hour: Date,\n    date: Date,\n    active: Boolean,\n    collector: {\n      _id: String,\n      company: String,\n      cnpj: String,\n      tradingName: String,\n      active: Boolean,\n      phone: Number,\n      cellPhone: Number,\n      class: String,\n      email: String,\n      classification: String\n    },\n    qrCode: [QrCode]\n  }],\n  entries: Entries,\n  residuesArrived: [ResidueArrived],\n  documents: [Documents]\n});\nmodule.exports = mongoose.model('collector', CollectorSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "collector.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "Documents",
        "type",
        "String",
        "name",
        "archive",
        "daysNotification",
        "Number",
        "date",
        "Date",
        "expire",
        "Boolean",
        "Material",
        "weight",
        "quantity",
        "active",
        "unity",
        "QrCode",
        "code",
        "material",
        "ResidueArrived",
        "cost",
        "typeEntrie",
        "amount",
        "qrCode",
        "observation",
        "confirmedByCorporation",
        "confirmedByCollector",
        "ResiduesRegisterSchema",
        "departments",
        "isChanged",
        "description",
        "Entries",
        "purchase",
        "sale",
        "_idColector",
        "CollectorSchema",
        "picture",
        "company",
        "cnpj",
        "tradingName",
        "class",
        "phone",
        "email",
        "classification",
        "cellPhone",
        "creationDate",
        "activationDate",
        "verificationDate",
        "location",
        "country",
        "state",
        "latitude",
        "longitude",
        "cep",
        "publicPlace",
        "neighborhood",
        "number",
        "county",
        "complement",
        "units",
        "unitsId",
        "users",
        "profile",
        "access",
        "password",
        "myProviders",
        "providerId",
        "residuesRegister",
        "scheduling",
        "hour",
        "collector",
        "_id",
        "entries",
        "residuesArrived",
        "documents",
        "module",
        "exports",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "sourcesContent": [
        "mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst Documents = new Schema({\r\n\ttype: { type: String },\r\n\tname: String,\r\n\tarchive: String,\r\n\tdaysNotification: Number,\r\n\tdate: Date,\r\n\texpire: Boolean\r\n});\r\n\r\nconst Material = new Schema({\r\n\ttype: { type: String },\r\n\tname: String,\r\n\tweight: Number,\r\n\tquantity: Number,\r\n\tactive: Boolean,\r\n\tunity: String\r\n});\r\n\r\nconst QrCode = new Schema({\r\n\tcode: String,\r\n\tdate: Date,\r\n\tmaterial: Material,\r\n});\r\n\r\nconst ResidueArrived = new Schema({\r\n\tdate: Date,\r\n\tname: String,\r\n\tcost: Number,\r\n\ttypeEntrie: String,\r\n\tquantity: Number,\r\n\tweight: Number,\r\n\tamount: Number,\r\n\tqrCode: QrCode,\r\n\tobservation: String,\r\n\tconfirmedByCorporation: String,\r\n\tconfirmedByCollector: String\r\n});\r\n\r\nconst ResiduesRegisterSchema = new Schema({\r\n\tdepartments: [\r\n\t\t{\r\n\t\t\tisChanged: Boolean,\r\n\t\t\tname: String,\r\n\t\t\tdescription: String,\r\n\t\t\tactive: Boolean,\r\n\t\t\tqrCode: [ QrCode ]\r\n\t\t}\r\n\t]\r\n});\r\n\r\nconst Entries = new Schema({\r\n\tpurchase: [\r\n\t\t{\r\n\t\t\tdate: Date,\r\n\t\t\tname: String,\r\n\t\t\tcost: Number,\r\n\t\t\ttypeEntrie: String,\r\n\t\t\tquantity: Number,\r\n\t\t\tweight: Number,\r\n\t\t\tamount: Number,\r\n\t\t\tqrCode: QrCode\r\n\t\t}\r\n\t],\r\n\tsale: [\r\n\t\t{\r\n\t\t\tdate: Date,\r\n\t\t\tname: String,\r\n\t\t\tcost: Number,\r\n\t\t\ttypeEntrie: String,\r\n\t\t\tquantity: Number,\r\n\t\t\tweight: Number,\r\n\t\t\tamount: Number,\r\n\t\t\tqrCode: QrCode,\r\n\t\t\t_idColector:String,\r\n\t\t}\r\n\t]\r\n});\r\n\r\nvar CollectorSchema = new Schema({\r\n\tpicture: String,\r\n\tcompany: String,\r\n\tcnpj: String,\r\n\ttradingName: String,\r\n\tactive: Boolean,\r\n\tclass: String,\r\n\tphone: Number,\r\n\temail: String,\r\n\tclassification: String,\r\n\tcellPhone: Number,\r\n\tcreationDate: Date,\r\n\tactivationDate: Date,\r\n\tverificationDate: Date,\r\n\tlocation: {\r\n\t\tcountry: String,\r\n\t\tstate: String,\r\n\t\tlatitude: Number,\r\n\t\tlongitude: Number,\r\n\t\tcep: String,\r\n\t\tpublicPlace: String,\r\n\t\tneighborhood: String,\r\n\t\tnumber: Number,\r\n\t\tcounty: String,\r\n\t\tcomplement: String\r\n\t},\r\n\tunits: [\r\n\t\t{\r\n\t\t\tunitsId: String\r\n\t\t}\r\n\t],\r\n\tusers: [\r\n\t\t{\r\n\t\t\tname: String,\r\n\t\t\temail: String,\r\n\t\t\tprofile: {\r\n\t\t\t\tname: String,\r\n\t\t\t\taccess: [ String ]\r\n\t\t\t},\r\n\t\t\tpassword: String,\r\n\t\t\tactive: Boolean\r\n\t\t}\r\n\t],\r\n\tmyProviders: [\r\n\t\t{\r\n\t\t\tproviderId: String\r\n\t\t}\r\n\t],\r\n\tdepartments: [\r\n\t\t{\r\n\t\t\tname: String,\r\n\t\t\tdescription: String,\r\n\t\t\tactive: Boolean,\r\n\t\t\tisChanged: Boolean\r\n\t\t}\r\n\t],\r\n\r\n\tresiduesRegister: ResiduesRegisterSchema,\r\n\tscheduling: [\r\n\t\t{\r\n\t\t\thour: Date,\r\n\t\t\tdate: Date,\r\n\t\t\tactive: Boolean,\r\n\t\t\tcollector: {\r\n\t\t\t\t_id: String,\r\n\t\t\t\tcompany: String,\r\n\t\t\t\tcnpj: String,\r\n\t\t\t\ttradingName: String,\r\n\t\t\t\tactive: Boolean,\r\n\t\t\t\tphone: Number,\r\n\t\t\t\tcellPhone: Number,\r\n\t\t\t\tclass: String,\r\n\t\t\t\temail: String,\r\n\t\t\t\tclassification: String\r\n\t\t\t},\r\n\t\t\tqrCode: [ QrCode ]\r\n\t\t}\r\n\t],\r\n\tentries: Entries,\r\n\tresiduesArrived: [ResidueArrived],\r\n\tdocuments: [ Documents ]\r\n});\r\n\r\nmodule.exports = mongoose.model('collector', CollectorSchema);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574221035050
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\\\\checkpoint.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\checkpoint.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\models\\checkpoint.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\checkpoint.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
        "sourceFileName": "checkpoint.model.js"
      }
    },
    "ast": null,
    "code": "mongoose = require('mongoose');\nconst Schema = mongoose.Schema; //a empresa que cria um pedido de residuo gera um id para o checkpoint\n//se não existe nenhum com esse _id cria um novo\n//se for a empresa que tem o id pode ver tudo que tem na lista\n//se for o coletor verificar se ele esta no pedido de cada empresa e carregar as que ele faz parte\n\nconst CheckPointSchema = new Schema({\n  _idCorporation: String,\n  wastegenerated: {\n    qrCode: [{\n      code: String,\n      date: Date,\n      material: {\n        type: {\n          type: String\n        },\n        name: String,\n        weight: Number,\n        quantity: Number,\n        active: Boolean,\n        unity: String\n      }\n    }]\n  },\n  collectionrequested: {\n    qrCode: [{\n      code: String,\n      date: Date,\n      material: {\n        type: {\n          type: String\n        },\n        name: String,\n        weight: Number,\n        quantity: Number,\n        active: Boolean,\n        unity: String\n      }\n    }]\n  },\n  collectionperformed: {\n    qrCode: [{\n      code: String,\n      date: Date,\n      material: {\n        type: {\n          type: String\n        },\n        name: String,\n        weight: Number,\n        quantity: Number,\n        active: Boolean,\n        unity: String\n      }\n    }]\n  },\n  arrivedcollector: {\n    qrCode: [{\n      code: String,\n      date: Date,\n      material: {\n        type: {\n          type: String\n        },\n        name: String,\n        weight: Number,\n        quantity: Number,\n        active: Boolean,\n        unity: String\n      }\n    }]\n  },\n  insorting: {\n    qrCode: [{\n      code: String,\n      date: Date,\n      material: {\n        type: {\n          type: String\n        },\n        name: String,\n        weight: Number,\n        quantity: Number,\n        active: Boolean,\n        unity: String\n      }\n    }]\n  },\n  completedestination: {\n    qrCode: [{\n      code: String,\n      date: Date,\n      material: {\n        type: {\n          type: String\n        },\n        name: String,\n        weight: Number,\n        quantity: Number,\n        active: Boolean,\n        unity: String\n      }\n    }]\n  }\n});\nmodule.exports = mongoose.model('checkpoint', CheckPointSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrcG9pbnQubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiQ2hlY2tQb2ludFNjaGVtYSIsIl9pZENvcnBvcmF0aW9uIiwiU3RyaW5nIiwid2FzdGVnZW5lcmF0ZWQiLCJxckNvZGUiLCJjb2RlIiwiZGF0ZSIsIkRhdGUiLCJtYXRlcmlhbCIsInR5cGUiLCJuYW1lIiwid2VpZ2h0IiwiTnVtYmVyIiwicXVhbnRpdHkiLCJhY3RpdmUiLCJCb29sZWFuIiwidW5pdHkiLCJjb2xsZWN0aW9ucmVxdWVzdGVkIiwiY29sbGVjdGlvbnBlcmZvcm1lZCIsImFycml2ZWRjb2xsZWN0b3IiLCJpbnNvcnRpbmciLCJjb21wbGV0ZWRlc3RpbmF0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFsQjtBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QixDLENBRUE7QUFDQTtBQUNBO0FBRUE7O0FBRUEsTUFBTUMsZ0JBQWdCLEdBQUcsSUFBSUQsTUFBSixDQUFXO0FBQ25DRSxFQUFBQSxjQUFjLEVBQUVDLE1BRG1CO0FBRW5DQyxFQUFBQSxjQUFjLEVBQUU7QUFDZkMsSUFBQUEsTUFBTSxFQUFFLENBQ1A7QUFDQ0MsTUFBQUEsSUFBSSxFQUFFSCxNQURQO0FBRUNJLE1BQUFBLElBQUksRUFBRUMsSUFGUDtBQUdDQyxNQUFBQSxRQUFRLEVBQUU7QUFDVEMsUUFBQUEsSUFBSSxFQUFFO0FBQUVBLFVBQUFBLElBQUksRUFBRVA7QUFBUixTQURHO0FBRVRRLFFBQUFBLElBQUksRUFBRVIsTUFGRztBQUdUUyxRQUFBQSxNQUFNLEVBQUVDLE1BSEM7QUFJVEMsUUFBQUEsUUFBUSxFQUFFRCxNQUpEO0FBS1RFLFFBQUFBLE1BQU0sRUFBRUMsT0FMQztBQU1UQyxRQUFBQSxLQUFLLEVBQUVkO0FBTkU7QUFIWCxLQURPO0FB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USxDQUFDMkIsS0FBVCxDQUFlLFlBQWYsRUFBNkJ4QixnQkFBN0IsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXHJlY29uc2lkZXJlXFxyZWNvbnNpZGVyZS1jb3Jwb3JhdGlvbi1hcGlcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuLy9hIGVtcHJlc2EgcXVlIGNyaWEgdW0gcGVkaWRvIGRlIHJlc2lkdW8gZ2VyYSB1bSBpZCBwYXJhIG8gY2hlY2twb2ludFxyXG4vL3NlIG7Do28gZXhpc3RlIG5lbmh1bSBjb20gZXNzZSBfaWQgY3JpYSB1bSBub3ZvXHJcbi8vc2UgZm9yIGEgZW1wcmVzYSBxdWUgdGVtIG8gaWQgcG9kZSB2ZXIgdHVkbyBxdWUgdGVtIG5hIGxpc3RhXHJcblxyXG4vL3NlIGZvciBvIGNvbGV0b3IgdmVyaWZpY2FyIHNlIGVsZSBlc3RhIG5vIHBlZGlkbyBkZSBjYWRhIGVtcHJlc2EgZSBjYXJyZWdhciBhcyBxdWUgZWxlIGZheiBwYXJ0ZVxyXG5cclxuY29uc3QgQ2hlY2tQb2ludFNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG5cdF9pZENvcnBvcmF0aW9uOiBTdHJpbmcsXHJcblx0d2FzdGVnZW5lcmF0ZWQ6IHtcclxuXHRcdHFyQ29kZTogW1xyXG5cdFx0XHR7XHJcblx0XHRcdFx0Y29kZTogU3RyaW5nLFxyXG5cdFx0XHRcdGRhdGU6IERhdGUsXHJcblx0XHRcdFx0bWF0ZXJpYWw6IHtcclxuXHRcdFx0XHRcdHR5cGU6IHsgdHlwZTogU3RyaW5nIH0sXHJcblx0XHRcdFx0XHRuYW1lOiBTdHJpbmcsXHJcblx0XHRcdFx0XHR3ZWlnaHQ6IE51bWJlcixcclxuXHRcdFx0XHRcdHF1YW50aXR5OiBOdW1iZXIsXHJcblx0XHRcdFx0XHRhY3RpdmU6IEJvb2xlYW4sXHJcblx0XHRcdFx0XHR1bml0eTogU3RyaW5nXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRdXHJcblx0fSxcclxuXHRjb2xsZWN0aW9ucmVxdWVzdGVkOiB7XHJcblx0XHRxckNvZGU6IFtcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGNvZGU6IFN0cmluZyxcclxuXHRcdFx0XHRkYXRlOiBEYXRlLFxyXG5cdFx0XHRcdG1hdGVyaWFsOiB7XHJcblx0XHRcdFx0XHR0eXBlOiB7IHR5cGU6IFN0cmluZyB9LFxyXG5cdFx0XHRcdFx0bmFtZTogU3RyaW5nLFxyXG5cdFx0XHRcdFx0d2VpZ2h0OiBOdW1iZXIsXHJcblx0XHRcdFx0XHRxdWFudGl0eTogTnVtYmVyLFxyXG5cdFx0XHRcdFx0YWN0aXZlOiBCb29sZWFuLFxyXG5cdFx0XHRcdFx0dW5pdHk6IFN0cmluZ1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XVxyXG5cdH0sXHJcblx0Y29sbGVjdGlvbnBlcmZvcm1lZDoge1xyXG5cdFx0cXJDb2RlOiBbXHJcblx0XHRcdHtcclxuXHRcdFx0XHRjb2RlOiBTdHJpbmcsXHJcblx0XHRcdFx0ZGF0ZTogRGF0ZSxcclxuXHRcdFx0XHRtYXRlcmlhbDoge1xyXG5cdFx0XHRcdFx0dHlwZTogeyB0eXBlOiBTdHJpbmcgfSxcclxuXHRcdFx0XHRcdG5hbWU6IFN0cmluZyxcclxuXHRcdFx0XHRcdHdlaWdodDogTnVtYmVyLFxyXG5cdFx0XHRcdFx0cXVhbnRpdHk6IE51bWJlcixcclxuXHRcdFx0XHRcdGFjdGl2ZTogQm9vbGVhbixcclxuXHRcdFx0XHRcdHVuaXR5OiBTdHJpbmdcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdF1cclxuXHR9LFxyXG5cdGFycml2ZWRjb2xsZWN0b3I6IHtcclxuXHRcdHFyQ29kZTogW1xyXG5cdFx0XHR7XHJcblx0XHRcdFx0Y29kZTogU3RyaW5nLFxyXG5cdFx0XHRcdGRhdGU6IERhdGUsXHJcblx0XHRcdFx0bWF0ZXJpYWw6IHtcclxuXHRcdFx0XHRcdHR5cGU6IHsgdHlwZTogU3RyaW5nIH0sXHJcblx0XHRcdFx0XHRuYW1lOiBTdHJpbmcsXHJcblx0XHRcdFx0XHR3ZWlnaHQ6IE51bWJlcixcclxuXHRcdFx0XHRcdHF1YW50aXR5OiBOdW1iZXIsXHJcblx0XHRcdFx0XHRhY3RpdmU6IEJvb2xlYW4sXHJcblx0XHRcdFx0XHR1bml0eTogU3RyaW5nXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRdXHJcblx0fSxcclxuXHRpbnNvcnRpbmc6IHtcclxuXHRcdHFyQ29kZTogW1xyXG5cdFx0XHR7XHJcblx0XHRcdFx0Y29kZTogU3RyaW5nLFxyXG5cdFx0XHRcdGRhdGU6IERhdGUsXHJcblx0XHRcdFx0bWF0ZXJpYWw6IHtcclxuXHRcdFx0XHRcdHR5cGU6IHsgdHlwZTogU3RyaW5nIH0sXHJcblx0XHRcdFx0XHRuYW1lOiBTdHJpbmcsXHJcblx0XHRcdFx0XHR3ZWlnaHQ6IE51bWJlcixcclxuXHRcdFx0XHRcdHF1YW50aXR5OiBOdW1iZXIsXHJcblx0XHRcdFx0XHRhY3RpdmU6IEJvb2xlYW4sXHJcblx0XHRcdFx0XHR1bml0eTogU3RyaW5nXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRdXHJcblx0fSxcclxuXHRjb21wbGV0ZWRlc3RpbmF0aW9uOiB7XHJcblx0XHRxckNvZGU6IFtcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGNvZGU6IFN0cmluZyxcclxuXHRcdFx0XHRkYXRlOiBEYXRlLFxyXG5cdFx0XHRcdG1hdGVyaWFsOiB7XHJcblx0XHRcdFx0XHR0eXBlOiB7IHR5cGU6IFN0cmluZyB9LFxyXG5cdFx0XHRcdFx0bmFtZTogU3RyaW5nLFxyXG5cdFx0XHRcdFx0d2VpZ2h0OiBOdW1iZXIsXHJcblx0XHRcdFx0XHRxdWFudGl0eTogTnVtYmVyLFxyXG5cdFx0XHRcdFx0YWN0aXZlOiBCb29sZWFuLFxyXG5cdFx0XHRcdFx0dW5pdHk6IFN0cmluZ1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XVxyXG5cdH1cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdjaGVja3BvaW50JywgQ2hlY2tQb2ludFNjaGVtYSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkpoint.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "CheckPointSchema",
        "_idCorporation",
        "String",
        "wastegenerated",
        "qrCode",
        "code",
        "date",
        "Date",
        "material",
        "type",
        "name",
        "weight",
        "Number",
        "quantity",
        "active",
        "Boolean",
        "unity",
        "collectionrequested",
        "collectionperformed",
        "arrivedcollector",
        "insorting",
        "completedestination",
        "module",
        "exports",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "sourcesContent": [
        "mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\n//a empresa que cria um pedido de residuo gera um id para o checkpoint\r\n//se não existe nenhum com esse _id cria um novo\r\n//se for a empresa que tem o id pode ver tudo que tem na lista\r\n\r\n//se for o coletor verificar se ele esta no pedido de cada empresa e carregar as que ele faz parte\r\n\r\nconst CheckPointSchema = new Schema({\r\n\t_idCorporation: String,\r\n\twastegenerated: {\r\n\t\tqrCode: [\r\n\t\t\t{\r\n\t\t\t\tcode: String,\r\n\t\t\t\tdate: Date,\r\n\t\t\t\tmaterial: {\r\n\t\t\t\t\ttype: { type: String },\r\n\t\t\t\t\tname: String,\r\n\t\t\t\t\tweight: Number,\r\n\t\t\t\t\tquantity: Number,\r\n\t\t\t\t\tactive: Boolean,\r\n\t\t\t\t\tunity: String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\tcollectionrequested: {\r\n\t\tqrCode: [\r\n\t\t\t{\r\n\t\t\t\tcode: String,\r\n\t\t\t\tdate: Date,\r\n\t\t\t\tmaterial: {\r\n\t\t\t\t\ttype: { type: String },\r\n\t\t\t\t\tname: String,\r\n\t\t\t\t\tweight: Number,\r\n\t\t\t\t\tquantity: Number,\r\n\t\t\t\t\tactive: Boolean,\r\n\t\t\t\t\tunity: String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\tcollectionperformed: {\r\n\t\tqrCode: [\r\n\t\t\t{\r\n\t\t\t\tcode: String,\r\n\t\t\t\tdate: Date,\r\n\t\t\t\tmaterial: {\r\n\t\t\t\t\ttype: { type: String },\r\n\t\t\t\t\tname: String,\r\n\t\t\t\t\tweight: Number,\r\n\t\t\t\t\tquantity: Number,\r\n\t\t\t\t\tactive: Boolean,\r\n\t\t\t\t\tunity: String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\tarrivedcollector: {\r\n\t\tqrCode: [\r\n\t\t\t{\r\n\t\t\t\tcode: String,\r\n\t\t\t\tdate: Date,\r\n\t\t\t\tmaterial: {\r\n\t\t\t\t\ttype: { type: String },\r\n\t\t\t\t\tname: String,\r\n\t\t\t\t\tweight: Number,\r\n\t\t\t\t\tquantity: Number,\r\n\t\t\t\t\tactive: Boolean,\r\n\t\t\t\t\tunity: String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\tinsorting: {\r\n\t\tqrCode: [\r\n\t\t\t{\r\n\t\t\t\tcode: String,\r\n\t\t\t\tdate: Date,\r\n\t\t\t\tmaterial: {\r\n\t\t\t\t\ttype: { type: String },\r\n\t\t\t\t\tname: String,\r\n\t\t\t\t\tweight: Number,\r\n\t\t\t\t\tquantity: Number,\r\n\t\t\t\t\tactive: Boolean,\r\n\t\t\t\t\tunity: String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\tcompletedestination: {\r\n\t\tqrCode: [\r\n\t\t\t{\r\n\t\t\t\tcode: String,\r\n\t\t\t\tdate: Date,\r\n\t\t\t\tmaterial: {\r\n\t\t\t\t\ttype: { type: String },\r\n\t\t\t\t\tname: String,\r\n\t\t\t\t\tweight: Number,\r\n\t\t\t\t\tquantity: Number,\r\n\t\t\t\t\tactive: Boolean,\r\n\t\t\t\t\tunity: String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n});\r\n\r\nmodule.exports = mongoose.model('checkpoint', CheckPointSchema);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574221034563
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\\\\transactionhistory.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\transactionhistory.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\models\\transactionhistory.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\transactionhistory.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
        "sourceFileName": "transactionhistory.model.js"
      }
    },
    "ast": null,
    "code": "mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst TransactionHistorySchema = new Schema({\n  _idCorporation: String,\n  checkPoints: {\n    wastegenerated: {\n      qrCode: [{\n        date: {\n          type: Date,\n          required: true,\n          immutable: true\n        },\n        code: {\n          type: String,\n          required: true,\n          immutable: true\n        },\n        material: {\n          type: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          name: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          weight: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          quantity: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          active: {\n            type: Boolean,\n            required: true,\n            immutable: true\n          },\n          unity: {\n            type: String,\n            required: true,\n            immutable: true\n          }\n        }\n      }]\n    },\n    collectionrequested: {\n      qrCode: [{\n        date: {\n          type: Date,\n          required: true,\n          immutable: true\n        },\n        code: {\n          type: String,\n          required: true,\n          immutable: true\n        },\n        material: {\n          type: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          name: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          weight: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          quantity: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          active: {\n            type: Boolean,\n            required: true,\n            immutable: true\n          },\n          unity: {\n            type: String,\n            required: true,\n            immutable: true\n          }\n        }\n      }]\n    },\n    collectionperformed: {\n      qrCode: [{\n        date: {\n          type: Date,\n          required: true,\n          immutable: true\n        },\n        code: {\n          type: String,\n          required: true,\n          immutable: true\n        },\n        confirmedByCorporation: {\n          type: String,\n          required: true,\n          immutable: true\n        },\n        confirmedByCollector: {\n          type: String,\n          required: true,\n          immutable: true\n        },\n        material: {\n          type: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          name: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          weight: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          quantity: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          active: {\n            type: Boolean,\n            required: true,\n            immutable: true\n          },\n          unity: {\n            type: String,\n            required: true,\n            immutable: true\n          }\n        }\n      }]\n    },\n    arrivedcollector: {\n      qrCode: [{\n        date: {\n          type: Date,\n          required: true,\n          immutable: true\n        },\n        code: {\n          type: String,\n          required: true,\n          immutable: true\n        },\n        material: {\n          type: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          name: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          weight: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          quantity: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          active: {\n            type: Boolean,\n            required: true,\n            immutable: true\n          },\n          unity: {\n            type: String,\n            required: true,\n            immutable: true\n          }\n        }\n      }]\n    },\n    insorting: {\n      qrCode: [{\n        date: {\n          type: Date,\n          required: true,\n          immutable: true\n        },\n        code: {\n          type: String,\n          required: true,\n          immutable: true\n        },\n        material: {\n          type: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          name: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          weight: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          quantity: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          active: {\n            type: Boolean,\n            required: true,\n            immutable: true\n          },\n          unity: {\n            type: String,\n            required: true,\n            immutable: true\n          }\n        }\n      }]\n    },\n    completedestination: {\n      qrCode: [{\n        date: {\n          type: Date,\n          required: true,\n          immutable: true\n        },\n        code: {\n          type: String,\n          required: true,\n          immutable: true\n        },\n        material: {\n          type: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          name: {\n            type: String,\n            required: true,\n            immutable: true\n          },\n          weight: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          quantity: {\n            type: Number,\n            required: true,\n            immutable: true\n          },\n          active: {\n            type: Boolean,\n            required: true,\n            immutable: true\n          },\n          unity: {\n            type: String,\n            required: true,\n            immutable: true\n          }\n        }\n      }]\n    }\n  }\n});\nmodule.exports = mongoose.model('transactionhistory', TransactionHistorySchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "transactionhistory.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "TransactionHistorySchema",
        "_idCorporation",
        "String",
        "checkPoints",
        "wastegenerated",
        "qrCode",
        "date",
        "type",
        "Date",
        "required",
        "immutable",
        "code",
        "material",
        "name",
        "weight",
        "Number",
        "quantity",
        "active",
        "Boolean",
        "unity",
        "collectionrequested",
        "collectionperformed",
        "confirmedByCorporation",
        "confirmedByCollector",
        "arrivedcollector",
        "insorting",
        "completedestination",
        "module",
        "exports",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "sourcesContent": [
        "mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst TransactionHistorySchema = new Schema({\r\n\t_idCorporation: String,\r\n\tcheckPoints: {\r\n\t\twastegenerated: {\r\n\t\t\tqrCode: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdate: { type: Date, required: true, immutable: true },\r\n\t\t\t\t\tcode: { type: String, required: true, immutable: true },\r\n\t\t\t\t\tmaterial: {\r\n\t\t\t\t\t\ttype: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tname: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tweight: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tquantity: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tactive: { type: Boolean, required: true, immutable: true },\r\n\t\t\t\t\t\tunity: { type: String, required: true, immutable: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tcollectionrequested: {\r\n\t\t\tqrCode: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdate: { type: Date, required: true, immutable: true },\r\n\t\t\t\t\tcode: { type: String, required: true, immutable: true },\r\n\t\t\t\t\tmaterial: {\r\n\t\t\t\t\t\ttype: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tname: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tweight: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tquantity: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tactive: { type: Boolean, required: true, immutable: true },\r\n\t\t\t\t\t\tunity: { type: String, required: true, immutable: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tcollectionperformed: {\r\n\t\t\tqrCode: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdate: { type: Date, required: true, immutable: true },\r\n\t\t\t\t\tcode: { type: String, required: true, immutable: true },\r\n\t\t\t\t\tconfirmedByCorporation: { type: String, required: true, immutable: true },\r\n\t\t\t\t\tconfirmedByCollector: { type: String, required: true, immutable: true },\r\n\t\t\t\t\tmaterial: {\r\n\t\t\t\t\t\ttype: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tname: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tweight: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tquantity: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tactive: { type: Boolean, required: true, immutable: true },\r\n\t\t\t\t\t\tunity: { type: String, required: true, immutable: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tarrivedcollector: {\r\n\t\t\tqrCode: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdate: { type: Date, required: true, immutable: true },\r\n\t\t\t\t\tcode: { type: String, required: true, immutable: true },\r\n\t\t\t\t\tmaterial: {\r\n\t\t\t\t\t\ttype: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tname: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tweight: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tquantity: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tactive: { type: Boolean, required: true, immutable: true },\r\n\t\t\t\t\t\tunity: { type: String, required: true, immutable: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tinsorting: {\r\n\t\t\tqrCode: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdate: { type: Date, required: true, immutable: true },\r\n\t\t\t\t\tcode: { type: String, required: true, immutable: true },\r\n\t\t\t\t\tmaterial: {\r\n\t\t\t\t\t\ttype: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tname: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tweight: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tquantity: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tactive: { type: Boolean, required: true, immutable: true },\r\n\t\t\t\t\t\tunity: { type: String, required: true, immutable: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tcompletedestination: {\r\n\t\t\tqrCode: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdate: { type: Date, required: true, immutable: true },\r\n\t\t\t\t\tcode: { type: String, required: true, immutable: true },\r\n\t\t\t\t\tmaterial: {\r\n\t\t\t\t\t\ttype: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tname: { type: String, required: true, immutable: true },\r\n\t\t\t\t\t\tweight: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tquantity: { type: Number, required: true, immutable: true },\r\n\t\t\t\t\t\tactive: { type: Boolean, required: true, immutable: true },\r\n\t\t\t\t\t\tunity: { type: String, required: true, immutable: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n});\r\n\r\nmodule.exports = mongoose.model('transactionhistory', TransactionHistorySchema);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574108598467
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\indexCorporation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCorporation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCorporation.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCorporation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "indexCorporation.js"
      }
    },
    "ast": null,
    "code": "const corporation = require('./corporation/Mutation/corporation');\n\nmodule.exports = { ...corporation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Q29ycG9yYXRpb24uanMiXSwibmFtZXMiOlsiY29ycG9yYXRpb24iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsb0NBQUQsQ0FBM0I7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixFQUNoQixHQUFHSDtBQURhLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxyZWNvbnNpZGVyZVxccmVjb25zaWRlcmUtY29ycG9yYXRpb24tYXBpXFxyZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb3Jwb3JhdGlvbiA9IHJlcXVpcmUoJy4vY29ycG9yYXRpb24vTXV0YXRpb24vY29ycG9yYXRpb24nKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG5cdC4uLmNvcnBvcmF0aW9uXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexCorporation.js"
      ],
      "names": [
        "corporation",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EAChB,GAAGH;AADa,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const corporation = require('./corporation/Mutation/corporation');\r\n\r\nmodule.exports = {\r\n\t...corporation\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574105584170
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\corporation\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\corporation\\\\Mutation\\\\corporation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation\\corporation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation\\corporation.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation\\corporation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation",
        "sourceFileName": "corporation.js"
      }
    },
    "ast": null,
    "code": "var Corporation = require('../../../models/corporation.model');\n\nvar Collector = require('../../../models/collector.model');\n\nvar Provider = require('../../../models/provider.model');\n\nvar CheckPoint = require('../../../models/checkpoint.model');\n\nvar TransactionHistory = require('../../../models/transactionhistory.model');\n\nmongoose = require('mongoose');\nvar Classification = {\n  Provider: 'Fornecedor',\n  Collector: 'Empresa Coletora'\n};\nmodule.exports = corporation = {\n  Query: {\n    async getCorporation(root, {\n      _id\n    }) {\n      return await Corporation.findById(_id);\n    },\n\n    async getCorporationByUser(root, {\n      _id\n    }) {\n      var res = await Corporation.findOne({\n        'users._id': _id\n      });\n\n      if (!res) {\n        return undefined;\n      } else {\n        return res;\n      }\n    },\n\n    async allCorporations() {\n      return await Corporation.find();\n    },\n\n    async allUnits(root, {\n      _id\n    }) {\n      var res = await Corporation.findById(_id);\n\n      if (res) {\n        var unit;\n        var units = [];\n\n        for (var i = 0; res.units.length > i; i++) {\n          unit = undefined;\n          unit = await Corporation.findById(res.units[i].unitsId);\n\n          if (!unit) {\n            unit = await Collector.findById(res.units[i].unitsId);\n          }\n\n          if (!unit) {\n            unit = await Provider.findById(res.units[i].unitsId);\n          }\n\n          if (unit) {\n            units.push(unit);\n          }\n        }\n\n        return units;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allDocuments(root, {\n      _id\n    }) {\n      var res = await Corporation.findById(_id);\n\n      if (res) {\n        return res.documents;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allDepartments(root, {\n      _id\n    }) {\n      var res = await Corporation.findById(_id);\n\n      if (res) {\n        return res.departments;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allResiduesRegister(root, {\n      _id\n    }) {\n      var res = await Corporation.findById(_id);\n\n      if (res) {\n        return res.residuesRegister;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allResidueArrived(root, {\n      _id\n    }) {\n      var res = await Corporation.findById(_id);\n\n      if (res) {\n        return res.residuesPerformed;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allSchedulings(root, {\n      _id\n    }) {\n      var res = await Corporation.findById(_id);\n\n      if (res) {\n        return res.scheduling;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allEntries(root, {\n      _id\n    }) {\n      var res = await Corporation.findById(_id);\n\n      if (res) {\n        return res.entries;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allProvidersId(root, {\n      _id\n    }) {\n      var res = await Corporation.findById(_id);\n\n      if (res) {\n        return res.myProviders;\n      } else {\n        return undefined;\n      }\n    }\n\n  },\n  Mutation: {\n    async createCorporation(root, {\n      input\n    }) {\n      var res = await Corporation.findOne({\n        'users.email': input.users[0].email\n      });\n\n      if (res) {\n        throw new Error('WRE005');\n      } else {\n        return await Corporation.create(input);\n      }\n    },\n\n    async createCorporationUnit(root, {\n      _id,\n      typeCorporation,\n      input\n    }) {\n      var res = await Corporation.findById(_id);\n\n      for (var i = 0; input.length > i; i++) {\n        for (var x = 0; res.units.length > x; x++) {\n          if (input[i].users[0].email === res.units[x].email) {\n            throw new Error('WRE005');\n          }\n        }\n      }\n\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n\n        for (var i = 0; input.length > i; i++) {\n          var id = undefined;\n          var returned = await Corporation.create(input[i]).then(x => {\n            id = x._id;\n          });\n          addID(_id, id, typeCorporation);\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        return await Corporation.findById(_id);\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async updateCorporation(root, {\n      _id,\n      input\n    }) {\n      return await Corporation.findOneAndUpdate({\n        _id\n      }, input, {\n        new: true\n      });\n    },\n\n    async deleteCorporation(root, {\n      _id\n    }) {// return await Collector.findOneAndRemove({\n      // \t_id\n      // });\n    },\n\n    async createorUpdateDepartment(root, {\n      _id,\n      input\n    }) {\n      try {\n        res = await Corporation.findById(_id, function (err, corp) {\n          if (err) {\n            return next(new Error('ERE009'));\n          } else {\n            for (var i = 0; input.length > i; i++) {\n              if (input[i]._id) {\n                index = corp.departments.findIndex(x => x._id == input[i]._id);\n\n                if (index) {\n                  corp.departments[index] = input[i];\n                } else if (!corp.departments || corp.departments.length <= 0) {\n                  corp.departments = [input[i]];\n                }\n              } else {\n                if (!corp.departments || corp.departments.length <= 0) {\n                  corp.departments = [input[i]];\n                } else {\n                  corp.departments.push(input[i]);\n                }\n              }\n            }\n\n            corp.save();\n            return;\n          }\n        });\n        var res = await Corporation.findById(_id);\n        return res.departments;\n      } catch (error) {\n        throw new Error('ERE009');\n      }\n    },\n\n    async createorUpdateResiduesRegister(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Corporation.findById(_id);\n        var returnElement;\n\n        if (!res.residuesRegister || !res.residuesRegister.departments || res.residuesRegister.departments.length <= 0) {\n          var elementSaved;\n          returnElement = await new Promise((resolve, reject) => {\n            Corporation.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                input.departments.forEach(department => {\n                  if (!res.residuesRegister || !res.residuesRegister.departments || res.residuesRegister.departments.length <= 0) {\n                    res['residuesRegister'] = new Object();\n                    var depart = {\n                      _id: department._id,\n                      name: department.name,\n                      isChanged: false,\n                      description: department.description,\n                      active: department.active,\n                      qrCode: []\n                    };\n                    res['residuesRegister']['departments'] = [depart];\n                  } else {\n                    var depart = {\n                      _id: department._id,\n                      name: department.name,\n                      isChanged: false,\n                      description: department.description,\n                      active: department.active,\n                      qrCode: []\n                    };\n                    var exist = res.residuesRegister.departments.find(x => x.name === depart.name);\n\n                    if (!exist) {\n                      res.residuesRegister.departments.push(depart);\n                    }\n                  }\n                });\n                input.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    res.residuesRegister.departments.forEach(departmentDB => {\n                      if (department.name === departmentDB.name) {\n                        departmentDB.qrCode.push(qrCode);\n                      }\n                    });\n                  });\n                });\n                corp.residuesRegister = res.residuesRegister;\n                corp.update(corp).then(x => {\n                  resolve(corp);\n                });\n              }\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.findOne({\n            _idCorporation: _id\n          });\n          var isNew = false;\n          res = await Corporation.findById(_id);\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            res.residuesRegister.departments.forEach(department => {\n              department.qrCode.forEach(qrCode => {\n                if (!checkpoint) {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  checkpoint = new Object({\n                    _idCorporation: _id,\n                    wastegenerated: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!checkpoint.wastegenerated || checkpoint.wastegenerated.length <= 0) {\n                    checkpoint = new Object({\n                      _idCorporation: _id,\n                      wastegenerated: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.wastegenerated.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne(function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  if (!check || check.length <= 0) {\n                    check = check;\n                  } else {\n                    check.wastegenerated = checkpoint.wastegenerated;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /*Gerando historico */\n\n          var transaction = await TransactionHistory.findOne({\n            _idCorporation: _id\n          });\n          var isNew = false;\n          res = await Corporation.findById(_id);\n          var history = await new Promise(async (resolve, reject) => {\n            res.residuesRegister.departments.forEach(department => {\n              department.qrCode.forEach(qrCode => {\n                if (!transaction) {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  transaction = new Object({\n                    _idCorporation: _id,\n                    checkPoints: new Object({\n                      wastegenerated: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (transaction.checkPoints.wastegenerated === undefined || transaction.checkPoints.wastegenerated.length <= 0) {\n                    transaction = new Object({\n                      _idCorporation: _id,\n                      checkPoints: new Object({\n                        wastegenerated: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.wastegenerated.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne(function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (trans === undefined || trans.length <= 0) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.wastegenerated = transaction.checkPoints.wastegenerated;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          var removed = false;\n\n          for (i = 0; input.departments.length > i; i++) {\n            if (input.departments[i].isChanged) {\n              var existRemoved = false;\n              /*verifica se existe mudança de departamento e exclui o item que esta salvo no departamento antigo para depois inserir no novo\r\n              Se por acaso o usuário modificou, mas voltou ao antigo ele apenas não exclui e retorn\r\n              */\n\n              for (y = 0; y < input.departments[i].qrCode.length; y++) {\n                res.residuesRegister.departments.forEach((department, index) => {\n                  department.qrCode.forEach((qrCode, indexQrCode) => {\n                    if (input.departments[i]._id !== department._id) {\n                      if (qrCode.code === input.departments[i].qrCode[y].code) {\n                        department.qrCode.splice(indexQrCode, 1);\n                      }\n                    }\n                  });\n                }); //se não tem mais qrcode remove o departamento\n\n                res.residuesRegister.departments.forEach((department, index) => {\n                  if (!department || !department.qrCode || department.qrCode.length <= 0) {\n                    res.residuesRegister.departments.splice(index, 1);\n                  }\n                });\n              }\n\n              input.departments[i].isChanged = false;\n              removed = true;\n            }\n          }\n\n          await res.update(res).then(console.log('ok removed from old'));\n          res = await Corporation.findById(_id);\n\n          for (i = 0; input.departments.length > i; i++) {\n            res = await Corporation.findById(_id);\n            var exist = await res.residuesRegister.departments.find(x => x._id == input.departments[i]._id);\n\n            if (exist === undefined || exist.length <= 0) {\n              await res.residuesRegister.departments.push(input.departments[i]);\n              await res.update(res).then(console.log('ok push in department'));\n              res = await Corporation.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                res.residuesRegister.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    if (input.departments[i].name === department.name) {\n                      checkpoint.wastegenerated.qrCode.push(qrCode);\n                    }\n                  });\n                });\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.wastegenerated = checkpoint.wastegenerated;\n                    check.update(check).then(x => {});\n                  }\n                });\n                resolve();\n              });\n              /* gerando histórico de alterações */\n\n              res = await Corporation.findById(_id);\n              var transaction = TransactionHistory.findOne({\n                _idCorporation: _id\n              });\n              var history = await new Promise((resolve, reject) => {\n                res.residuesRegister.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    if (input.departments[i].name === department.name) {\n                      var value = {\n                        date: new Date(),\n                        code: qrCode.code,\n                        material: qrCode.material\n                      };\n                      TransactionHistory.findOne({\n                        _idCorporation: _id\n                      }, function (err, trans) {\n                        if (!trans) console.log('ERE009');else {\n                          trans.checkPoints.wastegenerated.qrCode.push(value);\n                          trans.update(trans).then(x => {});\n                        }\n                      });\n                    }\n                  });\n                });\n                resolve();\n              });\n              res = await Corporation.findById(_id);\n            } else {\n              for (q = 0; input.departments[i].qrCode.length > q; q++) {\n                var isUpdated = false;\n                res = await Corporation.findById(_id);\n\n                if (input.departments[i].qrCode[q]._id) {\n                  res.residuesRegister.departments.forEach(department => {\n                    department.qrCode.forEach(qrCode => {\n                      if (qrCode.code == input.departments[i].qrCode[q].code) {\n                        qrCode.set(input.departments[i].qrCode[q]);\n                        isUpdated = true;\n                      }\n                    });\n                  });\n\n                  if (isUpdated) {\n                    await res.update(res).then(console.log('ok set qr codes'));\n                    res = await Corporation.findById(_id);\n                    isUpdated = false;\n                    /* gerando checkPoint */\n\n                    var checkpoint = await CheckPoint.findOne({\n                      _idCorporation: _id\n                    });\n                    var element = await new Promise((resolve, reject) => {\n                      checkpoint.wastegenerated.qrCode.forEach(qrCode => {\n                        if (qrCode.code == input.departments[i].qrCode[q].code) {\n                          qrCode.set(input.departments[i].qrCode[q]);\n                        }\n                      });\n                      CheckPoint.findOne({\n                        _idCorporation: _id\n                      }, function (err, check) {\n                        if (!check) console.log('ERE009');else {\n                          check.wastegenerated = checkpoint.wastegenerated;\n                          check.update(check).then(x => {\n                            resolve();\n                          });\n                        }\n                      });\n                    });\n                    /* gerando histórico de alterações */\n\n                    var transaction = await TransactionHistory.findOne({\n                      _idCorporation: _id\n                    });\n                    res = await Corporation.findById(_id);\n                    var history = await new Promise((resolve, reject) => {\n                      var value = {\n                        date: new Date(),\n                        code: input.departments[i].qrCode[q].code,\n                        material: input.departments[i].qrCode[q].material\n                      };\n                      TransactionHistory.findOne({\n                        _idCorporation: _id\n                      }, function (err, trans) {\n                        if (!trans) console.log('ERE009');else {\n                          trans.checkPoints.wastegenerated.qrCode.push(value);\n                          trans.update(trans).then(x => {});\n                        }\n                      });\n                      resolve();\n                    });\n                    res = await Corporation.findById(_id);\n                  }\n                } else {\n                  res.residuesRegister.departments.forEach(department => {\n                    if (input.departments[i]._id == department._id) {\n                      department.qrCode.push(input.departments[i].qrCode[q]);\n                    }\n                  });\n                  await res.update(res).then(console.log('ok push to exist department'));\n                  res = await Corporation.findById(_id);\n                  /* gerando checkPoint */\n\n                  var checkpoint = await CheckPoint.findOne({\n                    _idCorporation: _id\n                  });\n                  var isPushed = false;\n                  var element = await new Promise((resolve, reject) => {\n                    checkpoint.wastegenerated.qrCode.forEach((qrCode, index) => {\n                      if (!isPushed) {\n                        checkpoint.wastegenerated.qrCode.push(input.departments[i].qrCode[q]);\n                        isPushed = true;\n                      }\n                    });\n                    CheckPoint.findOne({\n                      _idCorporation: _id\n                    }, function (err, check) {\n                      if (!check) console.log('ERE009');else {\n                        check.wastegenerated = checkpoint.wastegenerated;\n                        check.update(check).then(x => {\n                          resolve();\n                        });\n                      }\n                    });\n                  });\n                  /* gerando histórico de alterações */\n\n                  res = await Corporation.findById(_id);\n                  var transaction = await TransactionHistory.findOne({\n                    _idCorporation: _id\n                  });\n                  var history = await new Promise((resolve, reject) => {\n                    var value = {\n                      date: new Date(),\n                      code: input.departments[i].qrCode[q].code,\n                      material: input.departments[i].qrCode[q].material\n                    };\n                    TransactionHistory.findOne({\n                      _idCorporation: _id\n                    }, function (err, trans) {\n                      if (!trans) console.log('ERE009');else {\n                        trans.checkPoints.wastegenerated.qrCode.push(value);\n                        trans.update(trans).then(x => {});\n                        resolve();\n                      }\n                    });\n                  });\n                  res = await Corporation.findById(_id);\n                }\n              }\n            }\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Corporation.findById(_id);\n        return res.residuesRegister;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateScheduling(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Corporation.findById(_id);\n\n        if (!res.scheduling || res.scheduling.length <= 0) {\n          returnElement = await new Promise((resolve, reject) => {\n            Corporation.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                input.forEach(scheduling => {\n                  if (res.scheduling === undefined || res.scheduling.length <= 0) {\n                    res.scheduling = [scheduling];\n                  } else {\n                    res.scheduling.push(scheduling);\n                  }\n                });\n              }\n              corp.scheduling = res.scheduling;\n              corp.update(corp).then(x => {\n                resolve(corp);\n              });\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.findOne({\n            _idCorporation: _id\n          });\n          res = await Corporation.findById(_id);\n          var isNew = false;\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            res.scheduling.forEach(scheduling => {\n              scheduling.qrCode.forEach(qrCode => {\n                if (!checkpoint) {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionrequested: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!checkpoint.collectionrequested || checkpoint.collectionrequested.length <= 0) {\n                    checkpoint = new Object({\n                      collectionrequested: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionrequested.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  if (!check || check.length <= 0) {\n                    check = check;\n                  } else {\n                    check.collectionrequested = checkpoint.collectionrequested;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /*Gerando historico */\n\n          var transaction = await TransactionHistory.findOne({\n            _idCorporation: _id\n          });\n          res = await Corporation.findById(_id);\n          var isNew = false;\n          var history = await new Promise(async (resolve, reject) => {\n            res.scheduling.forEach(scheduling => {\n              scheduling.qrCode.forEach(qrCode => {\n                if (!transaction) {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionrequested: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionrequested || transaction.checkPoints.collectionrequested.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionrequested: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionrequested.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (!trans || trans.length <= 0) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          for (var i = 0; input.length > i; i++) {\n            var exist = await res.scheduling.find(x => x._id == input[i]._id);\n\n            if (!exist || exist.length <= 0) {\n              res.scheduling.push(input[i]);\n              await res.update(res).then(console.log('ok push scheduling'));\n            } else {\n              exist.set(input[i]);\n              await res.update(res).then(console.log('ok set scheduling'));\n            }\n\n            res = await Corporation.findById(_id);\n            /* gerando checkPoint */\n\n            var checkpoint = await CheckPoint.findOne({\n              _idCorporation: _id\n            });\n            var element = await new Promise((resolve, reject) => {\n              for (var x = 0; input[i].qrCode.length > x; x++) {\n                var existQr = undefined;\n\n                for (y = 0; y < checkpoint.collectionrequested.qrCode.length; y++) {\n                  if (checkpoint.collectionrequested.qrCode[y].code === input[i].qrCode[x].code) {\n                    existQr = checkpoint.collectionrequested.qrCode[y];\n                  }\n                }\n\n                if (existQr) {\n                  existQr.set(input[i].qrCode[x]);\n                } else {\n                  checkpoint.collectionrequested.qrCode.push(input[i].qrCode[x]);\n                }\n              }\n\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  check.collectionrequested = checkpoint.collectionrequested;\n                  check.update(check).then(x => {\n                    resolve();\n                  });\n                }\n              });\n            });\n            /* gerando histórico de alterações */\n\n            var transaction = await TransactionHistory.findOne({\n              _idCorporation: _id\n            });\n            var element = await new Promise((resolve, reject) => {\n              for (var x = 0; input[i].qrCode.length > x; x++) {\n                transaction.checkPoints.collectionrequested.qrCode.push(input[i].qrCode[x]);\n              }\n\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  trans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\n                  trans.update(trans).then(x => {\n                    resolve();\n                  });\n                }\n              });\n            });\n            res = await Corporation.findById(_id);\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Corporation.findById(_id);\n        return res.scheduling;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateEntries(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Corporation.findById(_id);\n\n        if (res.entries === undefined || res.entries === null) {\n          returnElement = await new Promise((resolve, reject) => {\n            Corporation.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                if (res.entries === undefined || res.entries === null) {\n                  res.entries = input;\n                } else {\n                  res.entries = input;\n                }\n              }\n              corp.entries = res.entries;\n              corp.update(corp).then(x => {\n                resolve(corp);\n              });\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.find({\n            _idCorporation: _id\n          });\n          res = await Corporation.findById(_id);\n          var isNew = false;\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            if (res.entries.sale && res.entries.sale.length > 0) {\n              res.entries.sale.forEach(sale => {\n                if (!checkpoint || checkpoint.length <= 0) {\n                  var value = {\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionperformed: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n\n                  if (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\n                    checkpoint = new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            } else if (res.entries.purchase && res.entries.purchase.length > 0) {\n              res.entries.purchase.forEach(purchase => {\n                if (!checkpoint || checkpoint.length <= 0) {\n                  var value = {\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionperformed: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n\n                  if (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\n                    checkpoint = new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            }\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) {\n                  console.log('ERE009');\n                } else {\n                  if (!check || check.length <= 0) {\n                    check = checkpoint;\n                  } else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /* gerando histórico de alterações */\n\n          var transaction = await TransactionHistory.find({\n            _idCorporation: _id\n          });\n          res = await Corporation.findById(_id);\n          var isNew = false;\n          var history = await new Promise(async (resolve, reject) => {\n            if (res.entries.sale && res.entries.sale.length > 0) {\n              res.entries.sale.forEach(sale => {\n                if (transaction === undefined || transaction === null) {\n                  var value = {\n                    date: new Date(),\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionperformed || transaction.checkPoints.collectionperformed.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionperformed: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            } else if (res.entries.purchase && res.entries.purchase.length > 0) {\n              res.entries.purchase.forEach(purchase => {\n                if (transaction === undefined || transaction === null) {\n                  var value = {\n                    date: new Date(),\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionperformed || transaction.checkPoints.collectionperformed.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionperformed: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            }\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (trans === undefined || trans === null) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          if (input.sale !== undefined || input.sale.length > 0) {\n            for (i = 0; i < input.sale.length; i++) {\n              var exist = await res.entries.sale.find(x => x._id == input.sale[i]._id);\n\n              if (exist) {\n                exist.set(input.sale[i]);\n                await res.update(res).then(console.log('ok set entries sale'));\n              } else {\n                await res.entries.sale.push(input.sale[i]);\n                await res.update(res).then(console.log('ok push entries sale'));\n              }\n\n              res = await Corporation.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.sale !== undefined && input.sale.length > 0) {\n                  var existQr = undefined;\n\n                  for (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\n                    if (checkpoint.collectionperformed.qrCode[y].code === input.sale[i].qrCode.code) {\n                      existQr = checkpoint.collectionperformed.qrCode[y];\n                    }\n                  }\n\n                  if (existQr) {\n                    existQr.set(input.sale[i].qrCode);\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(input.sale[i].qrCode);\n                  }\n                }\n\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                    check.update(check).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              /* gerando histórico de alterações */\n\n              res = await Corporation.findById(_id);\n              var transaction = await TransactionHistory.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.sale !== undefined && input.sale.length > 0) {\n                  transaction.checkPoints.collectionperformed.qrCode.push(input.sale[i].qrCode);\n                }\n\n                TransactionHistory.findOne({\n                  _idCorporation: _id\n                }, function (err, trans) {\n                  if (!trans) console.log('ERE009');else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                    trans.update(trans).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              res = await Corporation.findById(_id);\n            }\n          } else if (input.purchase !== undefined || input.purchase.length > 0) {\n            for (i = 0; i < input.purchase.length; i++) {\n              var exist = await res.entries.purchase.find(x => x._id == input.purchase[i]._id);\n\n              if (exist) {\n                exist.set(input.purchase[i]);\n                await res.update(res).then(console.log('ok set entries purchase'));\n              } else {\n                await res.entries.purchase.push(input.purchase[i]);\n                await res.update(res).then(console.log('ok push entries purchase'));\n              }\n\n              res = await Corporation.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.purchase !== undefined && input.purchase.length > 0) {\n                  var existQr = undefined;\n\n                  for (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\n                    if (checkpoint.collectionperformed.qrCode[y].code === input.purchase[i].qrCode.code) {\n                      existQr = checkpoint.collectionperformed.qrCode[y];\n                    }\n                  }\n\n                  if (existQr) {\n                    existQr.set(input.purchase[i].qrCode);\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(input.purchase[i].qrCode);\n                  }\n                }\n\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                    check.update(check).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              /* gerando histórico de alterações */\n\n              res = await Corporation.findById(_id);\n              var transaction = await TransactionHistory.findOne();\n              var element = await new Promise((resolve, reject) => {\n                if (input.purchase !== undefined && input.purchase.length > 0) {\n                  transaction.checkPoints.collectionperformed.qrCode.push(input.purchase[i].qrCode);\n                }\n\n                TransactionHistory.findOne({\n                  _idCorporation: _id\n                }, function (err, trans) {\n                  if (!trans) console.log('ERE009');else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                    trans.update(trans).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              res = await Corporation.findById(_id);\n            }\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Corporation.findById(_id);\n        return res.entries;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateResidueArrived(root, {\n      _id,\n      input\n    }) {},\n\n    async createorUpdateDocument(root, {\n      _id,\n      input\n    }) {\n      try {\n        var element = await new Promise((resolve, reject) => {\n          var res = Corporation.findById(_id, function (err, corp) {\n            if (err) {\n              reject(next(new Error('ERE009')));\n            } else {\n              for (var i = 0; input.length > i; i++) {\n                if (input[i]._id) {\n                  index = corp.documents.findIndex(x => x._id == input[i]._id);\n                  corp.documents[index] = input[i];\n                } else {\n                  corp.documents.push(input[i]);\n                }\n              }\n\n              corp.save();\n              resolve(corp);\n            }\n          });\n        });\n        var res = await Corporation.findById(_id);\n        return res.documents;\n      } catch (error) {\n        throw new Error('ERE009');\n      }\n    }\n\n  }\n};\n\nasync function addID(_id, id, typeCorporation) {\n  var object = {\n    unitsId: id\n  };\n\n  if (typeCorporation === Classification.Collector) {\n    var collector = await Collector.findById(_id);\n\n    if (collector.units === undefined || collector.units.length <= 0) {\n      collector['units'] = [object];\n    } else {\n      collector.units.push(object);\n    }\n\n    Collector.findOne(_id, function (err, coll) {\n      if (!coll) console.log('ERE009');else {\n        coll.units = collector.units;\n        coll.update(coll).then(x => {});\n      }\n    });\n  } else if (typeCorporation === Classification.Provider) {\n    var provider = await Provider.findById(_id);\n\n    if (provider.units === undefined || provider.units.length <= 0) {\n      provider['units'] = [object];\n    } else {\n      provider.units.push(object);\n    }\n\n    Provider.findOne(_id, function (err, prov) {\n      if (!prov) console.log('ERE009');else {\n        prov.units = provider.units;\n        prov.update(prov).then(x => {});\n      }\n    });\n  } else {\n    var corporation = await Corporation.findById(_id);\n\n    if (corporation.units === undefined || corporation.units.length <= 0) {\n      corporation['units'] = [object];\n    } else {\n      corporation.units.push(object);\n    }\n\n    await Corporation.findById(_id, function (err, corp) {\n      if (!corp) console.log('ERE009');else {\n        corp.units = corporation.units;\n        corp.update(corp).then(x => {});\n      }\n    });\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "corporation.js"
      ],
      "names": [
        "Corporation",
        "require",
        "Collector",
        "Provider",
        "CheckPoint",
        "TransactionHistory",
        "mongoose",
        "Classification",
        "module",
        "exports",
        "corporation",
        "Query",
        "getCorporation",
        "root",
        "_id",
        "findById",
        "getCorporationByUser",
        "res",
        "findOne",
        "undefined",
        "allCorporations",
        "find",
        "allUnits",
        "unit",
        "units",
        "i",
        "length",
        "unitsId",
        "push",
        "allDocuments",
        "documents",
        "allDepartments",
        "departments",
        "allResiduesRegister",
        "residuesRegister",
        "allResidueArrived",
        "residuesPerformed",
        "allSchedulings",
        "scheduling",
        "allEntries",
        "entries",
        "allProvidersId",
        "myProviders",
        "Mutation",
        "createCorporation",
        "input",
        "users",
        "email",
        "Error",
        "create",
        "createCorporationUnit",
        "typeCorporation",
        "x",
        "session",
        "startSession",
        "startTransaction",
        "id",
        "returned",
        "then",
        "addID",
        "commitTransaction",
        "endSession",
        "console",
        "log",
        "error",
        "abortTransaction",
        "updateCorporation",
        "findOneAndUpdate",
        "new",
        "deleteCorporation",
        "createorUpdateDepartment",
        "err",
        "corp",
        "next",
        "index",
        "findIndex",
        "save",
        "createorUpdateResiduesRegister",
        "returnElement",
        "elementSaved",
        "Promise",
        "resolve",
        "reject",
        "forEach",
        "department",
        "Object",
        "depart",
        "name",
        "isChanged",
        "description",
        "active",
        "qrCode",
        "exist",
        "departmentDB",
        "update",
        "checkpoint",
        "_idCorporation",
        "isNew",
        "checkpoin",
        "value",
        "code",
        "material",
        "wastegenerated",
        "check",
        "transaction",
        "history",
        "date",
        "Date",
        "checkPoints",
        "trans",
        "removed",
        "existRemoved",
        "y",
        "indexQrCode",
        "splice",
        "element",
        "q",
        "isUpdated",
        "set",
        "isPushed",
        "createorUpdateScheduling",
        "collectionrequested",
        "existQr",
        "createorUpdateEntries",
        "sale",
        "collectionperformed",
        "purchase",
        "createorUpdateResidueArrived",
        "createorUpdateDocument",
        "object",
        "collector",
        "coll",
        "provider",
        "prov"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation",
      "sourcesContent": [
        "var Corporation = require('../../../models/corporation.model');\r\nvar Collector = require('../../../models/collector.model');\r\nvar Provider = require('../../../models/provider.model');\r\nvar CheckPoint = require('../../../models/checkpoint.model');\r\nvar TransactionHistory = require('../../../models/transactionhistory.model');\r\nmongoose = require('mongoose');\r\n\r\nvar Classification = {\r\n\tProvider: 'Fornecedor',\r\n\tCollector: 'Empresa Coletora'\r\n};\r\n\r\nmodule.exports = corporation = {\r\n\tQuery: {\r\n\t\tasync getCorporation(root, { _id }) {\r\n\t\t\treturn await Corporation.findById(_id);\r\n\t\t},\r\n\t\tasync getCorporationByUser(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findOne({ 'users._id': _id });\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t} else {\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allCorporations() {\r\n\t\t\treturn await Corporation.find();\r\n\t\t},\r\n\r\n\t\tasync allUnits(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\tvar unit;\r\n\t\t\t\tvar units = [];\r\n\t\t\t\tfor (var i = 0; res.units.length > i; i++) {\r\n\t\t\t\t\tunit = undefined;\r\n\t\t\t\t\tunit = await Corporation.findById(res.units[i].unitsId);\r\n\t\t\t\t\tif (!unit) {\r\n\t\t\t\t\t\tunit = await Collector.findById(res.units[i].unitsId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!unit) {\r\n\t\t\t\t\t\tunit = await Provider.findById(res.units[i].unitsId);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (unit) {\r\n\t\t\t\t\t\tunits.push(unit);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn units;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync allDocuments(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.documents;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync allDepartments(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.departments;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allResiduesRegister(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.residuesRegister;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allResidueArrived(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.residuesPerformed;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allSchedulings(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.scheduling;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allEntries(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.entries;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allProvidersId(root, { _id }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.myProviders;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tMutation: {\r\n\t\tasync createCorporation(root, { input }) {\r\n\t\t\tvar res = await Corporation.findOne({ 'users.email': input.users[0].email });\r\n\t\t\tif (res) {\r\n\t\t\t\tthrow new Error('WRE005');\r\n\t\t\t} else {\r\n\t\t\t\treturn await Corporation.create(input);\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync createCorporationUnit(root, { _id, typeCorporation, input }) {\r\n\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\tfor (var x = 0; res.units.length > x; x++) {\r\n\t\t\t\t\tif (input[i].users[0].email === res.units[x].email) {\r\n\t\t\t\t\t\tthrow new Error('WRE005');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\tvar id = undefined;\r\n\t\t\t\t\tvar returned = await Corporation.create(input[i]).then((x) => {\r\n\t\t\t\t\t\tid = x._id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddID(_id, id, typeCorporation);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\t\t\t\treturn await Corporation.findById(_id);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync updateCorporation(root, { _id, input }) {\r\n\t\t\treturn await Corporation.findOneAndUpdate(\r\n\t\t\t\t{\r\n\t\t\t\t\t_id\r\n\t\t\t\t},\r\n\t\t\t\tinput,\r\n\t\t\t\t{\r\n\t\t\t\t\tnew: true\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\t\tasync deleteCorporation(root, { _id }) {\r\n\t\t\t// return await Collector.findOneAndRemove({\r\n\t\t\t// \t_id\r\n\t\t\t// });\r\n\t\t},\r\n\t\tasync createorUpdateDepartment(root, { _id, input }) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await Corporation.findById(_id, function(err, corp) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn next(new Error('ERE009'));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\t\tif (input[i]._id) {\r\n\t\t\t\t\t\t\t\tindex = corp.departments.findIndex((x) => x._id == input[i]._id);\r\n\t\t\t\t\t\t\t\tif (index) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments[index] = input[i];\r\n\t\t\t\t\t\t\t\t} else if (!corp.departments || corp.departments.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments = [ input[i] ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (!corp.departments || corp.departments.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments = [ input[i] ];\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcorp.departments.push(input[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcorp.save();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\t\treturn res.departments;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync createorUpdateResiduesRegister(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\t\tvar returnElement;\r\n\t\t\t\tif (\r\n\t\t\t\t\t!res.residuesRegister ||\r\n\t\t\t\t\t!res.residuesRegister.departments ||\r\n\t\t\t\t\tres.residuesRegister.departments.length <= 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar elementSaved;\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tCorporation.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tinput.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!res.residuesRegister ||\r\n\t\t\t\t\t\t\t\t\t\t!res.residuesRegister.departments ||\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\tres['residuesRegister'] = new Object();\r\n\t\t\t\t\t\t\t\t\t\tvar depart = {\r\n\t\t\t\t\t\t\t\t\t\t\t_id: department._id,\r\n\t\t\t\t\t\t\t\t\t\t\tname: department.name,\r\n\t\t\t\t\t\t\t\t\t\t\tisChanged: false,\r\n\t\t\t\t\t\t\t\t\t\t\tdescription: department.description,\r\n\t\t\t\t\t\t\t\t\t\t\tactive: department.active,\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: []\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tres['residuesRegister']['departments'] = [ depart ];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tvar depart = {\r\n\t\t\t\t\t\t\t\t\t\t\t_id: department._id,\r\n\t\t\t\t\t\t\t\t\t\t\tname: department.name,\r\n\t\t\t\t\t\t\t\t\t\t\tisChanged: false,\r\n\t\t\t\t\t\t\t\t\t\t\tdescription: department.description,\r\n\t\t\t\t\t\t\t\t\t\t\tactive: department.active,\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: []\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tvar exist = res.residuesRegister.departments.find(\r\n\t\t\t\t\t\t\t\t\t\t\t(x) => x.name === depart.name\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tif (!exist) {\r\n\t\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.push(depart);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tinput.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((departmentDB) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (department.name === departmentDB.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepartmentDB.qrCode.push(qrCode);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tcorp.residuesRegister = res.residuesRegister;\r\n\t\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.wastegenerated || checkpoint.wastegenerated.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne(function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = check;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/*Gerando historico */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!transaction) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated === undefined ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne(function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (trans === undefined || trans.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated = transaction.checkPoints.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar removed = false;\r\n\t\t\t\t\tfor (i = 0; input.departments.length > i; i++) {\r\n\t\t\t\t\t\tif (input.departments[i].isChanged) {\r\n\t\t\t\t\t\t\tvar existRemoved = false;\r\n\t\t\t\t\t\t\t/*verifica se existe mudança de departamento e exclui o item que esta salvo no departamento antigo para depois inserir no novo\r\n\t\t\t\t\t\tSe por acaso o usuário modificou, mas voltou ao antigo ele apenas não exclui e retorn\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\tfor (y = 0; y < input.departments[i].qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department, index) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode, indexQrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i]._id !== department._id) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code === input.departments[i].qrCode[y].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.splice(indexQrCode, 1);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t//se não tem mais qrcode remove o departamento\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department, index) => {\r\n\t\t\t\t\t\t\t\t\tif (!department || !department.qrCode || department.qrCode.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tinput.departments[i].isChanged = false;\r\n\t\t\t\t\t\t\tremoved = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait res.update(res).then(console.log('ok removed from old'));\r\n\t\t\t\t\tres = await Corporation.findById(_id);\r\n\r\n\t\t\t\t\tfor (i = 0; input.departments.length > i; i++) {\r\n\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\tvar exist = await res.residuesRegister.departments.find(\r\n\t\t\t\t\t\t\t(x) => x._id == input.departments[i]._id\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tif (exist === undefined || exist.length <= 0) {\r\n\t\t\t\t\t\t\tawait res.residuesRegister.departments.push(input.departments[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push in department'));\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i].name === department.name) {\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(qrCode);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i].name === department.name) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (q = 0; input.departments[i].qrCode.length > q; q++) {\r\n\t\t\t\t\t\t\t\tvar isUpdated = false;\r\n\t\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\t\tif (input.departments[i].qrCode[q]._id) {\r\n\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code == input.departments[i].qrCode[q].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode.set(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\tisUpdated = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tif (isUpdated) {\r\n\t\t\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set qr codes'));\r\n\t\t\t\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\t\t\t\tisUpdated = false;\r\n\r\n\t\t\t\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code == input.departments[i].qrCode[q].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode.set(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\t\tcode: input.departments[i].qrCode[q].code,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaterial: input.departments[i].qrCode[q].material\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i]._id == department._id) {\r\n\t\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.push(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push to exist department'));\r\n\t\t\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\r\n\t\t\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\tvar isPushed = false;\r\n\t\t\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.forEach((qrCode, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!isPushed) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\tisPushed = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tcode: input.departments[i].qrCode[q].code,\r\n\t\t\t\t\t\t\t\t\t\t\tmaterial: input.departments[i].qrCode[q].material\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\t\treturn res.residuesRegister;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync createorUpdateScheduling(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Corporation.findById(_id);\r\n\r\n\t\t\t\tif (!res.scheduling || res.scheduling.length <= 0) {\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tCorporation.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tinput.forEach((scheduling) => {\r\n\t\t\t\t\t\t\t\t\tif (res.scheduling === undefined || res.scheduling.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tres.scheduling = [ scheduling ];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tres.scheduling.push(scheduling);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcorp.scheduling = res.scheduling;\r\n\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.scheduling.forEach((scheduling) => {\r\n\t\t\t\t\t\t\tscheduling.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionrequested || checkpoint.collectionrequested.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionrequested.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id },function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = check;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionrequested = checkpoint.collectionrequested;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/*Gerando historico */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.scheduling.forEach((scheduling) => {\r\n\t\t\t\t\t\t\tscheduling.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!transaction) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionrequested ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id },function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!trans || trans.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionrequested =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\tvar exist = await res.scheduling.find((x) => x._id == input[i]._id);\r\n\r\n\t\t\t\t\t\tif (!exist || exist.length <= 0) {\r\n\t\t\t\t\t\t\tres.scheduling.push(input[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push scheduling'));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\texist.set(input[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set scheduling'));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\r\n\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\tfor (var x = 0; input[i].qrCode.length > x; x++) {\r\n\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionrequested.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\tif (checkpoint.collectionrequested.qrCode[y].code === input[i].qrCode[x].code) {\r\n\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionrequested.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\texistQr.set(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcheckpoint.collectionrequested.qrCode.push(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id },function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tcheck.collectionrequested = checkpoint.collectionrequested;\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\tfor (var x = 0; input[i].qrCode.length > x; x++) {\r\n\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.qrCode.push(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id },function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\t\treturn res.scheduling;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync createorUpdateEntries(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\t\tif (res.entries === undefined || res.entries === null) {\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tCorporation.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (res.entries === undefined || res.entries === null) {\r\n\t\t\t\t\t\t\t\t\tres.entries = input;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tres.entries = input;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcorp.entries = res.entries;\r\n\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.find({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tif (res.entries.sale && res.entries.sale.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.sale.forEach((sale) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint || checkpoint.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (res.entries.purchase && res.entries.purchase.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.purchase.forEach((purchase) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint || checkpoint.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id },function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) {\r\n\t\t\t\t\t\t\t\t\tconsole.log('ERE009');\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = checkpoint;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.find({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tif (res.entries.sale && res.entries.sale.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.sale.forEach((sale) => {\r\n\t\t\t\t\t\t\t\tif (transaction === undefined || transaction === null) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionperformed ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (res.entries.purchase && res.entries.purchase.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.purchase.forEach((purchase) => {\r\n\t\t\t\t\t\t\t\tif (transaction === undefined || transaction === null) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionperformed ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id },function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (trans === undefined || trans === null) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (input.sale !== undefined || input.sale.length > 0) {\r\n\t\t\t\t\t\tfor (i = 0; i < input.sale.length; i++) {\r\n\t\t\t\t\t\t\tvar exist = await res.entries.sale.find((x) => x._id == input.sale[i]._id);\r\n\t\t\t\t\t\t\tif (exist) {\r\n\t\t\t\t\t\t\t\texist.set(input.sale[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set entries sale'));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tawait res.entries.sale.push(input.sale[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push entries sale'));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.sale !== undefined && input.sale.length > 0) {\r\n\t\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode[y].code === input.sale[i].qrCode.code\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionperformed.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\t\texistQr.set(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id },function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.sale !== undefined && input.sale.length > 0) {\r\n\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id },function(err, trans) {\r\n\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (input.purchase !== undefined || input.purchase.length > 0) {\r\n\t\t\t\t\t\tfor (i = 0; i < input.purchase.length; i++) {\r\n\t\t\t\t\t\t\tvar exist = await res.entries.purchase.find((x) => x._id == input.purchase[i]._id);\r\n\t\t\t\t\t\t\tif (exist) {\r\n\t\t\t\t\t\t\t\texist.set(input.purchase[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set entries purchase'));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tawait res.entries.purchase.push(input.purchase[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push entries purchase'));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.purchase !== undefined && input.purchase.length > 0) {\r\n\t\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode[y].code ===\r\n\t\t\t\t\t\t\t\t\t\t\tinput.purchase[i].qrCode.code\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionperformed.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\t\texistQr.set(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id },function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne();\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.purchase !== undefined && input.purchase.length > 0) {\r\n\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id },function(err, trans) {\r\n\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Corporation.findById(_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\t\treturn res.entries;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync createorUpdateResidueArrived(root, { _id, input }) {},\r\n\t\tasync createorUpdateDocument(root, { _id, input }) {\r\n\t\t\ttry {\r\n\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\tvar res = Corporation.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\treject(next(new Error('ERE009')));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\t\t\tif (input[i]._id) {\r\n\t\t\t\t\t\t\t\t\tindex = corp.documents.findIndex((x) => x._id == input[i]._id);\r\n\t\t\t\t\t\t\t\t\tcorp.documents[index] = input[i];\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcorp.documents.push(input[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcorp.save();\r\n\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar res = await Corporation.findById(_id);\r\n\t\t\t\treturn res.documents;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error('ERE009');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nasync function addID(_id, id, typeCorporation) {\r\n\tvar object = {\r\n\t\tunitsId: id\r\n\t};\r\n\tif (typeCorporation === Classification.Collector) {\r\n\t\tvar collector = await Collector.findById(_id);\r\n\t\tif (collector.units === undefined || collector.units.length <= 0) {\r\n\t\t\tcollector['units'] = [ object ];\r\n\t\t} else {\r\n\t\t\tcollector.units.push(object);\r\n\t\t}\r\n\t\tCollector.findOne(_id, function(err, coll) {\r\n\t\t\tif (!coll) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tcoll.units = collector.units;\r\n\t\t\t\tcoll.update(coll).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t} else if (typeCorporation === Classification.Provider) {\r\n\t\tvar provider = await Provider.findById(_id);\r\n\t\tif (provider.units === undefined || provider.units.length <= 0) {\r\n\t\t\tprovider['units'] = [ object ];\r\n\t\t} else {\r\n\t\t\tprovider.units.push(object);\r\n\t\t}\r\n\t\tProvider.findOne(_id, function(err, prov) {\r\n\t\t\tif (!prov) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tprov.units = provider.units;\r\n\t\t\t\tprov.update(prov).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\tvar corporation = await Corporation.findById(_id);\r\n\t\tif (corporation.units === undefined || corporation.units.length <= 0) {\r\n\t\t\tcorporation['units'] = [ object ];\r\n\t\t} else {\r\n\t\t\tcorporation.units.push(object);\r\n\t\t}\r\n\t\tawait Corporation.findById(_id, function(err, corp) {\r\n\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tcorp.units = corporation.units;\r\n\t\t\t\tcorp.update(corp).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574219831459
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\\\\corporation.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\corporation.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\models\\corporation.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\corporation.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
        "sourceFileName": "corporation.model.js"
      }
    },
    "ast": null,
    "code": "mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst Documents = new Schema({\n  type: {\n    type: String\n  },\n  name: String,\n  archive: String,\n  daysNotification: Number,\n  date: Date,\n  expire: Boolean\n});\nconst Material = new Schema({\n  type: {\n    type: String\n  },\n  name: String,\n  weight: Number,\n  quantity: Number,\n  active: Boolean,\n  unity: String\n});\nconst QrCode = new Schema({\n  code: String,\n  date: Date,\n  material: Material\n});\nconst ResidueArrived = new Schema({\n  date: Date,\n  name: String,\n  cost: Number,\n  typeEntrie: String,\n  quantity: Number,\n  weight: Number,\n  amount: Number,\n  qrCode: QrCode,\n  observation: String,\n  confirmedByCorporation: String,\n  confirmedByCollector: String\n});\nconst ResiduesRegisterSchema = new Schema({\n  departments: [{\n    isChanged: Boolean,\n    name: String,\n    description: String,\n    active: Boolean,\n    qrCode: [QrCode]\n  }]\n});\nconst Entries = new Schema({\n  purchase: [{\n    date: Date,\n    name: String,\n    cost: Number,\n    typeEntrie: String,\n    quantity: Number,\n    weight: Number,\n    amount: Number,\n    qrCode: QrCode\n  }],\n  sale: [{\n    date: Date,\n    name: String,\n    cost: Number,\n    typeEntrie: String,\n    quantity: Number,\n    weight: Number,\n    amount: Number,\n    qrCode: QrCode,\n    _idColector: String\n  }]\n});\nvar CorporationSchema = new Schema({\n  company: String,\n  cnpj: String,\n  tradingName: String,\n  active: Boolean,\n  class: String,\n  phone: Number,\n  email: String,\n  picture: String,\n  classification: String,\n  cellPhone: Number,\n  creationDate: Date,\n  activationDate: Date,\n  verificationDate: Date,\n  location: {\n    country: String,\n    state: String,\n    latitude: Number,\n    longitude: Number,\n    cep: String,\n    publicPlace: String,\n    neighborhood: String,\n    number: Number,\n    county: String,\n    complement: String\n  },\n  units: [{\n    unitsId: String\n  }],\n  users: [{\n    name: String,\n    email: String,\n    profile: {\n      name: String,\n      access: [String]\n    },\n    password: String,\n    active: Boolean\n  }],\n  myProviders: [{\n    providerId: String\n  }],\n  departments: [{\n    name: String,\n    description: String,\n    active: Boolean,\n    isChanged: Boolean\n  }],\n  residuesRegister: ResiduesRegisterSchema,\n  scheduling: [{\n    hour: Date,\n    date: Date,\n    active: Boolean,\n    collector: {\n      _id: String,\n      company: String,\n      cnpj: String,\n      tradingName: String,\n      active: Boolean,\n      phone: Number,\n      cellPhone: Number,\n      class: String,\n      email: String,\n      classification: String\n    },\n    qrCode: [QrCode]\n  }],\n  entries: Entries,\n  residuesArrived: [ResidueArrived],\n  documents: [Documents]\n});\nmodule.exports = mongoose.model('corporation', CorporationSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "corporation.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "Documents",
        "type",
        "String",
        "name",
        "archive",
        "daysNotification",
        "Number",
        "date",
        "Date",
        "expire",
        "Boolean",
        "Material",
        "weight",
        "quantity",
        "active",
        "unity",
        "QrCode",
        "code",
        "material",
        "ResidueArrived",
        "cost",
        "typeEntrie",
        "amount",
        "qrCode",
        "observation",
        "confirmedByCorporation",
        "confirmedByCollector",
        "ResiduesRegisterSchema",
        "departments",
        "isChanged",
        "description",
        "Entries",
        "purchase",
        "sale",
        "_idColector",
        "CorporationSchema",
        "company",
        "cnpj",
        "tradingName",
        "class",
        "phone",
        "email",
        "picture",
        "classification",
        "cellPhone",
        "creationDate",
        "activationDate",
        "verificationDate",
        "location",
        "country",
        "state",
        "latitude",
        "longitude",
        "cep",
        "publicPlace",
        "neighborhood",
        "number",
        "county",
        "complement",
        "units",
        "unitsId",
        "users",
        "profile",
        "access",
        "password",
        "myProviders",
        "providerId",
        "residuesRegister",
        "scheduling",
        "hour",
        "collector",
        "_id",
        "entries",
        "residuesArrived",
        "documents",
        "module",
        "exports",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "sourcesContent": [
        "mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst Documents = new Schema({\r\n\ttype: { type: String },\r\n\tname: String,\r\n\tarchive: String,\r\n\tdaysNotification: Number,\r\n\tdate: Date,\r\n\texpire: Boolean\r\n});\r\n\r\nconst Material = new Schema({\r\n\ttype: { type: String },\r\n\tname: String,\r\n\tweight: Number,\r\n\tquantity: Number,\r\n\tactive: Boolean,\r\n\tunity: String\r\n});\r\n\r\nconst QrCode = new Schema({\r\n\tcode: String,\r\n\tdate: Date,\r\n\tmaterial: Material\r\n});\r\n\r\nconst ResidueArrived = new Schema({\r\n\tdate: Date,\r\n\tname: String,\r\n\tcost: Number,\r\n\ttypeEntrie: String,\r\n\tquantity: Number,\r\n\tweight: Number,\r\n\tamount: Number,\r\n\tqrCode: QrCode,\r\n\tobservation: String,\r\n\tconfirmedByCorporation: String,\r\n\tconfirmedByCollector: String\r\n});\r\n\r\nconst ResiduesRegisterSchema = new Schema({\r\n\tdepartments: [\r\n\t\t{\r\n\t\t\tisChanged: Boolean,\r\n\t\t\tname: String,\r\n\t\t\tdescription: String,\r\n\t\t\tactive: Boolean,\r\n\t\t\tqrCode: [ QrCode ]\r\n\t\t}\r\n\t]\r\n});\r\n\r\nconst Entries = new Schema({\r\n\tpurchase: [\r\n\t\t{\r\n\t\t\tdate: Date,\r\n\t\t\tname: String,\r\n\t\t\tcost: Number,\r\n\t\t\ttypeEntrie: String,\r\n\t\t\tquantity: Number,\r\n\t\t\tweight: Number,\r\n\t\t\tamount: Number,\r\n\t\t\tqrCode: QrCode\r\n\t\t}\r\n\t],\r\n\tsale: [\r\n\t\t{\r\n\t\t\tdate: Date,\r\n\t\t\tname: String,\r\n\t\t\tcost: Number,\r\n\t\t\ttypeEntrie: String,\r\n\t\t\tquantity: Number,\r\n\t\t\tweight: Number,\r\n\t\t\tamount: Number,\r\n\t\t\tqrCode: QrCode,\r\n\t\t\t_idColector: String\r\n\t\t}\r\n\t]\r\n});\r\n\r\nvar CorporationSchema = new Schema({\r\n\tcompany: String,\r\n\tcnpj: String,\r\n\ttradingName: String,\r\n\tactive: Boolean,\r\n\tclass: String,\r\n\tphone: Number,\r\n\temail: String,\r\n\tpicture: String,\r\n\tclassification: String,\r\n\tcellPhone: Number,\r\n\tcreationDate: Date,\r\n\tactivationDate: Date,\r\n\tverificationDate: Date,\r\n\tlocation: {\r\n\t\tcountry: String,\r\n\t\tstate: String,\r\n\t\tlatitude: Number,\r\n\t\tlongitude: Number,\r\n\t\tcep: String,\r\n\t\tpublicPlace: String,\r\n\t\tneighborhood: String,\r\n\t\tnumber: Number,\r\n\t\tcounty: String,\r\n\t\tcomplement: String\r\n\t},\r\n\tunits: [\r\n\t\t{\r\n\t\t\tunitsId: String\r\n\t\t}\r\n\t],\r\n\tusers: [\r\n\t\t{\r\n\t\t\tname: String,\r\n\t\t\temail: String,\r\n\t\t\tprofile: {\r\n\t\t\t\tname: String,\r\n\t\t\t\taccess: [ String ]\r\n\t\t\t},\r\n\t\t\tpassword: String,\r\n\t\t\tactive: Boolean\r\n\t\t}\r\n\t],\r\n\tmyProviders: [\r\n\t\t{\r\n\t\t\tproviderId: String\r\n\t\t}\r\n\t],\r\n\tdepartments: [\r\n\t\t{\r\n\t\t\tname: String,\r\n\t\t\tdescription: String,\r\n\t\t\tactive: Boolean,\r\n\t\t\tisChanged: Boolean\r\n\t\t}\r\n\t],\r\n\r\n\tresiduesRegister: ResiduesRegisterSchema,\r\n\tscheduling: [\r\n\t\t{\r\n\t\t\thour: Date,\r\n\t\t\tdate: Date,\r\n\t\t\tactive: Boolean,\r\n\t\t\tcollector: {\r\n\t\t\t\t_id: String,\r\n\t\t\t\tcompany: String,\r\n\t\t\t\tcnpj: String,\r\n\t\t\t\ttradingName: String,\r\n\t\t\t\tactive: Boolean,\r\n\t\t\t\tphone: Number,\r\n\t\t\t\tcellPhone: Number,\r\n\t\t\t\tclass: String,\r\n\t\t\t\temail: String,\r\n\t\t\t\tclassification: String\r\n\t\t\t},\r\n\t\t\tqrCode: [ QrCode ]\r\n\t\t}\r\n\t],\r\n\tentries: Entries,\r\n\tresiduesArrived: [ ResidueArrived ],\r\n\tdocuments: [ Documents ]\r\n});\r\n\r\nmodule.exports = mongoose.model('corporation', CorporationSchema);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574221034563
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\indexLogin.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexLogin.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexLogin.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexLogin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "indexLogin.js"
      }
    },
    "ast": null,
    "code": "const login = require('./login/Mutation/login');\n\nmodule.exports = { ...login\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4TG9naW4uanMiXSwibmFtZXMiOlsibG9naW4iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsd0JBQUQsQ0FBckI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixFQUNoQixHQUFHSDtBQURhLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxyZWNvbnNpZGVyZVxccmVjb25zaWRlcmUtY29ycG9yYXRpb24tYXBpXFxyZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsb2dpbiA9IHJlcXVpcmUoJy4vbG9naW4vTXV0YXRpb24vbG9naW4nKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG5cdC4uLmxvZ2luXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexLogin.js"
      ],
      "names": [
        "login",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,wBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EAChB,GAAGH;AADa,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const login = require('./login/Mutation/login');\r\n\r\nmodule.exports = {\r\n\t...login\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1563984618905
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\login\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\login\\\\Mutation\\\\login.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\login\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\login\\Mutation\\login.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\login\\Mutation\\login.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\login\\Mutation\\login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\login\\Mutation",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "Corporation = require('../../../models/corporation.model');\nCollector = require('../../../models/collector.model');\nProvider = require('../../../models/provider.model');\nmodule.exports = login = {\n  Query: {\n    async signIn(root, {\n      email,\n      password\n    }) {\n      try {\n        var res = await Corporation.findOne({\n          $and: [{\n            'users.email': email\n          }, {\n            'users.password': password\n          }]\n        });\n\n        if (!res) {} else {\n          res.users = res.users.filter(x => x.email === email && x.password === password);\n          return res;\n        }\n\n        res = await Collector.findOne({\n          $and: [{\n            'users.email': email\n          }, {\n            'users.password': password\n          }]\n        });\n\n        if (!res) {} else {\n          res.users = res.users.filter(x => x.email === email && x.password === password);\n          return res;\n        }\n\n        res = await Provider.findOne({\n          $and: [{\n            'users.email': email\n          }, {\n            'users.password': password\n          }]\n        });\n\n        if (!res) {\n          return null;\n        } else {\n          res.users = res.users.filter(x => x.email === email && x.password === password);\n          return res;\n        }\n      } catch (error) {\n        return null;\n      }\n    }\n\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbIkNvcnBvcmF0aW9uIiwicmVxdWlyZSIsIkNvbGxlY3RvciIsIlByb3ZpZGVyIiwibW9kdWxlIiwiZXhwb3J0cyIsImxvZ2luIiwiUXVlcnkiLCJzaWduSW4iLCJyb290IiwiZW1haWwiLCJwYXNzd29yZCIsInJlcyIsImZpbmRPbmUiLCIkYW5kIiwidXNlcnMiLCJmaWx0ZXIiLCJ4IiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxtQ0FBRCxDQUFyQjtBQUNBQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxpQ0FBRCxDQUFuQjtBQUNBRSxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxnQ0FBRCxDQUFsQjtBQUNBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLEtBQUssR0FBRztBQUN4QkMsRUFBQUEsS0FBSyxFQUFFO0FBQ04sVUFBTUMsTUFBTixDQUFhQyxJQUFiLEVBQW1CO0FBQUVDLE1BQUFBLEtBQUY7QUFBU0MsTUFBQUE7QUFBVCxLQUFuQixFQUF3QztBQUN2QyxVQUFJO0FBQ0gsWUFBSUMsR0FBRyxHQUFHLE1BQU1aLFdBQVcsQ0FBQ2EsT0FBWixDQUFvQjtBQUNuQ0MsVUFBQUEsSUFBSSxFQUFFLENBQUU7QUFBRSwyQkFBZUo7QUFBakIsV0FBRixFQUE0QjtBQUFFLDhCQUFrQkM7QUFBcEIsV0FBNUI7QUFENkIsU0FBcEIsQ0FBaEI7O0FBR0EsWUFBSSxDQUFDQyxHQUFMLEVBQVUsQ0FDVCxDQURELE1BQ087QUFDTkEsVUFBQUEsR0FBRyxDQUFDRyxLQUFKLEdBQVlILEdBQUcsQ0FBQ0csS0FBSixDQUFVQyxNQUFWLENBQWtCQyxDQUFELElBQU9BLENBQUMsQ0FBQ1AsS0FBRixLQUFZQSxLQUFaLElBQXFCTyxDQUFDLENBQUNOLFFBQUYsS0FBZUEsUUFBNUQsQ0FBWjtBQUNBLGlCQUFPQyxHQUFQO0FBQ0E7O0FBRURBLFFBQUFBLEdBQUcsR0FBRyxNQUFNVixTQUFTLENBQUNXLE9BQVYsQ0FBa0I7QUFDN0JDLFVBQUFBLElBQUksRUFBRSxDQUFFO0FBQUUsMkJBQWVKO0FBQWpCLFdBQUYsRUFBNEI7QUFBRSw4QkFBa0JDO0FBQXBCLFdBQTVCO0FBRHVCLFNBQWxCLENBQVo7O0FBR0EsWUFBSSxDQUFDQyxHQUFMLEVBQVUsQ0FDVCxDQURELE1BQ087QUFDTkEsVUFBQUEsR0FBRyxDQUFDRyxLQUFKLEdBQVlILEdBQUcsQ0FBQ0csS0FBSixDQUFVQyxNQUFWLENBQWtCQyxDQUFELElBQU9BLENBQUMsQ0FBQ1AsS0FBRixLQUFZQSxLQUFaLElBQXFCTyxDQUFDLENBQUNOLFFBQUYsS0FBZUEsUUFBNUQsQ0FBWjtBQUNBLGlCQUFPQyxHQUFQO0FBQ0E7O0FBRURBLFFBQUFBLEdBQUcsR0FBRyxNQUFNVCxRQUFRLENBQUNVLE9BQVQsQ0FBaUI7QUFDNUJDLFVBQUFBLElBQUksRUFBRSxDQUFFO0FBQUUsMkJBQWVKO0FBQWpCLFdBQUYsRUFBNEI7QUFBRSw4QkFBa0JDO0FBQXBCLFdBQTVCO0FBRHNCLFNBQWpCLENBQVo7O0FBR0EsWUFBSSxDQUFDQyxHQUFMLEVBQVU7QUFDVCxpQkFBTyxJQUFQO0FBQ0EsU0FGRCxNQUVPO0FBQ05BLFVBQUFBLEdBQUcsQ0FBQ0csS0FBSixHQUFZSCxHQUFHLENBQUNHLEtBQUosQ0FBVUMsTUFBVixDQUFrQkMsQ0FBRCxJQUFPQSxDQUFDLENBQUNQLEtBQUYsS0FBWUEsS0FBWixJQUFxQk8sQ0FBQyxDQUFDTixRQUFGLEtBQWVBLFFBQTVELENBQVo7QUFDQSxpQkFBT0MsR0FBUDtBQUNBO0FBQ0QsT0E1QkQsQ0E0QkUsT0FBT00sS0FBUCxFQUFjO0FBQ2YsZUFBTyxJQUFQO0FBQ0E7QUFDRDs7QUFqQ0s7QUFEaUIsQ0FBekIiLCJzb3VyY2VSb290IjoiQzpcXHJlY29uc2lkZXJlXFxyZWNvbnNpZGVyZS1jb3Jwb3JhdGlvbi1hcGlcXHJlc29sdmVyc1xcbG9naW5cXE11dGF0aW9uIiwic291cmNlc0NvbnRlbnQiOlsiQ29ycG9yYXRpb24gPSByZXF1aXJlKCcuLi8uLi8uLi9tb2RlbHMvY29ycG9yYXRpb24ubW9kZWwnKTtcclxuQ29sbGVjdG9yID0gcmVxdWlyZSgnLi4vLi4vLi4vbW9kZWxzL2NvbGxlY3Rvci5tb2RlbCcpO1xyXG5Qcm92aWRlciA9IHJlcXVpcmUoJy4uLy4uLy4uL21vZGVscy9wcm92aWRlci5tb2RlbCcpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IGxvZ2luID0ge1xyXG5cdFF1ZXJ5OiB7XHJcblx0XHRhc3luYyBzaWduSW4ocm9vdCwgeyBlbWFpbCwgcGFzc3dvcmQgfSkge1xyXG5cdFx0XHR0cnkge1xyXG5cdFx0XHRcdHZhciByZXMgPSBhd2FpdCBDb3Jwb3JhdGlvbi5maW5kT25lKHtcclxuXHRcdFx0XHRcdCRhbmQ6IFsgeyAndXNlcnMuZW1haWwnOiBlbWFpbCB9LCB7ICd1c2Vycy5wYXNzd29yZCc6IHBhc3N3b3JkIH0gXVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGlmICghcmVzKSB7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHJlcy51c2VycyA9IHJlcy51c2Vycy5maWx0ZXIoKHgpID0+IHguZW1haWwgPT09IGVtYWlsICYmIHgucGFzc3dvcmQgPT09IHBhc3N3b3JkKTtcclxuXHRcdFx0XHRcdHJldHVybiByZXM7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRyZXMgPSBhd2FpdCBDb2xsZWN0b3IuZmluZE9uZSh7XHJcblx0XHRcdFx0XHQkYW5kOiBbIHsgJ3VzZXJzLmVtYWlsJzogZW1haWwgfSwgeyAndXNlcnMucGFzc3dvcmQnOiBwYXNzd29yZCB9IF1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZiAoIXJlcykge1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRyZXMudXNlcnMgPSByZXMudXNlcnMuZmlsdGVyKCh4KSA9PiB4LmVtYWlsID09PSBlbWFpbCAmJiB4LnBhc3N3b3JkID09PSBwYXNzd29yZCk7XHJcblx0XHRcdFx0XHRyZXR1cm4gcmVzO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0cmVzID0gYXdhaXQgUHJvdmlkZXIuZmluZE9uZSh7XHJcblx0XHRcdFx0XHQkYW5kOiBbIHsgJ3VzZXJzLmVtYWlsJzogZW1haWwgfSwgeyAndXNlcnMucGFzc3dvcmQnOiBwYXNzd29yZCB9IF1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZiAoIXJlcykge1xyXG5cdFx0XHRcdFx0cmV0dXJuIG51bGw7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHJlcy51c2VycyA9IHJlcy51c2Vycy5maWx0ZXIoKHgpID0+IHguZW1haWwgPT09IGVtYWlsICYmIHgucGFzc3dvcmQgPT09IHBhc3N3b3JkKTtcclxuXHRcdFx0XHRcdHJldHVybiByZXM7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGNhdGNoIChlcnJvcikge1xyXG5cdFx0XHRcdHJldHVybiBudWxsO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "Corporation",
        "require",
        "Collector",
        "Provider",
        "module",
        "exports",
        "login",
        "Query",
        "signIn",
        "root",
        "email",
        "password",
        "res",
        "findOne",
        "$and",
        "users",
        "filter",
        "x",
        "error"
      ],
      "mappings": "AAAAA,WAAW,GAAGC,OAAO,CAAC,mCAAD,CAArB;AACAC,SAAS,GAAGD,OAAO,CAAC,iCAAD,CAAnB;AACAE,QAAQ,GAAGF,OAAO,CAAC,gCAAD,CAAlB;AACAG,MAAM,CAACC,OAAP,GAAiBC,KAAK,GAAG;AACxBC,EAAAA,KAAK,EAAE;AACN,UAAMC,MAAN,CAAaC,IAAb,EAAmB;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAnB,EAAwC;AACvC,UAAI;AACH,YAAIC,GAAG,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB;AACnCC,UAAAA,IAAI,EAAE,CAAE;AAAE,2BAAeJ;AAAjB,WAAF,EAA4B;AAAE,8BAAkBC;AAApB,WAA5B;AAD6B,SAApB,CAAhB;;AAGA,YAAI,CAACC,GAAL,EAAU,CACT,CADD,MACO;AACNA,UAAAA,GAAG,CAACG,KAAJ,GAAYH,GAAG,CAACG,KAAJ,CAAUC,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACP,KAAF,KAAYA,KAAZ,IAAqBO,CAAC,CAACN,QAAF,KAAeA,QAA5D,CAAZ;AACA,iBAAOC,GAAP;AACA;;AAEDA,QAAAA,GAAG,GAAG,MAAMV,SAAS,CAACW,OAAV,CAAkB;AAC7BC,UAAAA,IAAI,EAAE,CAAE;AAAE,2BAAeJ;AAAjB,WAAF,EAA4B;AAAE,8BAAkBC;AAApB,WAA5B;AADuB,SAAlB,CAAZ;;AAGA,YAAI,CAACC,GAAL,EAAU,CACT,CADD,MACO;AACNA,UAAAA,GAAG,CAACG,KAAJ,GAAYH,GAAG,CAACG,KAAJ,CAAUC,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACP,KAAF,KAAYA,KAAZ,IAAqBO,CAAC,CAACN,QAAF,KAAeA,QAA5D,CAAZ;AACA,iBAAOC,GAAP;AACA;;AAEDA,QAAAA,GAAG,GAAG,MAAMT,QAAQ,CAACU,OAAT,CAAiB;AAC5BC,UAAAA,IAAI,EAAE,CAAE;AAAE,2BAAeJ;AAAjB,WAAF,EAA4B;AAAE,8BAAkBC;AAApB,WAA5B;AADsB,SAAjB,CAAZ;;AAGA,YAAI,CAACC,GAAL,EAAU;AACT,iBAAO,IAAP;AACA,SAFD,MAEO;AACNA,UAAAA,GAAG,CAACG,KAAJ,GAAYH,GAAG,CAACG,KAAJ,CAAUC,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACP,KAAF,KAAYA,KAAZ,IAAqBO,CAAC,CAACN,QAAF,KAAeA,QAA5D,CAAZ;AACA,iBAAOC,GAAP;AACA;AACD,OA5BD,CA4BE,OAAOM,KAAP,EAAc;AACf,eAAO,IAAP;AACA;AACD;;AAjCK;AADiB,CAAzB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\login\\Mutation",
      "sourcesContent": [
        "Corporation = require('../../../models/corporation.model');\r\nCollector = require('../../../models/collector.model');\r\nProvider = require('../../../models/provider.model');\r\nmodule.exports = login = {\r\n\tQuery: {\r\n\t\tasync signIn(root, { email, password }) {\r\n\t\t\ttry {\r\n\t\t\t\tvar res = await Corporation.findOne({\r\n\t\t\t\t\t$and: [ { 'users.email': email }, { 'users.password': password } ]\r\n\t\t\t\t});\r\n\t\t\t\tif (!res) {\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres.users = res.users.filter((x) => x.email === email && x.password === password);\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tres = await Collector.findOne({\r\n\t\t\t\t\t$and: [ { 'users.email': email }, { 'users.password': password } ]\r\n\t\t\t\t});\r\n\t\t\t\tif (!res) {\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres.users = res.users.filter((x) => x.email === email && x.password === password);\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tres = await Provider.findOne({\r\n\t\t\t\t\t$and: [ { 'users.email': email }, { 'users.password': password } ]\r\n\t\t\t\t});\r\n\t\t\t\tif (!res) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres.users = res.users.filter((x) => x.email === email && x.password === password);\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1567465431556
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\indexCheckPoint.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCheckPoint.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCheckPoint.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexCheckPoint.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "indexCheckPoint.js"
      }
    },
    "ast": null,
    "code": "const checkpoint = require('./checkpoint/Mutation/checkpoint');\n\nmodule.exports = { ...checkpoint\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Q2hlY2tQb2ludC5qcyJdLCJuYW1lcyI6WyJjaGVja3BvaW50IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLGtDQUFELENBQTFCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsRUFDaEIsR0FBR0g7QUFEYSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaVxccmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2hlY2twb2ludCA9IHJlcXVpcmUoJy4vY2hlY2twb2ludC9NdXRhdGlvbi9jaGVja3BvaW50Jyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuXHQuLi5jaGVja3BvaW50XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexCheckPoint.js"
      ],
      "names": [
        "checkpoint",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,kCAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EAChB,GAAGH;AADa,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const checkpoint = require('./checkpoint/Mutation/checkpoint');\r\n\r\nmodule.exports = {\r\n\t...checkpoint\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1564087865309
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\checkpoint\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\checkpoint\\\\Mutation\\\\checkpoint.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\checkpoint\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\checkpoint\\Mutation\\checkpoint.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\checkpoint\\Mutation\\checkpoint.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\checkpoint\\Mutation\\checkpoint.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\checkpoint\\Mutation",
        "sourceFileName": "checkpoint.js"
      }
    },
    "ast": null,
    "code": "CheckPoint = require('../../../models/checkpoint.model');\nmodule.exports = checkpoint = {\n  Query: {\n    //verificar se não achar o id na criação deve ser do tipo coletor se o id do coletor fizer parte \n    //do check point carregar\n    async allCheckPoint(root, {\n      _idCorporation\n    }) {\n      return await CheckPoint.findOne({\n        _idCorporation: _idCorporation\n      });\n    }\n\n  },\n  Mutation: {}\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrcG9pbnQuanMiXSwibmFtZXMiOlsiQ2hlY2tQb2ludCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY2hlY2twb2ludCIsIlF1ZXJ5IiwiYWxsQ2hlY2tQb2ludCIsInJvb3QiLCJfaWRDb3Jwb3JhdGlvbiIsImZpbmRPbmUiLCJNdXRhdGlvbiJdLCJtYXBwaW5ncyI6IkFBQUFBLFVBQVUsR0FBR0MsT0FBTyxDQUFDLGtDQUFELENBQXBCO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsVUFBVSxHQUFHO0FBQzdCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTjtBQUNBO0FBQ0EsVUFBTUMsYUFBTixDQUFvQkMsSUFBcEIsRUFBMEI7QUFBRUMsTUFBQUE7QUFBRixLQUExQixFQUE4QztBQUM3QyxhQUFPLE1BQU1SLFVBQVUsQ0FBQ1MsT0FBWCxDQUFtQjtBQUFFRCxRQUFBQSxjQUFjLEVBQUVBO0FBQWxCLE9BQW5CLENBQWI7QUFDQTs7QUFMSyxHQURzQjtBQVE3QkUsRUFBQUEsUUFBUSxFQUFFO0FBUm1CLENBQTlCIiwic291cmNlUm9vdCI6IkM6XFxyZWNvbnNpZGVyZVxccmVjb25zaWRlcmUtY29ycG9yYXRpb24tYXBpXFxyZXNvbHZlcnNcXGNoZWNrcG9pbnRcXE11dGF0aW9uIiwic291cmNlc0NvbnRlbnQiOlsiQ2hlY2tQb2ludCA9IHJlcXVpcmUoJy4uLy4uLy4uL21vZGVscy9jaGVja3BvaW50Lm1vZGVsJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGNoZWNrcG9pbnQgPSB7XHJcblx0UXVlcnk6IHtcclxuXHRcdC8vdmVyaWZpY2FyIHNlIG7Do28gYWNoYXIgbyBpZCBuYSBjcmlhw6fDo28gZGV2ZSBzZXIgZG8gdGlwbyBjb2xldG9yIHNlIG8gaWQgZG8gY29sZXRvciBmaXplciBwYXJ0ZSBcclxuXHRcdC8vZG8gY2hlY2sgcG9pbnQgY2FycmVnYXJcclxuXHRcdGFzeW5jIGFsbENoZWNrUG9pbnQocm9vdCwgeyBfaWRDb3Jwb3JhdGlvbiB9KSB7XHJcblx0XHRcdHJldHVybiBhd2FpdCBDaGVja1BvaW50LmZpbmRPbmUoeyBfaWRDb3Jwb3JhdGlvbjogX2lkQ29ycG9yYXRpb24gfSk7XHJcblx0XHR9XHJcblx0fSxcclxuXHRNdXRhdGlvbjoge1xyXG5cdH1cclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "checkpoint.js"
      ],
      "names": [
        "CheckPoint",
        "require",
        "module",
        "exports",
        "checkpoint",
        "Query",
        "allCheckPoint",
        "root",
        "_idCorporation",
        "findOne",
        "Mutation"
      ],
      "mappings": "AAAAA,UAAU,GAAGC,OAAO,CAAC,kCAAD,CAApB;AAEAC,MAAM,CAACC,OAAP,GAAiBC,UAAU,GAAG;AAC7BC,EAAAA,KAAK,EAAE;AACN;AACA;AACA,UAAMC,aAAN,CAAoBC,IAApB,EAA0B;AAAEC,MAAAA;AAAF,KAA1B,EAA8C;AAC7C,aAAO,MAAMR,UAAU,CAACS,OAAX,CAAmB;AAAED,QAAAA,cAAc,EAAEA;AAAlB,OAAnB,CAAb;AACA;;AALK,GADsB;AAQ7BE,EAAAA,QAAQ,EAAE;AARmB,CAA9B",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\checkpoint\\Mutation",
      "sourcesContent": [
        "CheckPoint = require('../../../models/checkpoint.model');\r\n\r\nmodule.exports = checkpoint = {\r\n\tQuery: {\r\n\t\t//verificar se não achar o id na criação deve ser do tipo coletor se o id do coletor fizer parte \r\n\t\t//do check point carregar\r\n\t\tasync allCheckPoint(root, { _idCorporation }) {\r\n\t\t\treturn await CheckPoint.findOne({ _idCorporation: _idCorporation });\r\n\t\t}\r\n\t},\r\n\tMutation: {\r\n\t}\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1573057601015
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\indexTransactionHistory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexTransactionHistory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexTransactionHistory.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexTransactionHistory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "indexTransactionHistory.js"
      }
    },
    "ast": null,
    "code": "const transactionhistory = require('./transactionhistory/Mutation/transactionhistory');\n\nmodule.exports = { ...transactionhistory\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4VHJhbnNhY3Rpb25IaXN0b3J5LmpzIl0sIm5hbWVzIjpbInRyYW5zYWN0aW9uaGlzdG9yeSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxrQkFBa0IsR0FBR0MsT0FBTyxDQUFDLGtEQUFELENBQWxDOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsRUFDaEIsR0FBR0g7QUFEYSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaVxccmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdHJhbnNhY3Rpb25oaXN0b3J5ID0gcmVxdWlyZSgnLi90cmFuc2FjdGlvbmhpc3RvcnkvTXV0YXRpb24vdHJhbnNhY3Rpb25oaXN0b3J5Jyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuXHQuLi50cmFuc2FjdGlvbmhpc3RvcnlcclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "indexTransactionHistory.js"
      ],
      "names": [
        "transactionhistory",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,kDAAD,CAAlC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EAChB,GAAGH;AADa,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const transactionhistory = require('./transactionhistory/Mutation/transactionhistory');\r\n\r\nmodule.exports = {\r\n\t...transactionhistory\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1564087234023
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\transactionhistory\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\transactionhistory\\\\Mutation\\\\transactionhistory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\transactionhistory\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\transactionhistory\\Mutation\\transactionhistory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\transactionhistory\\Mutation\\transactionhistory.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\transactionhistory\\Mutation\\transactionhistory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\transactionhistory\\Mutation",
        "sourceFileName": "transactionhistory.js"
      }
    },
    "ast": null,
    "code": "TransactionHistory = require('../../../models/transactionhistory.model');\nmodule.exports = transactionhistory = {\n  Query: {\n    async allTransactionHistory(root, {\n      _idCorporation\n    }) {\n      return await TransactionHistory.findOne({\n        _idCorporation: _idCorporation\n      });\n    }\n\n  },\n  Mutation: {}\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9uaGlzdG9yeS5qcyJdLCJuYW1lcyI6WyJUcmFuc2FjdGlvbkhpc3RvcnkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInRyYW5zYWN0aW9uaGlzdG9yeSIsIlF1ZXJ5IiwiYWxsVHJhbnNhY3Rpb25IaXN0b3J5Iiwicm9vdCIsIl9pZENvcnBvcmF0aW9uIiwiZmluZE9uZSIsIk11dGF0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQUEsa0JBQWtCLEdBQUdDLE9BQU8sQ0FBQywwQ0FBRCxDQUE1QjtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLGtCQUFrQixHQUFHO0FBQ3JDQyxFQUFBQSxLQUFLLEVBQUU7QUFDTixVQUFNQyxxQkFBTixDQUE0QkMsSUFBNUIsRUFBa0M7QUFBRUMsTUFBQUE7QUFBRixLQUFsQyxFQUFzRDtBQUNyRCxhQUFPLE1BQU1SLGtCQUFrQixDQUFDUyxPQUFuQixDQUEyQjtBQUFFRCxRQUFBQSxjQUFjLEVBQUVBO0FBQWxCLE9BQTNCLENBQWI7QUFDQTs7QUFISyxHQUQ4QjtBQU1yQ0UsRUFBQUEsUUFBUSxFQUFFO0FBTjJCLENBQXRDIiwic291cmNlUm9vdCI6IkM6XFxyZWNvbnNpZGVyZVxccmVjb25zaWRlcmUtY29ycG9yYXRpb24tYXBpXFxyZXNvbHZlcnNcXHRyYW5zYWN0aW9uaGlzdG9yeVxcTXV0YXRpb24iLCJzb3VyY2VzQ29udGVudCI6WyJUcmFuc2FjdGlvbkhpc3RvcnkgPSByZXF1aXJlKCcuLi8uLi8uLi9tb2RlbHMvdHJhbnNhY3Rpb25oaXN0b3J5Lm1vZGVsJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHRyYW5zYWN0aW9uaGlzdG9yeSA9IHtcclxuXHRRdWVyeToge1xyXG5cdFx0YXN5bmMgYWxsVHJhbnNhY3Rpb25IaXN0b3J5KHJvb3QsIHsgX2lkQ29ycG9yYXRpb24gfSkge1xyXG5cdFx0XHRyZXR1cm4gYXdhaXQgVHJhbnNhY3Rpb25IaXN0b3J5LmZpbmRPbmUoeyBfaWRDb3Jwb3JhdGlvbjogX2lkQ29ycG9yYXRpb24gfSk7XHJcblx0XHR9XHJcblx0fSxcclxuXHRNdXRhdGlvbjoge1xyXG5cdH1cclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "transactionhistory.js"
      ],
      "names": [
        "TransactionHistory",
        "require",
        "module",
        "exports",
        "transactionhistory",
        "Query",
        "allTransactionHistory",
        "root",
        "_idCorporation",
        "findOne",
        "Mutation"
      ],
      "mappings": "AAAAA,kBAAkB,GAAGC,OAAO,CAAC,0CAAD,CAA5B;AAEAC,MAAM,CAACC,OAAP,GAAiBC,kBAAkB,GAAG;AACrCC,EAAAA,KAAK,EAAE;AACN,UAAMC,qBAAN,CAA4BC,IAA5B,EAAkC;AAAEC,MAAAA;AAAF,KAAlC,EAAsD;AACrD,aAAO,MAAMR,kBAAkB,CAACS,OAAnB,CAA2B;AAAED,QAAAA,cAAc,EAAEA;AAAlB,OAA3B,CAAb;AACA;;AAHK,GAD8B;AAMrCE,EAAAA,QAAQ,EAAE;AAN2B,CAAtC",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\transactionhistory\\Mutation",
      "sourcesContent": [
        "TransactionHistory = require('../../../models/transactionhistory.model');\r\n\r\nmodule.exports = transactionhistory = {\r\n\tQuery: {\r\n\t\tasync allTransactionHistory(root, { _idCorporation }) {\r\n\t\t\treturn await TransactionHistory.findOne({ _idCorporation: _idCorporation });\r\n\t\t}\r\n\t},\r\n\tMutation: {\r\n\t}\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572650883722
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\indexProvider.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexProvider.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexProvider.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexProvider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "indexProvider.js"
      }
    },
    "ast": null,
    "code": "const provider = require('./provider/Mutation/provider');\n\nmodule.exports = { ...provider\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4UHJvdmlkZXIuanMiXSwibmFtZXMiOlsicHJvdmlkZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsOEJBQUQsQ0FBeEI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixFQUNoQixHQUFHSDtBQURhLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxyZWNvbnNpZGVyZVxccmVjb25zaWRlcmUtY29ycG9yYXRpb24tYXBpXFxyZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcm92aWRlciA9IHJlcXVpcmUoJy4vcHJvdmlkZXIvTXV0YXRpb24vcHJvdmlkZXInKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG5cdC4uLnByb3ZpZGVyXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexProvider.js"
      ],
      "names": [
        "provider",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,8BAAD,CAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EAChB,GAAGH;AADa,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const provider = require('./provider/Mutation/provider');\r\n\r\nmodule.exports = {\r\n\t...provider\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1566866247314
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\provider\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\provider\\\\Mutation\\\\provider.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\provider\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\provider\\Mutation\\provider.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\provider\\Mutation\\provider.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\provider\\Mutation\\provider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\provider\\Mutation",
        "sourceFileName": "provider.js"
      }
    },
    "ast": null,
    "code": "var Provider = require('../../../models/provider.model');\n\nvar Corporation = require('../../../models/corporation.model');\n\nvar Collector = require('../../../models/collector.model');\n\nvar CheckPoint = require('../../../models/checkpoint.model');\n\nvar TransactionHistory = require('../../../models/transactionhistory.model');\n\nmongoose = require('mongoose');\nvar Classification = {\n  Provider: 'Fornecedor',\n  Collector: 'Empresa Coletora'\n};\nmodule.exports = provider = {\n  Query: {\n    async getProvider(root, {\n      _id\n    }) {\n      return await Provider.findById(_id);\n    },\n\n    async getProviderByUser(root, {\n      _id\n    }) {\n      var res = await Provider.findOne({\n        'users._id': _id\n      });\n\n      if (!res) {\n        return undefined;\n      } else {\n        return res;\n      }\n    },\n\n    async allProviders() {\n      return await Provider.find();\n    },\n\n    async allUnits(root, {\n      _id\n    }) {\n      var res = await Provider.findById(_id);\n\n      if (res) {\n        var unit;\n        var units = [];\n\n        for (var i = 0; res.units.length > i; i++) {\n          unit = undefined;\n          unit = await Provider.findById(res.units[i]._id);\n\n          if (!unit) {\n            unit = await Corporation.findById(res.units[i]._id);\n          }\n\n          if (!unit) {\n            unit = await Collector.findById(res.units[i]._id);\n          }\n\n          units.push(unit);\n        }\n\n        return units;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allDepartments(root, {\n      _id\n    }) {\n      var res = await Provider.findById(_id);\n\n      if (res) {\n        return res.departments;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allDocuments(root, {\n      _id\n    }) {\n      var res = await Provider.findById(_id);\n\n      if (res) {\n        return res.documents;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allResiduesRegister(root, {\n      _id\n    }) {\n      var res = await Provider.findById(_id);\n\n      if (res) {\n        return res.residuesRegister;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allResidueArrived(root, {\n      _id\n    }) {\n      var res = await Provider.findById(_id);\n\n      if (res) {\n        return res.residuesPerformed;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allSchedulings(root, {\n      _id\n    }) {\n      var res = await Provider.findById(_id);\n\n      if (res) {\n        return res.scheduling;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allEntries(root, {\n      _id\n    }) {\n      var res = await Provider.findById(_id);\n\n      if (res) {\n        return res.entries;\n      } else {\n        return undefined;\n      }\n    },\n\n    async allProvidersId(root, {\n      _id\n    }) {\n      var res = await Provider.findById(_id);\n\n      if (res) {\n        return res.myProviders;\n      } else {\n        return undefined;\n      }\n    }\n\n  },\n  Mutation: {\n    async createorUpdateProvider(root, {\n      _id,\n      typeCorporation,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n\n        for (var i = 0; input.length > i; i++) {\n          var res = await Provider.findOne();\n\n          if (res === undefined || res === null) {\n            var id = undefined;\n            var returned = await Provider.create(input[i]).then(x => {\n              id = x._id;\n            });\n            addID(_id, id, typeCorporation);\n          } else if (input[i]._id) {\n            Provider.findByIdAndUpdate(input[i]._id, input[i], {\n              new: true\n            }, (err, todo) => {\n              if (err) throw new Error('ERE009');\n            });\n          } else {\n            var id;\n\n            for (var x = 0; input[i].users.length > x; x++) {\n              var res = await Provider.findOne({\n                email: input[i].users[x].email\n              });\n              id = undefined;\n\n              if (!res) {\n                var returned = await Provider.create(input[i]).then(x => {\n                  id = x._id;\n                });\n                addID(_id, id, typeCorporation);\n              }\n            }\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Provider.find();\n        return res;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async deleteProvider(root, {\n      _id\n    }) {// return await Provider.findOneAndRemove({\n      // \t_id\n      // });\n    },\n\n    async createorUpdateDepartment(root, {\n      _id,\n      input\n    }) {\n      try {\n        res = await Provider.findById(_id, function (err, corp) {\n          if (err) {\n            return next(new Error('ERE009'));\n          } else {\n            for (var i = 0; input.length > i; i++) {\n              if (input[i]._id) {\n                index = corp.departments.findIndex(x => x._id == input[i]._id);\n\n                if (index) {\n                  corp.departments[index] = input[i];\n                } else if (!corp.departments || corp.departments.length <= 0) {\n                  corp.departments = [input[i]];\n                }\n              } else {\n                if (!corp.departments || corp.departments.length <= 0) {\n                  corp.departments = [input[i]];\n                } else {\n                  corp.departments.push(input[i]);\n                }\n              }\n            }\n\n            corp.save();\n            return;\n          }\n        });\n        var res = await Provider.findById(_id);\n        return res.departments;\n      } catch (error) {\n        throw new Error('ERE009');\n      }\n    },\n\n    async createorUpdateResiduesRegister(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Provider.findById(_id);\n        var returnElement;\n\n        if (!res.residuesRegister || !res.residuesRegister.departments || res.residuesRegister.departments.length <= 0) {\n          var elementSaved;\n          returnElement = await new Promise((resolve, reject) => {\n            Provider.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                input.departments.forEach(department => {\n                  if (!res.residuesRegister || !res.residuesRegister.departments || res.residuesRegister.departments.length <= 0) {\n                    res['residuesRegister'] = new Object();\n                    var depart = {\n                      _id: department._id,\n                      name: department.name,\n                      isChanged: false,\n                      description: department.description,\n                      active: department.active,\n                      qrCode: []\n                    };\n                    res['residuesRegister']['departments'] = [depart];\n                  } else {\n                    var depart = {\n                      _id: department._id,\n                      name: department.name,\n                      isChanged: false,\n                      description: department.description,\n                      active: department.active,\n                      qrCode: []\n                    };\n                    var exist = res.residuesRegister.departments.find(x => x.name === depart.name);\n\n                    if (!exist) {\n                      res.residuesRegister.departments.push(depart);\n                    }\n                  }\n                });\n                input.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    res.residuesRegister.departments.forEach(departmentDB => {\n                      if (department.name === departmentDB.name) {\n                        departmentDB.qrCode.push(qrCode);\n                      }\n                    });\n                  });\n                });\n                corp.residuesRegister = res.residuesRegister;\n                corp.update(corp).then(x => {\n                  resolve(corp);\n                });\n              }\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.findOne({\n            _idCorporation: _id\n          });\n          var isNew = false;\n          res = await Provider.findById(_id);\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            res.residuesRegister.departments.forEach(department => {\n              department.qrCode.forEach(qrCode => {\n                if (!checkpoint) {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  checkpoint = new Object({\n                    _idCorporation: _id,\n                    wastegenerated: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!checkpoint.wastegenerated || checkpoint.wastegenerated.length <= 0) {\n                    checkpoint = new Object({\n                      _idCorporation: _id,\n                      wastegenerated: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.wastegenerated.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne(function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  if (!check || check.length <= 0) {\n                    check = check;\n                  } else {\n                    check.wastegenerated = checkpoint.wastegenerated;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /*Gerando historico */\n\n          var transaction = await TransactionHistory.findOne({\n            _idCorporation: _id\n          });\n          var isNew = false;\n          res = await Provider.findById(_id);\n          var history = await new Promise(async (resolve, reject) => {\n            res.residuesRegister.departments.forEach(department => {\n              department.qrCode.forEach(qrCode => {\n                if (!transaction) {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  transaction = new Object({\n                    _idCorporation: _id,\n                    checkPoints: new Object({\n                      wastegenerated: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (transaction.checkPoints.wastegenerated === undefined || transaction.checkPoints.wastegenerated.length <= 0) {\n                    transaction = new Object({\n                      _idCorporation: _id,\n                      checkPoints: new Object({\n                        wastegenerated: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.wastegenerated.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne(function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (trans === undefined || trans.length <= 0) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.wastegenerated = transaction.checkPoints.wastegenerated;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          var removed = false;\n\n          for (i = 0; input.departments.length > i; i++) {\n            if (input.departments[i].isChanged) {\n              var existRemoved = false;\n              /*verifica se existe mudança de departamento e exclui o item que esta salvo no departamento antigo para depois inserir no novo\r\n              Se por acaso o usuário modificou, mas voltou ao antigo ele apenas não exclui e retorn\r\n              */\n\n              for (y = 0; y < input.departments[i].qrCode.length; y++) {\n                res.residuesRegister.departments.forEach((department, index) => {\n                  department.qrCode.forEach((qrCode, indexQrCode) => {\n                    if (input.departments[i]._id !== department._id) {\n                      if (qrCode.code === input.departments[i].qrCode[y].code) {\n                        department.qrCode.splice(indexQrCode, 1);\n                      }\n                    }\n                  });\n                }); //se não tem mais qrcode remove o departamento\n\n                res.residuesRegister.departments.forEach((department, index) => {\n                  if (!department || !department.qrCode || department.qrCode.length <= 0) {\n                    res.residuesRegister.departments.splice(index, 1);\n                  }\n                });\n              }\n\n              input.departments[i].isChanged = false;\n              removed = true;\n            }\n          }\n\n          await res.update(res).then(console.log('ok removed from old'));\n          res = await Provider.findById(_id);\n\n          for (i = 0; input.departments.length > i; i++) {\n            res = await Provider.findById(_id);\n            var exist = await res.residuesRegister.departments.find(x => x._id == input.departments[i]._id);\n\n            if (exist === undefined || exist.length <= 0) {\n              await res.residuesRegister.departments.push(input.departments[i]);\n              await res.update(res).then(console.log('ok push in department'));\n              res = await Provider.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                res.residuesRegister.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    if (input.departments[i].name === department.name) {\n                      checkpoint.wastegenerated.qrCode.push(qrCode);\n                    }\n                  });\n                });\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.wastegenerated = checkpoint.wastegenerated;\n                    check.update(check).then(x => {});\n                  }\n                });\n                resolve();\n              });\n              /* gerando histórico de alterações */\n\n              res = await Provider.findById(_id);\n              var transaction = TransactionHistory.findOne({\n                _idCorporation: _id\n              });\n              var history = await new Promise((resolve, reject) => {\n                res.residuesRegister.departments.forEach(department => {\n                  department.qrCode.forEach(qrCode => {\n                    if (input.departments[i].name === department.name) {\n                      var value = {\n                        date: new Date(),\n                        code: qrCode.code,\n                        material: qrCode.material\n                      };\n                      TransactionHistory.findOne({\n                        _idCorporation: _id\n                      }, function (err, trans) {\n                        if (!trans) console.log('ERE009');else {\n                          trans.checkPoints.wastegenerated.qrCode.push(value);\n                          trans.update(trans).then(x => {});\n                        }\n                      });\n                    }\n                  });\n                });\n                resolve();\n              });\n              res = await Provider.findById(_id);\n            } else {\n              for (q = 0; input.departments[i].qrCode.length > q; q++) {\n                var isUpdated = false;\n                res = await Provider.findById(_id);\n\n                if (input.departments[i].qrCode[q]._id) {\n                  res.residuesRegister.departments.forEach(department => {\n                    department.qrCode.forEach(qrCode => {\n                      if (qrCode.code == input.departments[i].qrCode[q].code) {\n                        qrCode.set(input.departments[i].qrCode[q]);\n                        isUpdated = true;\n                      }\n                    });\n                  });\n\n                  if (isUpdated) {\n                    await res.update(res).then(console.log('ok set qr codes'));\n                    res = await Provider.findById(_id);\n                    isUpdated = false;\n                    /* gerando checkPoint */\n\n                    var checkpoint = await CheckPoint.findOne({\n                      _idCorporation: _id\n                    });\n                    var element = await new Promise((resolve, reject) => {\n                      checkpoint.wastegenerated.qrCode.forEach(qrCode => {\n                        if (qrCode.code == input.departments[i].qrCode[q].code) {\n                          qrCode.set(input.departments[i].qrCode[q]);\n                        }\n                      });\n                      CheckPoint.findOne({\n                        _idCorporation: _id\n                      }, function (err, check) {\n                        if (!check) console.log('ERE009');else {\n                          check.wastegenerated = checkpoint.wastegenerated;\n                          check.update(check).then(x => {\n                            resolve();\n                          });\n                        }\n                      });\n                    });\n                    /* gerando histórico de alterações */\n\n                    var transaction = await TransactionHistory.findOne({\n                      _idCorporation: _id\n                    });\n                    res = await Provider.findById(_id);\n                    var history = await new Promise((resolve, reject) => {\n                      var value = {\n                        date: new Date(),\n                        code: input.departments[i].qrCode[q].code,\n                        material: input.departments[i].qrCode[q].material\n                      };\n                      TransactionHistory.findOne({\n                        _idCorporation: _id\n                      }, function (err, trans) {\n                        if (!trans) console.log('ERE009');else {\n                          trans.checkPoints.wastegenerated.qrCode.push(value);\n                          trans.update(trans).then(x => {});\n                        }\n                      });\n                      resolve();\n                    });\n                    res = await Provider.findById(_id);\n                  }\n                } else {\n                  res.residuesRegister.departments.forEach(department => {\n                    if (input.departments[i]._id == department._id) {\n                      department.qrCode.push(input.departments[i].qrCode[q]);\n                    }\n                  });\n                  await res.update(res).then(console.log('ok push to exist department'));\n                  res = await Provider.findById(_id);\n                  /* gerando checkPoint */\n\n                  var checkpoint = await CheckPoint.findOne({\n                    _idCorporation: _id\n                  });\n                  var isPushed = false;\n                  var element = await new Promise((resolve, reject) => {\n                    checkpoint.wastegenerated.qrCode.forEach((qrCode, index) => {\n                      if (!isPushed) {\n                        checkpoint.wastegenerated.qrCode.push(input.departments[i].qrCode[q]);\n                        isPushed = true;\n                      }\n                    });\n                    CheckPoint.findOne({\n                      _idCorporation: _id\n                    }, function (err, check) {\n                      if (!check) console.log('ERE009');else {\n                        check.wastegenerated = checkpoint.wastegenerated;\n                        check.update(check).then(x => {\n                          resolve();\n                        });\n                      }\n                    });\n                  });\n                  /* gerando histórico de alterações */\n\n                  res = await Provider.findById(_id);\n                  var transaction = await TransactionHistory.findOne({\n                    _idCorporation: _id\n                  });\n                  var history = await new Promise((resolve, reject) => {\n                    var value = {\n                      date: new Date(),\n                      code: input.departments[i].qrCode[q].code,\n                      material: input.departments[i].qrCode[q].material\n                    };\n                    TransactionHistory.findOne({\n                      _idCorporation: _id\n                    }, function (err, trans) {\n                      if (!trans) console.log('ERE009');else {\n                        trans.checkPoints.wastegenerated.qrCode.push(value);\n                        trans.update(trans).then(x => {});\n                        resolve();\n                      }\n                    });\n                  });\n                  res = await Provider.findById(_id);\n                }\n              }\n            }\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Provider.findById(_id);\n        return res.residuesRegister;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateScheduling(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Provider.findById(_id);\n\n        if (!res.scheduling || res.scheduling.length <= 0) {\n          returnElement = await new Promise((resolve, reject) => {\n            Provider.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                input.forEach(scheduling => {\n                  if (res.scheduling === undefined || res.scheduling.length <= 0) {\n                    res.scheduling = [scheduling];\n                  } else {\n                    res.scheduling.push(scheduling);\n                  }\n                });\n              }\n              corp.scheduling = res.scheduling;\n              corp.update(corp).then(x => {\n                resolve(corp);\n              });\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.findOne({\n            _idCorporation: _id\n          });\n          res = await Provider.findById(_id);\n          var isNew = false;\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            res.scheduling.forEach(scheduling => {\n              scheduling.qrCode.forEach(qrCode => {\n                if (!checkpoint) {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionrequested: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!checkpoint.collectionrequested || checkpoint.collectionrequested.length <= 0) {\n                    checkpoint = new Object({\n                      collectionrequested: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionrequested.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  if (!check || check.length <= 0) {\n                    check = check;\n                  } else {\n                    check.collectionrequested = checkpoint.collectionrequested;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /*Gerando historico */\n\n          var transaction = await TransactionHistory.findOne({\n            _idCorporation: _id\n          });\n          res = await Provider.findById(_id);\n          var isNew = false;\n          var history = await new Promise(async (resolve, reject) => {\n            res.scheduling.forEach(scheduling => {\n              scheduling.qrCode.forEach(qrCode => {\n                if (!transaction) {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionrequested: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: qrCode.code,\n                    material: qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionrequested || transaction.checkPoints.collectionrequested.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionrequested: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionrequested.qrCode.push(value);\n                  }\n                }\n              });\n            });\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (!trans || trans.length <= 0) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          for (var i = 0; input.length > i; i++) {\n            var exist = await res.scheduling.find(x => x._id == input[i]._id);\n\n            if (!exist || exist.length <= 0) {\n              res.scheduling.push(input[i]);\n              await res.update(res).then(console.log('ok push scheduling'));\n            } else {\n              exist.set(input[i]);\n              await res.update(res).then(console.log('ok set scheduling'));\n            }\n\n            res = await Provider.findById(_id);\n            /* gerando checkPoint */\n\n            var checkpoint = await CheckPoint.findOne({\n              _idCorporation: _id\n            });\n            var element = await new Promise((resolve, reject) => {\n              for (var x = 0; input[i].qrCode.length > x; x++) {\n                var existQr = undefined;\n\n                for (y = 0; y < checkpoint.collectionrequested.qrCode.length; y++) {\n                  if (checkpoint.collectionrequested.qrCode[y].code === input[i].qrCode[x].code) {\n                    existQr = checkpoint.collectionrequested.qrCode[y];\n                  }\n                }\n\n                if (existQr) {\n                  existQr.set(input[i].qrCode[x]);\n                } else {\n                  checkpoint.collectionrequested.qrCode.push(input[i].qrCode[x]);\n                }\n              }\n\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) console.log('ERE009');else {\n                  check.collectionrequested = checkpoint.collectionrequested;\n                  check.update(check).then(x => {\n                    resolve();\n                  });\n                }\n              });\n            });\n            /* gerando histórico de alterações */\n\n            var transaction = await TransactionHistory.findOne({\n              _idCorporation: _id\n            });\n            var element = await new Promise((resolve, reject) => {\n              for (var x = 0; input[i].qrCode.length > x; x++) {\n                transaction.checkPoints.collectionrequested.qrCode.push(input[i].qrCode[x]);\n              }\n\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  trans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\n                  trans.update(trans).then(x => {\n                    resolve();\n                  });\n                }\n              });\n            });\n            res = await Provider.findById(_id);\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Provider.findById(_id);\n        return res.scheduling;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateEntries(root, {\n      _id,\n      input\n    }) {\n      const session = await mongoose.startSession();\n\n      try {\n        session.startTransaction();\n        var res = await Provider.findById(_id);\n\n        if (res.entries === undefined || res.entries === null) {\n          returnElement = await new Promise((resolve, reject) => {\n            Provider.findById(_id, function (err, corp) {\n              if (!corp) console.log('ERE009');else {\n                if (res.entries === undefined || res.entries === null) {\n                  res.entries = input;\n                } else {\n                  res.entries = input;\n                }\n              }\n              corp.entries = res.entries;\n              corp.update(corp).then(x => {\n                resolve(corp);\n              });\n            });\n          });\n          /* gerando checkPoint */\n\n          var checkpoint = await CheckPoint.find({\n            _idCorporation: _id\n          });\n          res = await Provider.findById(_id);\n          var isNew = false;\n          var checkpoin = await new Promise(async (resolve, reject) => {\n            if (res.entries.sale && res.entries.sale.length > 0) {\n              res.entries.sale.forEach(sale => {\n                if (!checkpoint || checkpoint.length <= 0) {\n                  var value = {\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionperformed: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n\n                  if (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\n                    checkpoint = new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            } else if (res.entries.purchase && res.entries.purchase.length > 0) {\n              res.entries.purchase.forEach(purchase => {\n                if (!checkpoint || checkpoint.length <= 0) {\n                  var value = {\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n                  checkpoint = new Object({\n                    collectionperformed: new Object({\n                      qrCode: [value]\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n\n                  if (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\n                    checkpoint = new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    });\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            }\n\n            if (isNew) {\n              var returned = await CheckPoint.create(checkpoint);\n            } else {\n              CheckPoint.findOne({\n                _idCorporation: _id\n              }, function (err, check) {\n                if (!check) {\n                  console.log('ERE009');\n                } else {\n                  if (!check || check.length <= 0) {\n                    check = checkpoint;\n                  } else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                  }\n\n                  check.update(check).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n          /* gerando histórico de alterações */\n\n          var transaction = await TransactionHistory.find({\n            _idCorporation: _id\n          });\n          res = await Provider.findById(_id);\n          var isNew = false;\n          var history = await new Promise(async (resolve, reject) => {\n            if (res.entries.sale && res.entries.sale.length > 0) {\n              res.entries.sale.forEach(sale => {\n                if (transaction === undefined || transaction === null) {\n                  var value = {\n                    date: new Date(),\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: sale.qrCode.code,\n                    material: sale.qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionperformed || transaction.checkPoints.collectionperformed.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionperformed: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            } else if (res.entries.purchase && res.entries.purchase.length > 0) {\n              res.entries.purchase.forEach(purchase => {\n                if (transaction === undefined || transaction === null) {\n                  var value = {\n                    date: new Date(),\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n                  transaction = new Object({\n                    checkPoints: new Object({\n                      collectionperformed: new Object({\n                        qrCode: [value]\n                      })\n                    })\n                  });\n                  isNew = true;\n                } else {\n                  var value = {\n                    date: new Date(),\n                    code: purchase.qrCode.code,\n                    material: purchase.qrCode.material\n                  };\n\n                  if (!transaction.checkPoints || !transaction.checkPoints.collectionperformed || transaction.checkPoints.collectionperformed.length <= 0) {\n                    transaction = new Object({\n                      checkPoints: new Object({\n                        collectionperformed: new Object({\n                          qrCode: [value]\n                        })\n                      })\n                    });\n                  } else {\n                    transaction.checkPoints.collectionperformed.qrCode.push(value);\n                  }\n                }\n              });\n            }\n\n            if (isNew) {\n              var returned = await TransactionHistory.create(transaction);\n            } else {\n              TransactionHistory.findOne({\n                _idCorporation: _id\n              }, function (err, trans) {\n                if (!trans) console.log('ERE009');else {\n                  if (trans === undefined || trans === null) {\n                    trans = transaction;\n                  } else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                  }\n\n                  trans.update(trans).then(x => {});\n                }\n              });\n            }\n\n            resolve();\n          });\n        } else {\n          if (input.sale !== undefined || input.sale.length > 0) {\n            for (i = 0; i < input.sale.length; i++) {\n              var exist = await res.entries.sale.find(x => x._id == input.sale[i]._id);\n\n              if (exist) {\n                exist.set(input.sale[i]);\n                await res.update(res).then(console.log('ok set entries sale'));\n              } else {\n                await res.entries.sale.push(input.sale[i]);\n                await res.update(res).then(console.log('ok push entries sale'));\n              }\n\n              res = await Provider.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.sale !== undefined && input.sale.length > 0) {\n                  var existQr = undefined;\n\n                  for (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\n                    if (checkpoint.collectionperformed.qrCode[y].code === input.sale[i].qrCode.code) {\n                      existQr = checkpoint.collectionperformed.qrCode[y];\n                    }\n                  }\n\n                  if (existQr) {\n                    existQr.set(input.sale[i].qrCode);\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(input.sale[i].qrCode);\n                  }\n                }\n\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                    check.update(check).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              /* gerando histórico de alterações */\n\n              res = await Provider.findById(_id);\n              var transaction = await TransactionHistory.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.sale !== undefined && input.sale.length > 0) {\n                  transaction.checkPoints.collectionperformed.qrCode.push(input.sale[i].qrCode);\n                }\n\n                TransactionHistory.findOne({\n                  _idCorporation: _id\n                }, function (err, trans) {\n                  if (!trans) console.log('ERE009');else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                    trans.update(trans).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              res = await Provider.findById(_id);\n            }\n          } else if (input.purchase !== undefined || input.purchase.length > 0) {\n            for (i = 0; i < input.purchase.length; i++) {\n              var exist = await res.entries.purchase.find(x => x._id == input.purchase[i]._id);\n\n              if (exist) {\n                exist.set(input.purchase[i]);\n                await res.update(res).then(console.log('ok set entries purchase'));\n              } else {\n                await res.entries.purchase.push(input.purchase[i]);\n                await res.update(res).then(console.log('ok push entries purchase'));\n              }\n\n              res = await Provider.findById(_id);\n              /* gerando checkPoint */\n\n              var checkpoint = await CheckPoint.findOne({\n                _idCorporation: _id\n              });\n              var element = await new Promise((resolve, reject) => {\n                if (input.purchase !== undefined && input.purchase.length > 0) {\n                  var existQr = undefined;\n\n                  for (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\n                    if (checkpoint.collectionperformed.qrCode[y].code === input.purchase[i].qrCode.code) {\n                      existQr = checkpoint.collectionperformed.qrCode[y];\n                    }\n                  }\n\n                  if (existQr) {\n                    existQr.set(input.purchase[i].qrCode);\n                  } else {\n                    checkpoint.collectionperformed.qrCode.push(input.purchase[i].qrCode);\n                  }\n                }\n\n                CheckPoint.findOne({\n                  _idCorporation: _id\n                }, function (err, check) {\n                  if (!check) console.log('ERE009');else {\n                    check.collectionperformed = checkpoint.collectionperformed;\n                    check.update(check).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              /* gerando histórico de alterações */\n\n              res = await Provider.findById(_id);\n              var transaction = await TransactionHistory.findOne();\n              var element = await new Promise((resolve, reject) => {\n                if (input.purchase !== undefined && input.purchase.length > 0) {\n                  transaction.checkPoints.collectionperformed.qrCode.push(input.purchase[i].qrCode);\n                }\n\n                TransactionHistory.findOne({\n                  _idCorporation: _id\n                }, function (err, trans) {\n                  if (!trans) console.log('ERE009');else {\n                    trans.checkPoints.collectionperformed = transaction.checkPoints.collectionperformed;\n                    trans.update(trans).then(x => {\n                      resolve();\n                    });\n                  }\n                });\n              });\n              res = await Provider.findById(_id);\n            }\n          }\n        }\n\n        await session.commitTransaction();\n        await session.endSession();\n        console.log('resolved');\n        var res = await Provider.findById(_id);\n        return res.entries;\n      } catch (error) {\n        await session.abortTransaction();\n        await session.endSession();\n        console.log(error);\n        console.log('aborting');\n        return new Error('ERE009');\n      }\n    },\n\n    async createorUpdateResidueArrived(root, {\n      _id,\n      input\n    }) {},\n\n    async createorUpdateDocument(root, {\n      _id,\n      input\n    }) {\n      try {\n        var element = await new Promise((resolve, reject) => {\n          var res = Provider.findById(_id, function (err, corp) {\n            if (err) {\n              reject(next(new Error('ERE009')));\n            } else {\n              for (var i = 0; input.length > i; i++) {\n                if (input[i]._id) {\n                  index = corp.documents.findIndex(x => x._id == input[i]._id);\n                  corp.documents[index] = input[i];\n                } else {\n                  corp.documents.push(input[i]);\n                }\n              }\n\n              corp.save();\n              resolve(corp);\n            }\n          });\n        });\n        var res = await Provider.findById(_id);\n        return res.documents;\n      } catch (error) {\n        throw new Error('ERE009');\n      }\n    }\n\n  }\n};\n/*Salvando os ids 'novos apenas' dos fornecedores criados para que a empresa que os criaram possam \r\n  carregarseus dados futuramente, esta em aberto para que fornecedores cadastrem seus fornecedores tbm \r\n  */\n\nasync function addID(_id, id, typeCorporation) {\n  var object = {\n    providerId: id\n  };\n\n  if (typeCorporation === Classification.Collector) {\n    var collector = await Collector.findById(_id);\n\n    if (collector.myProviders === undefined || collector.myProviders.length <= 0) {\n      collector['myProviders'] = [object];\n    } else {\n      collector.myProviders.push(object);\n    }\n\n    Collector.findOne(_id, function (err, coll) {\n      if (!coll) console.log('ERE009');else {\n        coll.myProviders = collector.myProviders;\n        coll.update(coll).then(x => {});\n      }\n    });\n  } else if (typeCorporation === Classification.Provider) {\n    var provider = await Provider.findById(_id);\n\n    if (provider.myProviders === undefined || provider.myProviders.length <= 0) {\n      provider['myProviders'] = [object];\n    } else {\n      provider.myProviders.push(object);\n    }\n\n    Provider.findOne(_id, function (err, prov) {\n      if (!prov) console.log('ERE009');else {\n        prov.myProviders = provider.myProviders;\n        prov.update(prov).then(x => {});\n      }\n    });\n  } else {\n    var corporation = await Corporation.findById(_id);\n\n    if (corporation.myProviders === undefined || corporation.myProviders.length <= 0) {\n      corporation['myProviders'] = [object];\n    } else {\n      corporation.myProviders.push(object);\n    }\n\n    await Corporation.findById(_id, function (err, corp) {\n      if (!corp) console.log('ERE009');else {\n        corp.myProviders = corporation.myProviders;\n        corp.update(corp).then(x => {});\n      }\n    });\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "provider.js"
      ],
      "names": [
        "Provider",
        "require",
        "Corporation",
        "Collector",
        "CheckPoint",
        "TransactionHistory",
        "mongoose",
        "Classification",
        "module",
        "exports",
        "provider",
        "Query",
        "getProvider",
        "root",
        "_id",
        "findById",
        "getProviderByUser",
        "res",
        "findOne",
        "undefined",
        "allProviders",
        "find",
        "allUnits",
        "unit",
        "units",
        "i",
        "length",
        "push",
        "allDepartments",
        "departments",
        "allDocuments",
        "documents",
        "allResiduesRegister",
        "residuesRegister",
        "allResidueArrived",
        "residuesPerformed",
        "allSchedulings",
        "scheduling",
        "allEntries",
        "entries",
        "allProvidersId",
        "myProviders",
        "Mutation",
        "createorUpdateProvider",
        "typeCorporation",
        "input",
        "session",
        "startSession",
        "startTransaction",
        "id",
        "returned",
        "create",
        "then",
        "x",
        "addID",
        "findByIdAndUpdate",
        "new",
        "err",
        "todo",
        "Error",
        "users",
        "email",
        "commitTransaction",
        "endSession",
        "console",
        "log",
        "error",
        "abortTransaction",
        "deleteProvider",
        "createorUpdateDepartment",
        "corp",
        "next",
        "index",
        "findIndex",
        "save",
        "createorUpdateResiduesRegister",
        "returnElement",
        "elementSaved",
        "Promise",
        "resolve",
        "reject",
        "forEach",
        "department",
        "Object",
        "depart",
        "name",
        "isChanged",
        "description",
        "active",
        "qrCode",
        "exist",
        "departmentDB",
        "update",
        "checkpoint",
        "_idCorporation",
        "isNew",
        "checkpoin",
        "value",
        "code",
        "material",
        "wastegenerated",
        "check",
        "transaction",
        "history",
        "date",
        "Date",
        "checkPoints",
        "trans",
        "removed",
        "existRemoved",
        "y",
        "indexQrCode",
        "splice",
        "element",
        "q",
        "isUpdated",
        "set",
        "isPushed",
        "createorUpdateScheduling",
        "collectionrequested",
        "existQr",
        "createorUpdateEntries",
        "sale",
        "collectionperformed",
        "purchase",
        "createorUpdateResidueArrived",
        "createorUpdateDocument",
        "object",
        "providerId",
        "collector",
        "coll",
        "prov",
        "corporation"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\provider\\Mutation",
      "sourcesContent": [
        "var Provider = require('../../../models/provider.model');\r\nvar Corporation = require('../../../models/corporation.model');\r\nvar Collector = require('../../../models/collector.model');\r\nvar CheckPoint = require('../../../models/checkpoint.model');\r\nvar TransactionHistory = require('../../../models/transactionhistory.model');\r\nmongoose = require('mongoose');\r\n\r\nvar Classification = {\r\n\tProvider: 'Fornecedor',\r\n\tCollector: 'Empresa Coletora'\r\n};\r\n\r\nmodule.exports = provider = {\r\n\tQuery: {\r\n\t\tasync getProvider(root, { _id }) {\r\n\t\t\treturn await Provider.findById(_id);\r\n\t\t},\r\n\t\tasync getProviderByUser(root, { _id }) {\r\n\t\t\tvar res = await Provider.findOne({ 'users._id': _id });\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t} else {\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allProviders() {\r\n\t\t\treturn await Provider.find();\r\n\t\t},\r\n\r\n\t\tasync allUnits(root, { _id }) {\r\n\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\tvar unit;\r\n\t\t\t\tvar units = [];\r\n\t\t\t\tfor (var i = 0; res.units.length > i; i++) {\r\n\t\t\t\t\tunit = undefined;\r\n\t\t\t\t\tunit = await Provider.findById(res.units[i]._id);\r\n\t\t\t\t\tif (!unit) {\r\n\t\t\t\t\t\tunit = await Corporation.findById(res.units[i]._id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!unit) {\r\n\t\t\t\t\t\tunit = await Collector.findById(res.units[i]._id);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunits.push(unit);\r\n\t\t\t\t}\r\n\t\t\t\treturn units;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allDepartments(root, { _id }) {\r\n\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.departments;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync allDocuments(root, { _id }) {\r\n\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.documents;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync allResiduesRegister(root, { _id }) {\r\n\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.residuesRegister;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allResidueArrived(root, { _id }) {\r\n\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.residuesPerformed;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allSchedulings(root, { _id }) {\r\n\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.scheduling;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allEntries(root, { _id }) {\r\n\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.entries;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync allProvidersId(root, { _id }) {\r\n\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\tif (res) {\r\n\t\t\t\treturn res.myProviders;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tMutation: {\r\n\t\tasync createorUpdateProvider(root, { _id, typeCorporation, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\tvar res = await Provider.findOne();\r\n\t\t\t\t\tif (res === undefined || res === null) {\r\n\t\t\t\t\t\tvar id = undefined;\r\n\t\t\t\t\t\tvar returned = await Provider.create(input[i]).then((x) => {\r\n\t\t\t\t\t\t\tid = x._id;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\taddID(_id, id, typeCorporation);\r\n\t\t\t\t\t} else if (input[i]._id) {\r\n\t\t\t\t\t\tProvider.findByIdAndUpdate(input[i]._id, input[i], { new: true }, (err, todo) => {\r\n\t\t\t\t\t\t\tif (err) throw new Error('ERE009');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar id;\r\n\t\t\t\t\t\tfor (var x = 0; input[i].users.length > x; x++) {\r\n\t\t\t\t\t\t\tvar res = await Provider.findOne({ email: input[i].users[x].email });\r\n\t\t\t\t\t\t\tid = undefined;\r\n\t\t\t\t\t\t\tif (!res) {\r\n\t\t\t\t\t\t\t\tvar returned = await Provider.create(input[i]).then((x) => {\r\n\t\t\t\t\t\t\t\t\tid = x._id;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\taddID(_id, id, typeCorporation);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\t\t\t\tvar res = await Provider.find();\r\n\t\t\t\treturn res;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync deleteProvider(root, { _id }) {\r\n\t\t\t// return await Provider.findOneAndRemove({\r\n\t\t\t// \t_id\r\n\t\t\t// });\r\n\t\t},\r\n\r\n\t\tasync createorUpdateDepartment(root, { _id, input }) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await Provider.findById(_id, function(err, corp) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn next(new Error('ERE009'));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\t\tif (input[i]._id) {\r\n\t\t\t\t\t\t\t\tindex = corp.departments.findIndex((x) => x._id == input[i]._id);\r\n\t\t\t\t\t\t\t\tif (index) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments[index] = input[i];\r\n\t\t\t\t\t\t\t\t} else if (!corp.departments || corp.departments.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments = [ input[i] ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (!corp.departments || corp.departments.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tcorp.departments = [ input[i] ];\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcorp.departments.push(input[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcorp.save();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\t\treturn res.departments;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync createorUpdateResiduesRegister(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\t\tvar returnElement;\r\n\t\t\t\tif (\r\n\t\t\t\t\t!res.residuesRegister ||\r\n\t\t\t\t\t!res.residuesRegister.departments ||\r\n\t\t\t\t\tres.residuesRegister.departments.length <= 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar elementSaved;\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tProvider.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tinput.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!res.residuesRegister ||\r\n\t\t\t\t\t\t\t\t\t\t!res.residuesRegister.departments ||\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\tres['residuesRegister'] = new Object();\r\n\t\t\t\t\t\t\t\t\t\tvar depart = {\r\n\t\t\t\t\t\t\t\t\t\t\t_id: department._id,\r\n\t\t\t\t\t\t\t\t\t\t\tname: department.name,\r\n\t\t\t\t\t\t\t\t\t\t\tisChanged: false,\r\n\t\t\t\t\t\t\t\t\t\t\tdescription: department.description,\r\n\t\t\t\t\t\t\t\t\t\t\tactive: department.active,\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: []\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tres['residuesRegister']['departments'] = [ depart ];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tvar depart = {\r\n\t\t\t\t\t\t\t\t\t\t\t_id: department._id,\r\n\t\t\t\t\t\t\t\t\t\t\tname: department.name,\r\n\t\t\t\t\t\t\t\t\t\t\tisChanged: false,\r\n\t\t\t\t\t\t\t\t\t\t\tdescription: department.description,\r\n\t\t\t\t\t\t\t\t\t\t\tactive: department.active,\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: []\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tvar exist = res.residuesRegister.departments.find(\r\n\t\t\t\t\t\t\t\t\t\t\t(x) => x.name === depart.name\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tif (!exist) {\r\n\t\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.push(depart);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tinput.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((departmentDB) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (department.name === departmentDB.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepartmentDB.qrCode.push(qrCode);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tcorp.residuesRegister = res.residuesRegister;\r\n\t\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.wastegenerated || checkpoint.wastegenerated.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne(function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = check;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/*Gerando historico */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!transaction) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated === undefined ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t_idCorporation: _id,\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\twastegenerated: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne(function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (trans === undefined || trans.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated = transaction.checkPoints.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar removed = false;\r\n\t\t\t\t\tfor (i = 0; input.departments.length > i; i++) {\r\n\t\t\t\t\t\tif (input.departments[i].isChanged) {\r\n\t\t\t\t\t\t\tvar existRemoved = false;\r\n\t\t\t\t\t\t\t/*verifica se existe mudança de departamento e exclui o item que esta salvo no departamento antigo para depois inserir no novo\r\n\t\t\t\t\t\tSe por acaso o usuário modificou, mas voltou ao antigo ele apenas não exclui e retorn\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\tfor (y = 0; y < input.departments[i].qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department, index) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode, indexQrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i]._id !== department._id) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code === input.departments[i].qrCode[y].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.splice(indexQrCode, 1);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t//se não tem mais qrcode remove o departamento\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department, index) => {\r\n\t\t\t\t\t\t\t\t\tif (!department || !department.qrCode || department.qrCode.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tinput.departments[i].isChanged = false;\r\n\t\t\t\t\t\t\tremoved = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait res.update(res).then(console.log('ok removed from old'));\r\n\t\t\t\t\tres = await Provider.findById(_id);\r\n\r\n\t\t\t\t\tfor (i = 0; input.departments.length > i; i++) {\r\n\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\tvar exist = await res.residuesRegister.departments.find(\r\n\t\t\t\t\t\t\t(x) => x._id == input.departments[i]._id\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tif (exist === undefined || exist.length <= 0) {\r\n\t\t\t\t\t\t\tawait res.residuesRegister.departments.push(input.departments[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push in department'));\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i].name === department.name) {\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(qrCode);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i].name === department.name) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (q = 0; input.departments[i].qrCode.length > q; q++) {\r\n\t\t\t\t\t\t\t\tvar isUpdated = false;\r\n\t\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\t\tif (input.departments[i].qrCode[q]._id) {\r\n\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code == input.departments[i].qrCode[q].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode.set(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\tisUpdated = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tif (isUpdated) {\r\n\t\t\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set qr codes'));\r\n\t\t\t\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\t\t\t\tisUpdated = false;\r\n\r\n\t\t\t\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (qrCode.code == input.departments[i].qrCode[q].code) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode.set(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\t\tcode: input.departments[i].qrCode[q].code,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaterial: input.departments[i].qrCode[q].material\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tres.residuesRegister.departments.forEach((department) => {\r\n\t\t\t\t\t\t\t\t\t\tif (input.departments[i]._id == department._id) {\r\n\t\t\t\t\t\t\t\t\t\t\tdepartment.qrCode.push(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push to exist department'));\r\n\t\t\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\r\n\t\t\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\tvar isPushed = false;\r\n\t\t\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.forEach((qrCode, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!isPushed) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheckpoint.wastegenerated.qrCode.push(input.departments[i].qrCode[q]);\r\n\t\t\t\t\t\t\t\t\t\t\t\tisPushed = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheck.wastegenerated = checkpoint.wastegenerated;\r\n\t\t\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\t\t\tvar history = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\t\tcode: input.departments[i].qrCode[q].code,\r\n\t\t\t\t\t\t\t\t\t\t\tmaterial: input.departments[i].qrCode[q].material\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.wastegenerated.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\t\treturn res.residuesRegister;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync createorUpdateScheduling(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Provider.findById(_id);\r\n\r\n\t\t\t\tif (!res.scheduling || res.scheduling.length <= 0) {\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tProvider.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tinput.forEach((scheduling) => {\r\n\t\t\t\t\t\t\t\t\tif (res.scheduling === undefined || res.scheduling.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tres.scheduling = [ scheduling ];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tres.scheduling.push(scheduling);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcorp.scheduling = res.scheduling;\r\n\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.scheduling.forEach((scheduling) => {\r\n\t\t\t\t\t\t\tscheduling.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionrequested || checkpoint.collectionrequested.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionrequested.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = check;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionrequested = checkpoint.collectionrequested;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/*Gerando historico */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tres.scheduling.forEach((scheduling) => {\r\n\t\t\t\t\t\t\tscheduling.qrCode.forEach((qrCode) => {\r\n\t\t\t\t\t\t\t\tif (!transaction) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionrequested ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionrequested: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!trans || trans.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionrequested =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\tvar exist = await res.scheduling.find((x) => x._id == input[i]._id);\r\n\r\n\t\t\t\t\t\tif (!exist || exist.length <= 0) {\r\n\t\t\t\t\t\t\tres.scheduling.push(input[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push scheduling'));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\texist.set(input[i]);\r\n\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set scheduling'));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\r\n\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\tfor (var x = 0; input[i].qrCode.length > x; x++) {\r\n\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionrequested.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\tif (checkpoint.collectionrequested.qrCode[y].code === input[i].qrCode[x].code) {\r\n\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionrequested.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\texistQr.set(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcheckpoint.collectionrequested.qrCode.push(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tcheck.collectionrequested = checkpoint.collectionrequested;\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\tfor (var x = 0; input[i].qrCode.length > x; x++) {\r\n\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionrequested.qrCode.push(input[i].qrCode[x]);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionrequested = transaction.checkPoints.collectionrequested;\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\t\treturn res.scheduling;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync createorUpdateEntries(root, { _id, input }) {\r\n\t\t\tconst session = await mongoose.startSession();\r\n\t\t\ttry {\r\n\t\t\t\tsession.startTransaction();\r\n\t\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\t\tif (res.entries === undefined || res.entries === null) {\r\n\t\t\t\t\treturnElement = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tProvider.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (res.entries === undefined || res.entries === null) {\r\n\t\t\t\t\t\t\t\t\tres.entries = input;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tres.entries = input;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcorp.entries = res.entries;\r\n\t\t\t\t\t\t\tcorp.update(corp).then((x) => {\r\n\t\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\tvar checkpoint = await CheckPoint.find({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar checkpoin = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tif (res.entries.sale && res.entries.sale.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.sale.forEach((sale) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint || checkpoint.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (res.entries.purchase && res.entries.purchase.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.purchase.forEach((purchase) => {\r\n\t\t\t\t\t\t\t\tif (!checkpoint || checkpoint.length <= 0) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!checkpoint.collectionperformed || checkpoint.collectionperformed.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await CheckPoint.create(checkpoint);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\tif (!check) {\r\n\t\t\t\t\t\t\t\t\tconsole.log('ERE009');\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (!check || check.length <= 0) {\r\n\t\t\t\t\t\t\t\t\t\tcheck = checkpoint;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\tvar transaction = await TransactionHistory.find({ _idCorporation: _id });\r\n\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\tvar isNew = false;\r\n\t\t\t\t\tvar history = await new Promise(async (resolve, reject) => {\r\n\t\t\t\t\t\tif (res.entries.sale && res.entries.sale.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.sale.forEach((sale) => {\r\n\t\t\t\t\t\t\t\tif (transaction === undefined || transaction === null) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: sale.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: sale.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionperformed ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (res.entries.purchase && res.entries.purchase.length > 0) {\r\n\t\t\t\t\t\t\tres.entries.purchase.forEach((purchase) => {\r\n\t\t\t\t\t\t\t\tif (transaction === undefined || transaction === null) {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tisNew = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar value = {\r\n\t\t\t\t\t\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t\t\t\t\t\t\tcode: purchase.qrCode.code,\r\n\t\t\t\t\t\t\t\t\t\tmaterial: purchase.qrCode.material\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints ||\r\n\t\t\t\t\t\t\t\t\t\t!transaction.checkPoints.collectionperformed ||\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.length <= 0\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\ttransaction = new Object({\r\n\t\t\t\t\t\t\t\t\t\t\tcheckPoints: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\tcollectionperformed: new Object({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqrCode: [ value ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\tvar returned = await TransactionHistory.create(transaction);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (trans === undefined || trans === null) {\r\n\t\t\t\t\t\t\t\t\t\ttrans = transaction;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (input.sale !== undefined || input.sale.length > 0) {\r\n\t\t\t\t\t\tfor (i = 0; i < input.sale.length; i++) {\r\n\t\t\t\t\t\t\tvar exist = await res.entries.sale.find((x) => x._id == input.sale[i]._id);\r\n\t\t\t\t\t\t\tif (exist) {\r\n\t\t\t\t\t\t\t\texist.set(input.sale[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set entries sale'));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tawait res.entries.sale.push(input.sale[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push entries sale'));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.sale !== undefined && input.sale.length > 0) {\r\n\t\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode[y].code === input.sale[i].qrCode.code\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionperformed.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\t\texistQr.set(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.sale !== undefined && input.sale.length > 0) {\r\n\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(input.sale[i].qrCode);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (input.purchase !== undefined || input.purchase.length > 0) {\r\n\t\t\t\t\t\tfor (i = 0; i < input.purchase.length; i++) {\r\n\t\t\t\t\t\t\tvar exist = await res.entries.purchase.find((x) => x._id == input.purchase[i]._id);\r\n\t\t\t\t\t\t\tif (exist) {\r\n\t\t\t\t\t\t\t\texist.set(input.purchase[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok set entries purchase'));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tawait res.entries.purchase.push(input.purchase[i]);\r\n\t\t\t\t\t\t\t\tawait res.update(res).then(console.log('ok push entries purchase'));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\r\n\t\t\t\t\t\t\t/* gerando checkPoint */\r\n\t\t\t\t\t\t\tvar checkpoint = await CheckPoint.findOne({ _idCorporation: _id });\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.purchase !== undefined && input.purchase.length > 0) {\r\n\t\t\t\t\t\t\t\t\tvar existQr = undefined;\r\n\t\t\t\t\t\t\t\t\tfor (y = 0; y < checkpoint.collectionperformed.qrCode.length; y++) {\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode[y].code ===\r\n\t\t\t\t\t\t\t\t\t\t\tinput.purchase[i].qrCode.code\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\texistQr = checkpoint.collectionperformed.qrCode[y];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (existQr) {\r\n\t\t\t\t\t\t\t\t\t\texistQr.set(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint.collectionperformed.qrCode.push(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tCheckPoint.findOne({ _idCorporation: _id }, function(err, check) {\r\n\t\t\t\t\t\t\t\t\tif (!check) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcheck.collectionperformed = checkpoint.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\tcheck.update(check).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t/* gerando histórico de alterações */\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t\tvar transaction = await TransactionHistory.findOne();\r\n\t\t\t\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\tif (input.purchase !== undefined && input.purchase.length > 0) {\r\n\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed.qrCode.push(input.purchase[i].qrCode);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tTransactionHistory.findOne({ _idCorporation: _id }, function(err, trans) {\r\n\t\t\t\t\t\t\t\t\tif (!trans) console.log('ERE009');\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttrans.checkPoints.collectionperformed =\r\n\t\t\t\t\t\t\t\t\t\t\ttransaction.checkPoints.collectionperformed;\r\n\t\t\t\t\t\t\t\t\t\ttrans.update(trans).then((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres = await Provider.findById(_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tawait session.commitTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log('resolved');\r\n\r\n\t\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\t\treturn res.entries;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tawait session.abortTransaction();\r\n\t\t\t\tawait session.endSession();\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tconsole.log('aborting');\r\n\t\t\t\treturn new Error('ERE009');\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync createorUpdateResidueArrived(root, { _id, input }) {},\r\n\t\tasync createorUpdateDocument(root, { _id, input }) {\r\n\t\t\ttry {\r\n\t\t\t\tvar element = await new Promise((resolve, reject) => {\r\n\t\t\t\t\tvar res = Provider.findById(_id, function(err, corp) {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\treject(next(new Error('ERE009')));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (var i = 0; input.length > i; i++) {\r\n\t\t\t\t\t\t\t\tif (input[i]._id) {\r\n\t\t\t\t\t\t\t\t\tindex = corp.documents.findIndex((x) => x._id == input[i]._id);\r\n\t\t\t\t\t\t\t\t\tcorp.documents[index] = input[i];\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcorp.documents.push(input[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcorp.save();\r\n\t\t\t\t\t\t\tresolve(corp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar res = await Provider.findById(_id);\r\n\t\t\t\treturn res.documents;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error('ERE009');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/*Salvando os ids 'novos apenas' dos fornecedores criados para que a empresa que os criaram possam \r\n  carregarseus dados futuramente, esta em aberto para que fornecedores cadastrem seus fornecedores tbm \r\n  */\r\nasync function addID(_id, id, typeCorporation) {\r\n\tvar object = {\r\n\t\tproviderId: id\r\n\t};\r\n\tif (typeCorporation === Classification.Collector) {\r\n\t\tvar collector = await Collector.findById(_id);\r\n\t\tif (collector.myProviders === undefined || collector.myProviders.length <= 0) {\r\n\t\t\tcollector['myProviders'] = [ object ];\r\n\t\t} else {\r\n\t\t\tcollector.myProviders.push(object);\r\n\t\t}\r\n\t\tCollector.findOne(_id, function(err, coll) {\r\n\t\t\tif (!coll) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tcoll.myProviders = collector.myProviders;\r\n\t\t\t\tcoll.update(coll).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t} else if (typeCorporation === Classification.Provider) {\r\n\t\tvar provider = await Provider.findById(_id);\r\n\t\tif (provider.myProviders === undefined || provider.myProviders.length <= 0) {\r\n\t\t\tprovider['myProviders'] = [ object ];\r\n\t\t} else {\r\n\t\t\tprovider.myProviders.push(object);\r\n\t\t}\r\n\t\tProvider.findOne(_id, function(err, prov) {\r\n\t\t\tif (!prov) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tprov.myProviders = provider.myProviders;\r\n\t\t\t\tprov.update(prov).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\tvar corporation = await Corporation.findById(_id);\r\n\t\tif (corporation.myProviders === undefined || corporation.myProviders.length <= 0) {\r\n\t\t\tcorporation['myProviders'] = [ object ];\r\n\t\t} else {\r\n\t\t\tcorporation.myProviders.push(object);\r\n\t\t}\r\n\t\tawait Corporation.findById(_id, function(err, corp) {\r\n\t\t\tif (!corp) console.log('ERE009');\r\n\t\t\telse {\r\n\t\t\t\tcorp.myProviders = corporation.myProviders;\r\n\t\t\t\tcorp.update(corp).then((x) => {});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574219831237
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\\\\provider.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\provider.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\models\\provider.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\provider.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
        "sourceFileName": "provider.model.js"
      }
    },
    "ast": null,
    "code": "mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst Documents = new Schema({\n  type: {\n    type: String\n  },\n  name: String,\n  archive: String,\n  daysNotification: Number,\n  date: Date,\n  expire: Boolean\n});\nconst Material = new Schema({\n  type: {\n    type: String\n  },\n  name: String,\n  weight: Number,\n  quantity: Number,\n  active: Boolean,\n  unity: String\n});\nconst QrCode = new Schema({\n  code: String,\n  date: Date,\n  material: Material\n});\nconst ResidueArrived = new Schema({\n  date: Date,\n  name: String,\n  cost: Number,\n  typeEntrie: String,\n  quantity: Number,\n  weight: Number,\n  amount: Number,\n  qrCode: QrCode,\n  observation: String,\n  confirmedByCorporation: String,\n  confirmedByCollector: String\n});\nconst ResiduesRegisterSchema = new Schema({\n  departments: [{\n    isChanged: Boolean,\n    name: String,\n    description: String,\n    active: Boolean,\n    qrCode: [QrCode]\n  }]\n});\nconst Entries = new Schema({\n  purchase: [{\n    date: Date,\n    name: String,\n    cost: Number,\n    typeEntrie: String,\n    quantity: Number,\n    weight: Number,\n    amount: Number,\n    qrCode: QrCode\n  }],\n  sale: [{\n    date: Date,\n    name: String,\n    cost: Number,\n    typeEntrie: String,\n    quantity: Number,\n    weight: Number,\n    amount: Number,\n    qrCode: QrCode,\n    _idColector: String\n  }]\n});\nvar ProviderSchema = new Schema({\n  picture: String,\n  company: String,\n  cnpj: String,\n  tradingName: String,\n  active: Boolean,\n  class: String,\n  phone: Number,\n  email: String,\n  classification: String,\n  cellPhone: Number,\n  creationDate: Date,\n  activationDate: Date,\n  verificationDate: Date,\n  location: {\n    country: String,\n    state: String,\n    latitude: Number,\n    longitude: Number,\n    cep: String,\n    publicPlace: String,\n    neighborhood: String,\n    number: Number,\n    county: String,\n    complement: String\n  },\n  units: [{\n    unitsId: String\n  }],\n  users: [{\n    name: String,\n    email: String,\n    profile: {\n      name: String,\n      access: [String]\n    },\n    password: String,\n    active: Boolean\n  }],\n  myProviders: [{\n    providerId: String\n  }],\n  departments: [{\n    name: String,\n    description: String,\n    active: Boolean,\n    isChanged: Boolean\n  }],\n  residuesRegister: ResiduesRegisterSchema,\n  scheduling: [{\n    hour: Date,\n    date: Date,\n    active: Boolean,\n    collector: {\n      _id: String,\n      company: String,\n      cnpj: String,\n      tradingName: String,\n      active: Boolean,\n      phone: Number,\n      cellPhone: Number,\n      class: String,\n      email: String,\n      classification: String\n    },\n    qrCode: [QrCode]\n  }],\n  entries: Entries,\n  residuesArrived: [ResidueArrived],\n  documents: [Documents]\n});\nmodule.exports = mongoose.model('provider', ProviderSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "provider.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "Documents",
        "type",
        "String",
        "name",
        "archive",
        "daysNotification",
        "Number",
        "date",
        "Date",
        "expire",
        "Boolean",
        "Material",
        "weight",
        "quantity",
        "active",
        "unity",
        "QrCode",
        "code",
        "material",
        "ResidueArrived",
        "cost",
        "typeEntrie",
        "amount",
        "qrCode",
        "observation",
        "confirmedByCorporation",
        "confirmedByCollector",
        "ResiduesRegisterSchema",
        "departments",
        "isChanged",
        "description",
        "Entries",
        "purchase",
        "sale",
        "_idColector",
        "ProviderSchema",
        "picture",
        "company",
        "cnpj",
        "tradingName",
        "class",
        "phone",
        "email",
        "classification",
        "cellPhone",
        "creationDate",
        "activationDate",
        "verificationDate",
        "location",
        "country",
        "state",
        "latitude",
        "longitude",
        "cep",
        "publicPlace",
        "neighborhood",
        "number",
        "county",
        "complement",
        "units",
        "unitsId",
        "users",
        "profile",
        "access",
        "password",
        "myProviders",
        "providerId",
        "residuesRegister",
        "scheduling",
        "hour",
        "collector",
        "_id",
        "entries",
        "residuesArrived",
        "documents",
        "module",
        "exports",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "sourcesContent": [
        "mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst Documents = new Schema({\r\n\ttype: { type: String },\r\n\tname: String,\r\n\tarchive: String,\r\n\tdaysNotification: Number,\r\n\tdate: Date,\r\n\texpire: Boolean\r\n});\r\n\r\nconst Material = new Schema({\r\n\ttype: { type: String },\r\n\tname: String,\r\n\tweight: Number,\r\n\tquantity: Number,\r\n\tactive: Boolean,\r\n\tunity: String\r\n});\r\n\r\nconst QrCode = new Schema({\r\n\tcode: String,\r\n\tdate: Date,\r\n\tmaterial: Material,\r\n});\r\n\r\nconst ResidueArrived = new Schema({\r\n\tdate: Date,\r\n\tname: String,\r\n\tcost: Number,\r\n\ttypeEntrie: String,\r\n\tquantity: Number,\r\n\tweight: Number,\r\n\tamount: Number,\r\n\tqrCode: QrCode,\r\n\tobservation: String,\r\n\tconfirmedByCorporation: String,\r\n\tconfirmedByCollector: String\r\n});\r\n\r\nconst ResiduesRegisterSchema = new Schema({\r\n\tdepartments: [\r\n\t\t{\r\n\t\t\tisChanged: Boolean,\r\n\t\t\tname: String,\r\n\t\t\tdescription: String,\r\n\t\t\tactive: Boolean,\r\n\t\t\tqrCode: [ QrCode ]\r\n\t\t}\r\n\t]\r\n});\r\n\r\nconst Entries = new Schema({\r\n\tpurchase: [\r\n\t\t{\r\n\t\t\tdate: Date,\r\n\t\t\tname: String,\r\n\t\t\tcost: Number,\r\n\t\t\ttypeEntrie: String,\r\n\t\t\tquantity: Number,\r\n\t\t\tweight: Number,\r\n\t\t\tamount: Number,\r\n\t\t\tqrCode: QrCode\r\n\t\t}\r\n\t],\r\n\tsale: [\r\n\t\t{\r\n\t\t\tdate: Date,\r\n\t\t\tname: String,\r\n\t\t\tcost: Number,\r\n\t\t\ttypeEntrie: String,\r\n\t\t\tquantity: Number,\r\n\t\t\tweight: Number,\r\n\t\t\tamount: Number,\r\n\t\t\tqrCode: QrCode,\r\n\t\t\t_idColector:String,\r\n\t\t}\r\n\t]\r\n});\r\n\r\nvar ProviderSchema = new Schema({\r\n\tpicture: String,\r\n\tcompany: String,\r\n\tcnpj: String,\r\n\ttradingName: String,\r\n\tactive: Boolean,\r\n\tclass: String,\r\n\tphone: Number,\r\n\temail: String,\r\n\tclassification: String,\r\n\tcellPhone: Number,\r\n\tcreationDate: Date,\r\n\tactivationDate: Date,\r\n\tverificationDate: Date,\r\n\tlocation: {\r\n\t\tcountry: String,\r\n\t\tstate: String,\r\n\t\tlatitude: Number,\r\n\t\tlongitude: Number,\r\n\t\tcep: String,\r\n\t\tpublicPlace: String,\r\n\t\tneighborhood: String,\r\n\t\tnumber: Number,\r\n\t\tcounty: String,\r\n\t\tcomplement: String\r\n\t},\r\n\tunits: [\r\n\t\t{\r\n\t\t\tunitsId: String\r\n\t\t}\r\n\t],\r\n\tusers: [\r\n\t\t{\r\n\t\t\tname: String,\r\n\t\t\temail: String,\r\n\t\t\tprofile: {\r\n\t\t\t\tname: String,\r\n\t\t\t\taccess: [ String ]\r\n\t\t\t},\r\n\t\t\tpassword: String,\r\n\t\t\tactive: Boolean\r\n\t\t}\r\n\t],\r\n\tmyProviders: [\r\n\t\t{\r\n\t\t\tproviderId: String,\r\n\t\t}\r\n\t],\r\n\tdepartments: [\r\n\t\t{\r\n\t\t\tname: String,\r\n\t\t\tdescription: String,\r\n\t\t\tactive: Boolean,\r\n\t\t\tisChanged: Boolean\r\n\t\t}\r\n\t],\r\n\r\n\tresiduesRegister: ResiduesRegisterSchema,\r\n\tscheduling: [\r\n\t\t{\r\n\t\t\thour: Date,\r\n\t\t\tdate: Date,\r\n\t\t\tactive: Boolean,\r\n\t\t\tcollector: {\r\n\t\t\t\t_id: String,\r\n\t\t\t\tcompany: String,\r\n\t\t\t\tcnpj: String,\r\n\t\t\t\ttradingName: String,\r\n\t\t\t\tactive: Boolean,\r\n\t\t\t\tphone: Number,\r\n\t\t\t\tcellPhone: Number,\r\n\t\t\t\tclass: String,\r\n\t\t\t\temail: String,\r\n\t\t\t\tclassification: String\r\n\t\t\t},\r\n\t\t\tqrCode: [ QrCode ]\r\n\t\t}\r\n\t],\r\n\tentries: Entries,\r\n\tresiduesArrived: [ResidueArrived],\r\n\tdocuments: [ Documents ]\r\n});\r\n\r\nmodule.exports = mongoose.model('provider', ProviderSchema);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574221035081
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\indexPicture.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexPicture.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexPicture.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexPicture.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "indexPicture.js"
      }
    },
    "ast": null,
    "code": "const picture = require('./picture/Mutation/picture');\n\nmodule.exports = { ...picture\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4UGljdHVyZS5qcyJdLCJuYW1lcyI6WyJwaWN0dXJlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQXZCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsRUFDaEIsR0FBR0g7QUFEYSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaVxccmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGljdHVyZSA9IHJlcXVpcmUoJy4vcGljdHVyZS9NdXRhdGlvbi9waWN0dXJlJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuXHQuLi5waWN0dXJlXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexPicture.js"
      ],
      "names": [
        "picture",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,4BAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EAChB,GAAGH;AADa,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const picture = require('./picture/Mutation/picture');\r\n\r\nmodule.exports = {\r\n\t...picture\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1567554529117
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\picture\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\picture\\\\Mutation\\\\picture.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\picture\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\picture\\Mutation\\picture.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\picture\\Mutation\\picture.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\picture\\Mutation\\picture.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\picture\\Mutation",
        "sourceFileName": "picture.js"
      }
    },
    "ast": null,
    "code": "var fs = require('fs');\n\nvar mkdirp = require('mkdirp');\n\nvar path = '/reconsidere-corp/images';\nmodule.exports = picture = {\n  Query: {\n    async allPictures() {}\n\n  },\n  Mutation: {\n    async uploadImage(root, {\n      _id,\n      input\n    }) {\n      mkdirp(path, function (err) {\n        if (err) console.error(err);else {}\n      });\n      var base64Data = input.file.split(';base64,').pop();\n      fs.writeFile(`${path}/${input.name}`, base64Data, {\n        encoding: 'base64'\n      }, function (err) {\n        if (err) {\n          console.log(err);\n          throw new Error('ERE009');\n        } else {}\n      });\n      return input;\n    }\n\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpY3R1cmUuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwibWtkaXJwIiwicGF0aCIsIm1vZHVsZSIsImV4cG9ydHMiLCJwaWN0dXJlIiwiUXVlcnkiLCJhbGxQaWN0dXJlcyIsIk11dGF0aW9uIiwidXBsb2FkSW1hZ2UiLCJyb290IiwiX2lkIiwiaW5wdXQiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJiYXNlNjREYXRhIiwiZmlsZSIsInNwbGl0IiwicG9wIiwid3JpdGVGaWxlIiwibmFtZSIsImVuY29kaW5nIiwibG9nIiwiRXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBaEI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxJQUFJRSxJQUFJLEdBQUcsMEJBQVg7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxPQUFPLEdBQUc7QUFDMUJDLEVBQUFBLEtBQUssRUFBRTtBQUNOLFVBQU1DLFdBQU4sR0FBb0IsQ0FBRTs7QUFEaEIsR0FEbUI7QUFJMUJDLEVBQUFBLFFBQVEsRUFBRTtBQUNULFVBQU1DLFdBQU4sQ0FBa0JDLElBQWxCLEVBQXdCO0FBQUVDLE1BQUFBLEdBQUY7QUFBT0MsTUFBQUE7QUFBUCxLQUF4QixFQUF3QztBQUN2Q1gsTUFBQUEsTUFBTSxDQUFDQyxJQUFELEVBQU8sVUFBU1csR0FBVCxFQUFjO0FBQzFCLFlBQUlBLEdBQUosRUFBU0MsT0FBTyxDQUFDQyxLQUFSLENBQWNGLEdBQWQsRUFBVCxLQUNLLENBQ0o7QUFDRCxPQUpLLENBQU47QUFNQSxVQUFJRyxVQUFVLEdBQUdKLEtBQUssQ0FBQ0ssSUFBTixDQUFXQyxLQUFYLENBQWlCLFVBQWpCLEVBQTZCQyxHQUE3QixFQUFqQjtBQUNBcEIsTUFBQUEsRUFBRSxDQUFDcUIsU0FBSCxDQUFjLEdBQUVsQixJQUFLLElBQUdVLEtBQUssQ0FBQ1MsSUFBSyxFQUFuQyxFQUFzQ0wsVUFBdEMsRUFBa0Q7QUFBRU0sUUFBQUEsUUFBUSxFQUFFO0FBQVosT0FBbEQsRUFBMEUsVUFBU1QsR0FBVCxFQUFjO0FBQ3ZGLFlBQUlBLEdBQUosRUFBUztBQUNSQyxVQUFBQSxPQUFPLENBQUNTLEdBQVIsQ0FBWVYsR0FBWjtBQUNBLGdCQUFNLElBQUlXLEtBQUosQ0FBVSxRQUFWLENBQU47QUFDQSxTQUhELE1BR08sQ0FDTjtBQUNELE9BTkQ7QUFPQSxhQUFPWixLQUFQO0FBQ0E7O0FBakJRO0FBSmdCLENBQTNCIiwic291cmNlUm9vdCI6IkM6XFxyZWNvbnNpZGVyZVxccmVjb25zaWRlcmUtY29ycG9yYXRpb24tYXBpXFxyZXNvbHZlcnNcXHBpY3R1cmVcXE11dGF0aW9uIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcclxudmFyIG1rZGlycCA9IHJlcXVpcmUoJ21rZGlycCcpO1xyXG52YXIgcGF0aCA9ICcvcmVjb25zaWRlcmUtY29ycC9pbWFnZXMnO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHBpY3R1cmUgPSB7XHJcblx0UXVlcnk6IHtcclxuXHRcdGFzeW5jIGFsbFBpY3R1cmVzKCkge31cclxuXHR9LFxyXG5cdE11dGF0aW9uOiB7XHJcblx0XHRhc3luYyB1cGxvYWRJbWFnZShyb290LCB7IF9pZCwgaW5wdXQgfSkge1xyXG5cdFx0XHRta2RpcnAocGF0aCwgZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0aWYgKGVycikgY29uc29sZS5lcnJvcihlcnIpO1xyXG5cdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHR2YXIgYmFzZTY0RGF0YSA9IGlucHV0LmZpbGUuc3BsaXQoJztiYXNlNjQsJykucG9wKCk7XHJcblx0XHRcdGZzLndyaXRlRmlsZShgJHtwYXRofS8ke2lucHV0Lm5hbWV9YCwgYmFzZTY0RGF0YSwgeyBlbmNvZGluZzogJ2Jhc2U2NCcgfSwgZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0aWYgKGVycikge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignRVJFMDA5Jyk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRyZXR1cm4gaW5wdXQ7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "picture.js"
      ],
      "names": [
        "fs",
        "require",
        "mkdirp",
        "path",
        "module",
        "exports",
        "picture",
        "Query",
        "allPictures",
        "Mutation",
        "uploadImage",
        "root",
        "_id",
        "input",
        "err",
        "console",
        "error",
        "base64Data",
        "file",
        "split",
        "pop",
        "writeFile",
        "name",
        "encoding",
        "log",
        "Error"
      ],
      "mappings": "AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,IAAI,GAAG,0BAAX;AACAC,MAAM,CAACC,OAAP,GAAiBC,OAAO,GAAG;AAC1BC,EAAAA,KAAK,EAAE;AACN,UAAMC,WAAN,GAAoB,CAAE;;AADhB,GADmB;AAI1BC,EAAAA,QAAQ,EAAE;AACT,UAAMC,WAAN,CAAkBC,IAAlB,EAAwB;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAxB,EAAwC;AACvCX,MAAAA,MAAM,CAACC,IAAD,EAAO,UAASW,GAAT,EAAc;AAC1B,YAAIA,GAAJ,EAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,EAAT,KACK,CACJ;AACD,OAJK,CAAN;AAMA,UAAIG,UAAU,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAAX,CAAiB,UAAjB,EAA6BC,GAA7B,EAAjB;AACApB,MAAAA,EAAE,CAACqB,SAAH,CAAc,GAAElB,IAAK,IAAGU,KAAK,CAACS,IAAK,EAAnC,EAAsCL,UAAtC,EAAkD;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAAlD,EAA0E,UAAST,GAAT,EAAc;AACvF,YAAIA,GAAJ,EAAS;AACRC,UAAAA,OAAO,CAACS,GAAR,CAAYV,GAAZ;AACA,gBAAM,IAAIW,KAAJ,CAAU,QAAV,CAAN;AACA,SAHD,MAGO,CACN;AACD,OAND;AAOA,aAAOZ,KAAP;AACA;;AAjBQ;AAJgB,CAA3B",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\picture\\Mutation",
      "sourcesContent": [
        "var fs = require('fs');\r\nvar mkdirp = require('mkdirp');\r\nvar path = '/reconsidere-corp/images';\r\nmodule.exports = picture = {\r\n\tQuery: {\r\n\t\tasync allPictures() {}\r\n\t},\r\n\tMutation: {\r\n\t\tasync uploadImage(root, { _id, input }) {\r\n\t\t\tmkdirp(path, function(err) {\r\n\t\t\t\tif (err) console.error(err);\r\n\t\t\t\telse {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar base64Data = input.file.split(';base64,').pop();\r\n\t\t\tfs.writeFile(`${path}/${input.name}`, base64Data, { encoding: 'base64' }, function(err) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tthrow new Error('ERE009');\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn input;\r\n\t\t}\r\n\t}\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1567629973921
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\indexArchive.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexArchive.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexArchive.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\indexArchive.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "indexArchive.js"
      }
    },
    "ast": null,
    "code": "const archive = require('./archive/Mutation/archive');\n\nmodule.exports = { ...archive\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4QXJjaGl2ZS5qcyJdLCJuYW1lcyI6WyJhcmNoaXZlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQXZCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsRUFDaEIsR0FBR0g7QUFEYSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaVxccmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXJjaGl2ZSA9IHJlcXVpcmUoJy4vYXJjaGl2ZS9NdXRhdGlvbi9hcmNoaXZlJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuXHQuLi5hcmNoaXZlXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexArchive.js"
      ],
      "names": [
        "archive",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,4BAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EAChB,GAAGH;AADa,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const archive = require('./archive/Mutation/archive');\r\n\r\nmodule.exports = {\r\n\t...archive\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1571933829296
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\archive\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\archive\\\\Mutation\\\\archive.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\archive\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\archive\\Mutation\\archive.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\archive\\Mutation\\archive.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\archive\\Mutation\\archive.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\archive\\Mutation",
        "sourceFileName": "archive.js"
      }
    },
    "ast": null,
    "code": "var fs = require('fs');\n\nvar mkdirp = require('mkdirp');\n\nvar path = '/reconsidere-corp/archives';\nmodule.exports = picture = {\n  Query: {\n    async allArchives() {}\n\n  },\n  Mutation: {\n    async uploadArchive(root, {\n      _id,\n      input\n    }) {\n      mkdirp(path, function (err) {\n        if (err) console.error(err);else {}\n      });\n      var base64Data = input.file.split(';base64,').pop();\n      fs.writeFile(`${path}/${input.name}`, base64Data, {\n        encoding: 'base64'\n      }, function (err) {\n        if (err) {\n          console.log(err);\n          throw new Error('ERE009');\n        } else {}\n      });\n      return input;\n    }\n\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyY2hpdmUuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwibWtkaXJwIiwicGF0aCIsIm1vZHVsZSIsImV4cG9ydHMiLCJwaWN0dXJlIiwiUXVlcnkiLCJhbGxBcmNoaXZlcyIsIk11dGF0aW9uIiwidXBsb2FkQXJjaGl2ZSIsInJvb3QiLCJfaWQiLCJpbnB1dCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImJhc2U2NERhdGEiLCJmaWxlIiwic3BsaXQiLCJwb3AiLCJ3cml0ZUZpbGUiLCJuYW1lIiwiZW5jb2RpbmciLCJsb2ciLCJFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFoQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUNBLElBQUlFLElBQUksR0FBRyw0QkFBWDtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLE9BQU8sR0FBRztBQUMxQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ04sVUFBTUMsV0FBTixHQUFvQixDQUFFOztBQURoQixHQURtQjtBQUkxQkMsRUFBQUEsUUFBUSxFQUFFO0FBQ1QsVUFBTUMsYUFBTixDQUFvQkMsSUFBcEIsRUFBMEI7QUFBRUMsTUFBQUEsR0FBRjtBQUFPQyxNQUFBQTtBQUFQLEtBQTFCLEVBQTBDO0FBQ3pDWCxNQUFBQSxNQUFNLENBQUNDLElBQUQsRUFBTyxVQUFTVyxHQUFULEVBQWM7QUFDMUIsWUFBSUEsR0FBSixFQUFTQyxPQUFPLENBQUNDLEtBQVIsQ0FBY0YsR0FBZCxFQUFULEtBQ0ssQ0FDSjtBQUNELE9BSkssQ0FBTjtBQU1BLFVBQUlHLFVBQVUsR0FBR0osS0FBSyxDQUFDSyxJQUFOLENBQVdDLEtBQVgsQ0FBaUIsVUFBakIsRUFBNkJDLEdBQTdCLEVBQWpCO0FBQ0FwQixNQUFBQSxFQUFFLENBQUNxQixTQUFILENBQWMsR0FBRWxCLElBQUssSUFBR1UsS0FBSyxDQUFDUyxJQUFLLEVBQW5DLEVBQXNDTCxVQUF0QyxFQUFrRDtBQUFFTSxRQUFBQSxRQUFRLEVBQUU7QUFBWixPQUFsRCxFQUEwRSxVQUFTVCxHQUFULEVBQWM7QUFDdkYsWUFBSUEsR0FBSixFQUFTO0FBQ1JDLFVBQUFBLE9BQU8sQ0FBQ1MsR0FBUixDQUFZVixHQUFaO0FBQ0EsZ0JBQU0sSUFBSVcsS0FBSixDQUFVLFFBQVYsQ0FBTjtBQUNBLFNBSEQsTUFHTyxDQUNOO0FBQ0QsT0FORDtBQU9BLGFBQU9aLEtBQVA7QUFDQTs7QUFqQlE7QUFKZ0IsQ0FBM0IiLCJzb3VyY2VSb290IjoiQzpcXHJlY29uc2lkZXJlXFxyZWNvbnNpZGVyZS1jb3Jwb3JhdGlvbi1hcGlcXHJlc29sdmVyc1xcYXJjaGl2ZVxcTXV0YXRpb24iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnMgPSByZXF1aXJlKCdmcycpO1xyXG52YXIgbWtkaXJwID0gcmVxdWlyZSgnbWtkaXJwJyk7XHJcbnZhciBwYXRoID0gJy9yZWNvbnNpZGVyZS1jb3JwL2FyY2hpdmVzJztcclxubW9kdWxlLmV4cG9ydHMgPSBwaWN0dXJlID0ge1xyXG5cdFF1ZXJ5OiB7XHJcblx0XHRhc3luYyBhbGxBcmNoaXZlcygpIHt9XHJcblx0fSxcclxuXHRNdXRhdGlvbjoge1xyXG5cdFx0YXN5bmMgdXBsb2FkQXJjaGl2ZShyb290LCB7IF9pZCwgaW5wdXQgfSkge1xyXG5cdFx0XHRta2RpcnAocGF0aCwgZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0aWYgKGVycikgY29uc29sZS5lcnJvcihlcnIpO1xyXG5cdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHR2YXIgYmFzZTY0RGF0YSA9IGlucHV0LmZpbGUuc3BsaXQoJztiYXNlNjQsJykucG9wKCk7XHJcblx0XHRcdGZzLndyaXRlRmlsZShgJHtwYXRofS8ke2lucHV0Lm5hbWV9YCwgYmFzZTY0RGF0YSwgeyBlbmNvZGluZzogJ2Jhc2U2NCcgfSwgZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0aWYgKGVycikge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignRVJFMDA5Jyk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRyZXR1cm4gaW5wdXQ7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "archive.js"
      ],
      "names": [
        "fs",
        "require",
        "mkdirp",
        "path",
        "module",
        "exports",
        "picture",
        "Query",
        "allArchives",
        "Mutation",
        "uploadArchive",
        "root",
        "_id",
        "input",
        "err",
        "console",
        "error",
        "base64Data",
        "file",
        "split",
        "pop",
        "writeFile",
        "name",
        "encoding",
        "log",
        "Error"
      ],
      "mappings": "AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,IAAI,GAAG,4BAAX;AACAC,MAAM,CAACC,OAAP,GAAiBC,OAAO,GAAG;AAC1BC,EAAAA,KAAK,EAAE;AACN,UAAMC,WAAN,GAAoB,CAAE;;AADhB,GADmB;AAI1BC,EAAAA,QAAQ,EAAE;AACT,UAAMC,aAAN,CAAoBC,IAApB,EAA0B;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAA1B,EAA0C;AACzCX,MAAAA,MAAM,CAACC,IAAD,EAAO,UAASW,GAAT,EAAc;AAC1B,YAAIA,GAAJ,EAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,EAAT,KACK,CACJ;AACD,OAJK,CAAN;AAMA,UAAIG,UAAU,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAAX,CAAiB,UAAjB,EAA6BC,GAA7B,EAAjB;AACApB,MAAAA,EAAE,CAACqB,SAAH,CAAc,GAAElB,IAAK,IAAGU,KAAK,CAACS,IAAK,EAAnC,EAAsCL,UAAtC,EAAkD;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAAlD,EAA0E,UAAST,GAAT,EAAc;AACvF,YAAIA,GAAJ,EAAS;AACRC,UAAAA,OAAO,CAACS,GAAR,CAAYV,GAAZ;AACA,gBAAM,IAAIW,KAAJ,CAAU,QAAV,CAAN;AACA,SAHD,MAGO,CACN;AACD,OAND;AAOA,aAAOZ,KAAP;AACA;;AAjBQ;AAJgB,CAA3B",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\archive\\Mutation",
      "sourcesContent": [
        "var fs = require('fs');\r\nvar mkdirp = require('mkdirp');\r\nvar path = '/reconsidere-corp/archives';\r\nmodule.exports = picture = {\r\n\tQuery: {\r\n\t\tasync allArchives() {}\r\n\t},\r\n\tMutation: {\r\n\t\tasync uploadArchive(root, { _id, input }) {\r\n\t\t\tmkdirp(path, function(err) {\r\n\t\t\t\tif (err) console.error(err);\r\n\t\t\t\telse {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar base64Data = input.file.split(';base64,').pop();\r\n\t\t\tfs.writeFile(`${path}/${input.name}`, base64Data, { encoding: 'base64' }, function(err) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\tthrow new Error('ERE009');\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn input;\r\n\t\t}\r\n\t}\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1571966056250
  }
}