{
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "mongoose = require('mongoose');\ngraphlHTTP = require('express-graphql');\n\nconst express = require('express');\n\nconst {\n  importSchema\n} = require('graphql-import');\n\nconst bodyParser = require('body-parser');\n\nconst cors = require('cors');\n\nconst resolvers = require('./resolvers');\n\nconst {\n  makeExecutableSchema\n} = require('graphql-tools');\n\nconst schemaPath = './schemas/index.graphql';\nconst schema = makeExecutableSchema({\n  typeDefs: importSchema(schemaPath),\n  resolvers\n});\nconst app = express();\nconst PORT = 32546;\nmongoose.Promise = global.Promise;\nmongoose.connect('mongodb://localhost:27017/eowyn-reconsidere-corporation');\napp.get('/', (req, res) => {\n  res.json({\n    msg: 'Welcome to GraphQL'\n  });\n});\napp.use('/corporation', bodyParser.text({\n  type: 'application/graphql'\n}), bodyParser.json(), cors(), graphlHTTP({\n  schema: schema,\n  graphiql: true,\n  formatError: error => ({\n    message: error.message,\n    state: error.originalError && error.originalError.state,\n    locations: error.locations,\n    path: error.path\n  })\n}));\napp.listen(PORT, () => {\n  console.log(`Server is listening on PORT ${PORT}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImdyYXBobEhUVFAiLCJleHByZXNzIiwiaW1wb3J0U2NoZW1hIiwiYm9keVBhcnNlciIsImNvcnMiLCJyZXNvbHZlcnMiLCJtYWtlRXhlY3V0YWJsZVNjaGVtYSIsInNjaGVtYVBhdGgiLCJzY2hlbWEiLCJ0eXBlRGVmcyIsImFwcCIsIlBPUlQiLCJQcm9taXNlIiwiZ2xvYmFsIiwiY29ubmVjdCIsImdldCIsInJlcSIsInJlcyIsImpzb24iLCJtc2ciLCJ1c2UiLCJ0ZXh0IiwidHlwZSIsImdyYXBoaXFsIiwiZm9ybWF0RXJyb3IiLCJlcnJvciIsIm1lc3NhZ2UiLCJzdGF0ZSIsIm9yaWdpbmFsRXJyb3IiLCJsb2NhdGlvbnMiLCJwYXRoIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBbEI7QUFDQUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsaUJBQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVHLEVBQUFBO0FBQUYsSUFBbUJILE9BQU8sQ0FBQyxnQkFBRCxDQUFoQzs7QUFDQSxNQUFNSSxVQUFVLEdBQUdKLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLE1BQU1LLElBQUksR0FBR0wsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUEsTUFBTU0sU0FBUyxHQUFHTixPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDQSxNQUFNO0FBQUVPLEVBQUFBO0FBQUYsSUFBMkJQLE9BQU8sQ0FBQyxlQUFELENBQXhDOztBQUNBLE1BQU1RLFVBQVUsR0FBRyx5QkFBbkI7QUFFQSxNQUFNQyxNQUFNLEdBQUdGLG9CQUFvQixDQUFDO0FBQ2hDRyxFQUFBQSxRQUFRLEVBQUVQLFlBQVksQ0FBQ0ssVUFBRCxDQURVO0FBRWhDRixFQUFBQTtBQUZnQyxDQUFELENBQW5DO0FBTUEsTUFBTUssR0FBRyxHQUFHVCxPQUFPLEVBQW5CO0FBQ0EsTUFBTVUsSUFBSSxHQUFHLEtBQWI7QUFDQWIsUUFBUSxDQUFDYyxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCO0FBQ0FkLFFBQVEsQ0FBQ2dCLE9BQVQsQ0FBaUIseURBQWpCO0FBQ0FKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLEdBQVIsRUFBYSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUN2QkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFDTEMsSUFBQUEsR0FBRyxFQUFFO0FBREEsR0FBVDtBQUdILENBSkQ7QUFLQVQsR0FBRyxDQUFDVSxHQUFKLENBQVEsY0FBUixFQUF3QmpCLFVBQVUsQ0FBQ2tCLElBQVgsQ0FBZ0I7QUFBRUMsRUFBQUEsSUFBSSxFQUFFO0FBQVIsQ0FBaEIsQ0FBeEIsRUFBMEVuQixVQUFVLENBQUNlLElBQVgsRUFBMUUsRUFBNkZkLElBQUksRUFBakcsRUFBcUdKLFVBQVUsQ0FBQztBQUM1R1EsRUFBQUEsTUFBTSxFQUFFQSxNQURvRztBQUU1R2UsRUFBQUEsUUFBUSxFQUFFLElBRmtHO0FBRzVHQyxFQUFBQSxXQUFXLEVBQUVDLEtBQUssS0FBSztBQUNuQkMsSUFBQUEsT0FBTyxFQUFFRCxLQUFLLENBQUNDLE9BREk7QUFFbkJDLElBQUFBLEtBQUssRUFBRUYsS0FBSyxDQUFDRyxhQUFOLElBQXVCSCxLQUFLLENBQUNHLGFBQU4sQ0FBb0JELEtBRi9CO0FBR25CRSxJQUFBQSxTQUFTLEVBQUVKLEtBQUssQ0FBQ0ksU0FIRTtBQUluQkMsSUFBQUEsSUFBSSxFQUFFTCxLQUFLLENBQUNLO0FBSk8sR0FBTDtBQUgwRixDQUFELENBQS9HO0FBV0FwQixHQUFHLENBQUNxQixNQUFKLENBQVdwQixJQUFYLEVBQWlCLE1BQU07QUFDbkJxQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSwrQkFBOEJ0QixJQUFLLEVBQWhEO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaSIsInNvdXJjZXNDb250ZW50IjpbIm1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuZ3JhcGhsSFRUUCA9IHJlcXVpcmUoJ2V4cHJlc3MtZ3JhcGhxbCcpO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCB7IGltcG9ydFNjaGVtYSB9ID0gcmVxdWlyZSgnZ3JhcGhxbC1pbXBvcnQnKVxyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKVxyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5cclxuY29uc3QgcmVzb2x2ZXJzID0gcmVxdWlyZSgnLi9yZXNvbHZlcnMnKTtcclxuY29uc3QgeyBtYWtlRXhlY3V0YWJsZVNjaGVtYSB9ID0gcmVxdWlyZSgnZ3JhcGhxbC10b29scycpO1xyXG5jb25zdCBzY2hlbWFQYXRoID0gJy4vc2NoZW1hcy9pbmRleC5ncmFwaHFsJztcclxuXHJcbmNvbnN0IHNjaGVtYSA9IG1ha2VFeGVjdXRhYmxlU2NoZW1hKHtcclxuICAgIHR5cGVEZWZzOiBpbXBvcnRTY2hlbWEoc2NoZW1hUGF0aCksXHJcbiAgICByZXNvbHZlcnNcclxufSk7XHJcblxyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBQT1JUID0gMzI1NDY7XHJcbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcclxubW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy9lb3d5bi1yZWNvbnNpZGVyZS1jb3Jwb3JhdGlvbicpO1xyXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuanNvbih7XHJcbiAgICAgICAgbXNnOiAnV2VsY29tZSB0byBHcmFwaFFMJ1xyXG4gICAgfSlcclxufSk7XHJcbmFwcC51c2UoJy9jb3Jwb3JhdGlvbicsIGJvZHlQYXJzZXIudGV4dCh7IHR5cGU6ICdhcHBsaWNhdGlvbi9ncmFwaHFsJyB9KSwgYm9keVBhcnNlci5qc29uKCksIGNvcnMoKSwgZ3JhcGhsSFRUUCh7XHJcbiAgICBzY2hlbWE6IHNjaGVtYSxcclxuICAgIGdyYXBoaXFsOiB0cnVlLFxyXG4gICAgZm9ybWF0RXJyb3I6IGVycm9yID0+ICh7XHJcbiAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcclxuICAgICAgICBzdGF0ZTogZXJyb3Iub3JpZ2luYWxFcnJvciAmJiBlcnJvci5vcmlnaW5hbEVycm9yLnN0YXRlLFxyXG4gICAgICAgIGxvY2F0aW9uczogZXJyb3IubG9jYXRpb25zLFxyXG4gICAgICAgIHBhdGg6IGVycm9yLnBhdGgsXHJcbiAgICB9KSxcclxufSkpO1xyXG5cclxuYXBwLmxpc3RlbihQT1JULCAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIGxpc3RlbmluZyBvbiBQT1JUICR7UE9SVH1gKTtcclxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "require",
        "graphlHTTP",
        "express",
        "importSchema",
        "bodyParser",
        "cors",
        "resolvers",
        "makeExecutableSchema",
        "schemaPath",
        "schema",
        "typeDefs",
        "app",
        "PORT",
        "Promise",
        "global",
        "connect",
        "get",
        "req",
        "res",
        "json",
        "msg",
        "use",
        "text",
        "type",
        "graphiql",
        "formatError",
        "error",
        "message",
        "state",
        "originalError",
        "locations",
        "path",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAAA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAlB;AACAC,UAAU,GAAGD,OAAO,CAAC,iBAAD,CAApB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAmBH,OAAO,CAAC,gBAAD,CAAhC;;AACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMM,SAAS,GAAGN,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAM;AAAEO,EAAAA;AAAF,IAA2BP,OAAO,CAAC,eAAD,CAAxC;;AACA,MAAMQ,UAAU,GAAG,yBAAnB;AAEA,MAAMC,MAAM,GAAGF,oBAAoB,CAAC;AAChCG,EAAAA,QAAQ,EAAEP,YAAY,CAACK,UAAD,CADU;AAEhCF,EAAAA;AAFgC,CAAD,CAAnC;AAMA,MAAMK,GAAG,GAAGT,OAAO,EAAnB;AACA,MAAMU,IAAI,GAAG,KAAb;AACAb,QAAQ,CAACc,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AACAd,QAAQ,CAACgB,OAAT,CAAiB,yDAAjB;AACAJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvBA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AACLC,IAAAA,GAAG,EAAE;AADA,GAAT;AAGH,CAJD;AAKAT,GAAG,CAACU,GAAJ,CAAQ,cAAR,EAAwBjB,UAAU,CAACkB,IAAX,CAAgB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAhB,CAAxB,EAA0EnB,UAAU,CAACe,IAAX,EAA1E,EAA6Fd,IAAI,EAAjG,EAAqGJ,UAAU,CAAC;AAC5GQ,EAAAA,MAAM,EAAEA,MADoG;AAE5Ge,EAAAA,QAAQ,EAAE,IAFkG;AAG5GC,EAAAA,WAAW,EAAEC,KAAK,KAAK;AACnBC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADI;AAEnBC,IAAAA,KAAK,EAAEF,KAAK,CAACG,aAAN,IAAuBH,KAAK,CAACG,aAAN,CAAoBD,KAF/B;AAGnBE,IAAAA,SAAS,EAAEJ,KAAK,CAACI,SAHE;AAInBC,IAAAA,IAAI,EAAEL,KAAK,CAACK;AAJO,GAAL;AAH0F,CAAD,CAA/G;AAWApB,GAAG,CAACqB,MAAJ,CAAWpB,IAAX,EAAiB,MAAM;AACnBqB,EAAAA,OAAO,CAACC,GAAR,CAAa,+BAA8BtB,IAAK,EAAhD;AACH,CAFD",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourcesContent": [
        "mongoose = require('mongoose');\r\ngraphlHTTP = require('express-graphql');\r\nconst express = require('express');\r\nconst { importSchema } = require('graphql-import')\r\nconst bodyParser = require('body-parser')\r\nconst cors = require('cors');\r\n\r\nconst resolvers = require('./resolvers');\r\nconst { makeExecutableSchema } = require('graphql-tools');\r\nconst schemaPath = './schemas/index.graphql';\r\n\r\nconst schema = makeExecutableSchema({\r\n    typeDefs: importSchema(schemaPath),\r\n    resolvers\r\n});\r\n\r\n\r\nconst app = express();\r\nconst PORT = 32546;\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect('mongodb://localhost:27017/eowyn-reconsidere-corporation');\r\napp.get('/', (req, res) => {\r\n    res.json({\r\n        msg: 'Welcome to GraphQL'\r\n    })\r\n});\r\napp.use('/corporation', bodyParser.text({ type: 'application/graphql' }), bodyParser.json(), cors(), graphlHTTP({\r\n    schema: schema,\r\n    graphiql: true,\r\n    formatError: error => ({\r\n        message: error.message,\r\n        state: error.originalError && error.originalError.state,\r\n        locations: error.locations,\r\n        path: error.path,\r\n    }),\r\n}));\r\n\r\napp.listen(PORT, () => {\r\n    console.log(`Server is listening on PORT ${PORT}`);\r\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1560876774632
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\schemas\\\\schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\schemas\\schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\schemas\\schema.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\schemas\\schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\schemas",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "const {\n  makeExecutableSchema\n} = require('graphql-tools');\n\nresolvers = require('../resolvers/resolvers');\nconst typeDefs = `\nscalar Date\nscalar Number\n\ntype Location {\n    _id: ID!\n    country: String\n    state: String\n    latitude: Number\n    longitude: Number\n    cep: String\n    publicPlace: String\n    neighborhood: String\n    number: Number\n    county: String\n    complement: String\n}\n\ntype Unit {\n    _id: ID!\n        name: String\n        location:[Location]\n}\n\ntype Profile {\n        name: String\n        access: [String]\n}\n\ntype User {\n    _id: ID!\n    name: String,\n    email: String,\n    profile: Profile\n    password: String,\n    active: Boolean\n}\n\ntype Corporation {\n  _id: ID!\n  company: String\n  cnpj: String\n  tradingName: String\n  active: Boolean\n  class: String\n  phone: Number\n  email: String\n  classification: String\n  cellPhone: Number\n  creationDate: Date\n  activationDate: Date\n  verificationDate: Date\n  location:Location\n  units:[Unit]\n  users:[User]\n }\n\ntype Query {\n  #corporation\n    getCorporation(_id: ID!): Corporation\n    allCorporations: [Corporation]\n }\n\n#corporation inputs\ninput LocationInput{\n    country: String\n    state: String\n    latitude: Number\n    longitude: Number\n    cep: String\n    publicPlace: String\n    neighborhood: String\n    number: Number\n    county: String\n    complement: String\n}\n\ninput UnitInput{\n        name: String\n        location:[LocationInput]\n}\n\ninput ProfileInput{\n    name: String\n    access: [String]\n}\n\ninput UserInput {\n    name: String,\n    email: String,\n    profile: ProfileInput\n    password: String,\n    active: Boolean\n}\n    input CorporationInput {\n        company: String\n        cnpj: String\n        tradingName: String\n        active: Boolean\n        class: String\n        phone: Number\n        email: String\n        classification: String\n        cellPhone: Number\n        creationDate: Date\n        activationDate: Date\n        verificationDate: Date\n        location:LocationInput\n        units:[UnitInput]\n        users:[UserInput]\n    }\n\ntype Mutation {\n    #corporation\n        createCorporation(input: CorporationInput): Corporation\n        updateCorporation(_id: ID!, input: CorporationInput): Corporation   \n        deleteCorporation(_id: ID!) : Corporation\n}\n`;\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers\n});\nmodule.exports = schema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJtYWtlRXhlY3V0YWJsZVNjaGVtYSIsInJlcXVpcmUiLCJyZXNvbHZlcnMiLCJ0eXBlRGVmcyIsInNjaGVtYSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUEyQkMsT0FBTyxDQUFDLGVBQUQsQ0FBeEM7O0FBQ0FDLFNBQVMsR0FBR0QsT0FBTyxDQUFDLHdCQUFELENBQW5CO0FBQ0EsTUFBTUUsUUFBUSxHQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBQWxCO0FBdUhBLE1BQU1DLE1BQU0sR0FBR0osb0JBQW9CLENBQUM7QUFDaENHLEVBQUFBLFFBRGdDO0FBRWhDRCxFQUFBQTtBQUZnQyxDQUFELENBQW5DO0FBSUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXHJlY29uc2lkZXJlXFxyZWNvbnNpZGVyZS1jb3Jwb3JhdGlvbi1hcGlcXHNjaGVtYXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IG1ha2VFeGVjdXRhYmxlU2NoZW1hIH0gPSByZXF1aXJlKCdncmFwaHFsLXRvb2xzJyk7XHJcbnJlc29sdmVycyA9IHJlcXVpcmUoJy4uL3Jlc29sdmVycy9yZXNvbHZlcnMnKTtcclxuY29uc3QgdHlwZURlZnMgPSBgXHJcbnNjYWxhciBEYXRlXHJcbnNjYWxhciBOdW1iZXJcclxuXHJcbnR5cGUgTG9jYXRpb24ge1xyXG4gICAgX2lkOiBJRCFcclxuICAgIGNvdW50cnk6IFN0cmluZ1xyXG4gICAgc3RhdGU6IFN0cmluZ1xyXG4gICAgbGF0aXR1ZGU6IE51bWJlclxyXG4gICAgbG9uZ2l0dWRlOiBOdW1iZXJcclxuICAgIGNlcDogU3RyaW5nXHJcbiAgICBwdWJsaWNQbGFjZTogU3RyaW5nXHJcbiAgICBuZWlnaGJvcmhvb2Q6IFN0cmluZ1xyXG4gICAgbnVtYmVyOiBOdW1iZXJcclxuICAgIGNvdW50eTogU3RyaW5nXHJcbiAgICBjb21wbGVtZW50OiBTdHJpbmdcclxufVxyXG5cclxudHlwZSBVbml0IHtcclxuICAgIF9pZDogSUQhXHJcbiAgICAgICAgbmFtZTogU3RyaW5nXHJcbiAgICAgICAgbG9jYXRpb246W0xvY2F0aW9uXVxyXG59XHJcblxyXG50eXBlIFByb2ZpbGUge1xyXG4gICAgICAgIG5hbWU6IFN0cmluZ1xyXG4gICAgICAgIGFjY2VzczogW1N0cmluZ11cclxufVxyXG5cclxudHlwZSBVc2VyIHtcclxuICAgIF9pZDogSUQhXHJcbiAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICBlbWFpbDogU3RyaW5nLFxyXG4gICAgcHJvZmlsZTogUHJvZmlsZVxyXG4gICAgcGFzc3dvcmQ6IFN0cmluZyxcclxuICAgIGFjdGl2ZTogQm9vbGVhblxyXG59XHJcblxyXG50eXBlIENvcnBvcmF0aW9uIHtcclxuICBfaWQ6IElEIVxyXG4gIGNvbXBhbnk6IFN0cmluZ1xyXG4gIGNucGo6IFN0cmluZ1xyXG4gIHRyYWRpbmdOYW1lOiBTdHJpbmdcclxuICBhY3RpdmU6IEJvb2xlYW5cclxuICBjbGFzczogU3RyaW5nXHJcbiAgcGhvbmU6IE51bWJlclxyXG4gIGVtYWlsOiBTdHJpbmdcclxuICBjbGFzc2lmaWNhdGlvbjogU3RyaW5nXHJcbiAgY2VsbFBob25lOiBOdW1iZXJcclxuICBjcmVhdGlvbkRhdGU6IERhdGVcclxuICBhY3RpdmF0aW9uRGF0ZTogRGF0ZVxyXG4gIHZlcmlmaWNhdGlvbkRhdGU6IERhdGVcclxuICBsb2NhdGlvbjpMb2NhdGlvblxyXG4gIHVuaXRzOltVbml0XVxyXG4gIHVzZXJzOltVc2VyXVxyXG4gfVxyXG5cclxudHlwZSBRdWVyeSB7XHJcbiAgI2NvcnBvcmF0aW9uXHJcbiAgICBnZXRDb3Jwb3JhdGlvbihfaWQ6IElEISk6IENvcnBvcmF0aW9uXHJcbiAgICBhbGxDb3Jwb3JhdGlvbnM6IFtDb3Jwb3JhdGlvbl1cclxuIH1cclxuXHJcbiNjb3Jwb3JhdGlvbiBpbnB1dHNcclxuaW5wdXQgTG9jYXRpb25JbnB1dHtcclxuICAgIGNvdW50cnk6IFN0cmluZ1xyXG4gICAgc3RhdGU6IFN0cmluZ1xyXG4gICAgbGF0aXR1ZGU6IE51bWJlclxyXG4gICAgbG9uZ2l0dWRlOiBOdW1iZXJcclxuICAgIGNlcDogU3RyaW5nXHJcbiAgICBwdWJsaWNQbGFjZTogU3RyaW5nXHJcbiAgICBuZWlnaGJvcmhvb2Q6IFN0cmluZ1xyXG4gICAgbnVtYmVyOiBOdW1iZXJcclxuICAgIGNvdW50eTogU3RyaW5nXHJcbiAgICBjb21wbGVtZW50OiBTdHJpbmdcclxufVxyXG5cclxuaW5wdXQgVW5pdElucHV0e1xyXG4gICAgICAgIG5hbWU6IFN0cmluZ1xyXG4gICAgICAgIGxvY2F0aW9uOltMb2NhdGlvbklucHV0XVxyXG59XHJcblxyXG5pbnB1dCBQcm9maWxlSW5wdXR7XHJcbiAgICBuYW1lOiBTdHJpbmdcclxuICAgIGFjY2VzczogW1N0cmluZ11cclxufVxyXG5cclxuaW5wdXQgVXNlcklucHV0IHtcclxuICAgIG5hbWU6IFN0cmluZyxcclxuICAgIGVtYWlsOiBTdHJpbmcsXHJcbiAgICBwcm9maWxlOiBQcm9maWxlSW5wdXRcclxuICAgIHBhc3N3b3JkOiBTdHJpbmcsXHJcbiAgICBhY3RpdmU6IEJvb2xlYW5cclxufVxyXG4gICAgaW5wdXQgQ29ycG9yYXRpb25JbnB1dCB7XHJcbiAgICAgICAgY29tcGFueTogU3RyaW5nXHJcbiAgICAgICAgY25wajogU3RyaW5nXHJcbiAgICAgICAgdHJhZGluZ05hbWU6IFN0cmluZ1xyXG4gICAgICAgIGFjdGl2ZTogQm9vbGVhblxyXG4gICAgICAgIGNsYXNzOiBTdHJpbmdcclxuICAgICAgICBwaG9uZTogTnVtYmVyXHJcbiAgICAgICAgZW1haWw6IFN0cmluZ1xyXG4gICAgICAgIGNsYXNzaWZpY2F0aW9uOiBTdHJpbmdcclxuICAgICAgICBjZWxsUGhvbmU6IE51bWJlclxyXG4gICAgICAgIGNyZWF0aW9uRGF0ZTogRGF0ZVxyXG4gICAgICAgIGFjdGl2YXRpb25EYXRlOiBEYXRlXHJcbiAgICAgICAgdmVyaWZpY2F0aW9uRGF0ZTogRGF0ZVxyXG4gICAgICAgIGxvY2F0aW9uOkxvY2F0aW9uSW5wdXRcclxuICAgICAgICB1bml0czpbVW5pdElucHV0XVxyXG4gICAgICAgIHVzZXJzOltVc2VySW5wdXRdXHJcbiAgICB9XHJcblxyXG50eXBlIE11dGF0aW9uIHtcclxuICAgICNjb3Jwb3JhdGlvblxyXG4gICAgICAgIGNyZWF0ZUNvcnBvcmF0aW9uKGlucHV0OiBDb3Jwb3JhdGlvbklucHV0KTogQ29ycG9yYXRpb25cclxuICAgICAgICB1cGRhdGVDb3Jwb3JhdGlvbihfaWQ6IElEISwgaW5wdXQ6IENvcnBvcmF0aW9uSW5wdXQpOiBDb3Jwb3JhdGlvbiAgIFxyXG4gICAgICAgIGRlbGV0ZUNvcnBvcmF0aW9uKF9pZDogSUQhKSA6IENvcnBvcmF0aW9uXHJcbn1cclxuYDtcclxuY29uc3Qgc2NoZW1hID0gbWFrZUV4ZWN1dGFibGVTY2hlbWEoe1xyXG4gICAgdHlwZURlZnMsXHJcbiAgICByZXNvbHZlcnNcclxufSk7XHJcbm1vZHVsZS5leHBvcnRzID0gc2NoZW1hOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "makeExecutableSchema",
        "require",
        "resolvers",
        "typeDefs",
        "schema",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAA2BC,OAAO,CAAC,eAAD,CAAxC;;AACAC,SAAS,GAAGD,OAAO,CAAC,wBAAD,CAAnB;AACA,MAAME,QAAQ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlB;AAuHA,MAAMC,MAAM,GAAGJ,oBAAoB,CAAC;AAChCG,EAAAA,QADgC;AAEhCD,EAAAA;AAFgC,CAAD,CAAnC;AAIAG,MAAM,CAACC,OAAP,GAAiBF,MAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\schemas",
      "sourcesContent": [
        "const { makeExecutableSchema } = require('graphql-tools');\r\nresolvers = require('../resolvers/resolvers');\r\nconst typeDefs = `\r\nscalar Date\r\nscalar Number\r\n\r\ntype Location {\r\n    _id: ID!\r\n    country: String\r\n    state: String\r\n    latitude: Number\r\n    longitude: Number\r\n    cep: String\r\n    publicPlace: String\r\n    neighborhood: String\r\n    number: Number\r\n    county: String\r\n    complement: String\r\n}\r\n\r\ntype Unit {\r\n    _id: ID!\r\n        name: String\r\n        location:[Location]\r\n}\r\n\r\ntype Profile {\r\n        name: String\r\n        access: [String]\r\n}\r\n\r\ntype User {\r\n    _id: ID!\r\n    name: String,\r\n    email: String,\r\n    profile: Profile\r\n    password: String,\r\n    active: Boolean\r\n}\r\n\r\ntype Corporation {\r\n  _id: ID!\r\n  company: String\r\n  cnpj: String\r\n  tradingName: String\r\n  active: Boolean\r\n  class: String\r\n  phone: Number\r\n  email: String\r\n  classification: String\r\n  cellPhone: Number\r\n  creationDate: Date\r\n  activationDate: Date\r\n  verificationDate: Date\r\n  location:Location\r\n  units:[Unit]\r\n  users:[User]\r\n }\r\n\r\ntype Query {\r\n  #corporation\r\n    getCorporation(_id: ID!): Corporation\r\n    allCorporations: [Corporation]\r\n }\r\n\r\n#corporation inputs\r\ninput LocationInput{\r\n    country: String\r\n    state: String\r\n    latitude: Number\r\n    longitude: Number\r\n    cep: String\r\n    publicPlace: String\r\n    neighborhood: String\r\n    number: Number\r\n    county: String\r\n    complement: String\r\n}\r\n\r\ninput UnitInput{\r\n        name: String\r\n        location:[LocationInput]\r\n}\r\n\r\ninput ProfileInput{\r\n    name: String\r\n    access: [String]\r\n}\r\n\r\ninput UserInput {\r\n    name: String,\r\n    email: String,\r\n    profile: ProfileInput\r\n    password: String,\r\n    active: Boolean\r\n}\r\n    input CorporationInput {\r\n        company: String\r\n        cnpj: String\r\n        tradingName: String\r\n        active: Boolean\r\n        class: String\r\n        phone: Number\r\n        email: String\r\n        classification: String\r\n        cellPhone: Number\r\n        creationDate: Date\r\n        activationDate: Date\r\n        verificationDate: Date\r\n        location:LocationInput\r\n        units:[UnitInput]\r\n        users:[UserInput]\r\n    }\r\n\r\ntype Mutation {\r\n    #corporation\r\n        createCorporation(input: CorporationInput): Corporation\r\n        updateCorporation(_id: ID!, input: CorporationInput): Corporation   \r\n        deleteCorporation(_id: ID!) : Corporation\r\n}\r\n`;\r\nconst schema = makeExecutableSchema({\r\n    typeDefs,\r\n    resolvers\r\n});\r\nmodule.exports = schema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1560193162109
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\resolvers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "Corporation = require('../models/corporation.model');\nmodule.exports = resolvers = {\n  Query: {\n    async getCorporation(root, {\n      _id\n    }) {\n      return await Corporation.findById(_id);\n    },\n\n    async allCorporations() {\n      return await Corporation.find();\n    }\n\n  },\n  Mutation: {\n    async createCorporation(root, {\n      input\n    }) {\n      return await Corporation.create(input);\n    },\n\n    async updateCorporation(root, {\n      _id,\n      input\n    }) {\n      return await Corporation.findOneAndUpdate({\n        _id\n      }, input, {\n        new: true\n      });\n    },\n\n    async deleteCorporation(root, {\n      _id\n    }) {\n      return await Product.findOneAndRemove({\n        _id\n      });\n    }\n\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJDb3Jwb3JhdGlvbiIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJnZXRDb3Jwb3JhdGlvbiIsInJvb3QiLCJfaWQiLCJmaW5kQnlJZCIsImFsbENvcnBvcmF0aW9ucyIsImZpbmQiLCJNdXRhdGlvbiIsImNyZWF0ZUNvcnBvcmF0aW9uIiwiaW5wdXQiLCJjcmVhdGUiLCJ1cGRhdGVDb3Jwb3JhdGlvbiIsImZpbmRPbmVBbmRVcGRhdGUiLCJuZXciLCJkZWxldGVDb3Jwb3JhdGlvbiIsIlByb2R1Y3QiLCJmaW5kT25lQW5kUmVtb3ZlIl0sIm1hcHBpbmdzIjoiQUFBQUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsNkJBQUQsQ0FBckI7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxTQUFTLEdBQUc7QUFDekJDLEVBQUFBLEtBQUssRUFBRTtBQUNILFVBQU1DLGNBQU4sQ0FBcUJDLElBQXJCLEVBQTJCO0FBQ3ZCQyxNQUFBQTtBQUR1QixLQUEzQixFQUVHO0FBQ0MsYUFBTyxNQUFNUixXQUFXLENBQUNTLFFBQVosQ0FBcUJELEdBQXJCLENBQWI7QUFDSCxLQUxFOztBQU1ILFVBQU1FLGVBQU4sR0FBd0I7QUFDcEIsYUFBTyxNQUFNVixXQUFXLENBQUNXLElBQVosRUFBYjtBQUNIOztBQVJFLEdBRGtCO0FBV3pCQyxFQUFBQSxRQUFRLEVBQUU7QUFDTixVQUFNQyxpQkFBTixDQUF3Qk4sSUFBeEIsRUFBOEI7QUFDMUJPLE1BQUFBO0FBRDBCLEtBQTlCLEVBRUc7QUFDQyxhQUFPLE1BQU1kLFdBQVcsQ0FBQ2UsTUFBWixDQUFtQkQsS0FBbkIsQ0FBYjtBQUNILEtBTEs7O0FBTU4sVUFBTUUsaUJBQU4sQ0FBd0JULElBQXhCLEVBQThCO0FBQzFCQyxNQUFBQSxHQUQwQjtBQUUxQk0sTUFBQUE7QUFGMEIsS0FBOUIsRUFHRztBQUNDLGFBQU8sTUFBTWQsV0FBVyxDQUFDaUIsZ0JBQVosQ0FBNkI7QUFDdENULFFBQUFBO0FBRHNDLE9BQTdCLEVBRVZNLEtBRlUsRUFFSDtBQUNGSSxRQUFBQSxHQUFHLEVBQUU7QUFESCxPQUZHLENBQWI7QUFLSCxLQWZLOztBQWdCTixVQUFNQyxpQkFBTixDQUF3QlosSUFBeEIsRUFBOEI7QUFDMUJDLE1BQUFBO0FBRDBCLEtBQTlCLEVBRUc7QUFDQyxhQUFPLE1BQU1ZLE9BQU8sQ0FBQ0MsZ0JBQVIsQ0FBeUI7QUFDbENiLFFBQUFBO0FBRGtDLE9BQXpCLENBQWI7QUFHSDs7QUF0Qks7QUFYZSxDQUE3QiIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaVxccmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiQ29ycG9yYXRpb24gPSByZXF1aXJlKCcuLi9tb2RlbHMvY29ycG9yYXRpb24ubW9kZWwnKTtcclxubW9kdWxlLmV4cG9ydHMgPSByZXNvbHZlcnMgPSB7XHJcbiAgICBRdWVyeToge1xyXG4gICAgICAgIGFzeW5jIGdldENvcnBvcmF0aW9uKHJvb3QsIHtcclxuICAgICAgICAgICAgX2lkXHJcbiAgICAgICAgfSkge1xyXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgQ29ycG9yYXRpb24uZmluZEJ5SWQoX2lkKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFzeW5jIGFsbENvcnBvcmF0aW9ucygpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IENvcnBvcmF0aW9uLmZpbmQoKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgTXV0YXRpb246IHtcclxuICAgICAgICBhc3luYyBjcmVhdGVDb3Jwb3JhdGlvbihyb290LCB7XHJcbiAgICAgICAgICAgIGlucHV0XHJcbiAgICAgICAgfSkge1xyXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgQ29ycG9yYXRpb24uY3JlYXRlKGlucHV0KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFzeW5jIHVwZGF0ZUNvcnBvcmF0aW9uKHJvb3QsIHtcclxuICAgICAgICAgICAgX2lkLFxyXG4gICAgICAgICAgICBpbnB1dFxyXG4gICAgICAgIH0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IENvcnBvcmF0aW9uLmZpbmRPbmVBbmRVcGRhdGUoe1xyXG4gICAgICAgICAgICAgICAgX2lkXHJcbiAgICAgICAgICAgIH0sIGlucHV0LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3OiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgIH0sICBcclxuICAgICAgICBhc3luYyBkZWxldGVDb3Jwb3JhdGlvbihyb290LCB7XHJcbiAgICAgICAgICAgIF9pZFxyXG4gICAgICAgIH0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IFByb2R1Y3QuZmluZE9uZUFuZFJlbW92ZSh7XHJcbiAgICAgICAgICAgICAgICBfaWRcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "Corporation",
        "require",
        "module",
        "exports",
        "resolvers",
        "Query",
        "getCorporation",
        "root",
        "_id",
        "findById",
        "allCorporations",
        "find",
        "Mutation",
        "createCorporation",
        "input",
        "create",
        "updateCorporation",
        "findOneAndUpdate",
        "new",
        "deleteCorporation",
        "Product",
        "findOneAndRemove"
      ],
      "mappings": "AAAAA,WAAW,GAAGC,OAAO,CAAC,6BAAD,CAArB;AACAC,MAAM,CAACC,OAAP,GAAiBC,SAAS,GAAG;AACzBC,EAAAA,KAAK,EAAE;AACH,UAAMC,cAAN,CAAqBC,IAArB,EAA2B;AACvBC,MAAAA;AADuB,KAA3B,EAEG;AACC,aAAO,MAAMR,WAAW,CAACS,QAAZ,CAAqBD,GAArB,CAAb;AACH,KALE;;AAMH,UAAME,eAAN,GAAwB;AACpB,aAAO,MAAMV,WAAW,CAACW,IAAZ,EAAb;AACH;;AARE,GADkB;AAWzBC,EAAAA,QAAQ,EAAE;AACN,UAAMC,iBAAN,CAAwBN,IAAxB,EAA8B;AAC1BO,MAAAA;AAD0B,KAA9B,EAEG;AACC,aAAO,MAAMd,WAAW,CAACe,MAAZ,CAAmBD,KAAnB,CAAb;AACH,KALK;;AAMN,UAAME,iBAAN,CAAwBT,IAAxB,EAA8B;AAC1BC,MAAAA,GAD0B;AAE1BM,MAAAA;AAF0B,KAA9B,EAGG;AACC,aAAO,MAAMd,WAAW,CAACiB,gBAAZ,CAA6B;AACtCT,QAAAA;AADsC,OAA7B,EAEVM,KAFU,EAEH;AACFI,QAAAA,GAAG,EAAE;AADH,OAFG,CAAb;AAKH,KAfK;;AAgBN,UAAMC,iBAAN,CAAwBZ,IAAxB,EAA8B;AAC1BC,MAAAA;AAD0B,KAA9B,EAEG;AACC,aAAO,MAAMY,OAAO,CAACC,gBAAR,CAAyB;AAClCb,QAAAA;AADkC,OAAzB,CAAb;AAGH;;AAtBK;AAXe,CAA7B",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "Corporation = require('../models/corporation.model');\r\nmodule.exports = resolvers = {\r\n    Query: {\r\n        async getCorporation(root, {\r\n            _id\r\n        }) {\r\n            return await Corporation.findById(_id);\r\n        },\r\n        async allCorporations() {\r\n            return await Corporation.find();\r\n        }\r\n    },\r\n    Mutation: {\r\n        async createCorporation(root, {\r\n            input\r\n        }) {\r\n            return await Corporation.create(input);\r\n        },\r\n        async updateCorporation(root, {\r\n            _id,\r\n            input\r\n        }) {\r\n            return await Corporation.findOneAndUpdate({\r\n                _id\r\n            }, input, {\r\n                    new: true\r\n                })\r\n        },  \r\n        async deleteCorporation(root, {\r\n            _id\r\n        }) {\r\n            return await Product.findOneAndRemove({\r\n                _id\r\n            });\r\n        }\r\n    }\r\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1560105857374
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\models\\\\corporation.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\corporation.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\models\\corporation.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\models\\corporation.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
        "sourceFileName": "corporation.model.js"
      }
    },
    "ast": null,
    "code": "mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst CorporationSchema = new Schema({\n  company: String,\n  cnpj: String,\n  tradingName: String,\n  active: Boolean,\n  class: String,\n  phone: Number,\n  email: String,\n  classification: String,\n  cellPhone: Number,\n  creationDate: Date,\n  activationDate: Date,\n  verificationDate: Date,\n  location: {\n    country: String,\n    state: String,\n    latitude: Number,\n    longitude: Number,\n    cep: String,\n    publicPlace: String,\n    neighborhood: String,\n    number: Number,\n    county: String,\n    complement: String\n  },\n  units: [{\n    name: String,\n    location: {\n      country: String,\n      state: String,\n      latitude: Number,\n      longitude: Number,\n      cep: String,\n      publicPlace: String,\n      neighborhood: String,\n      number: Number,\n      county: String,\n      complement: String\n    }\n  }],\n  users: [{\n    name: String,\n    email: String,\n    profile: {\n      name: String,\n      access: [String]\n    },\n    password: String,\n    active: Boolean\n  }],\n  providers: [{\n    providerId: String\n  }]\n});\nmodule.exports = mongoose.model('corporation', CorporationSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcnBvcmF0aW9uLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsIkNvcnBvcmF0aW9uU2NoZW1hIiwiY29tcGFueSIsIlN0cmluZyIsImNucGoiLCJ0cmFkaW5nTmFtZSIsImFjdGl2ZSIsIkJvb2xlYW4iLCJjbGFzcyIsInBob25lIiwiTnVtYmVyIiwiZW1haWwiLCJjbGFzc2lmaWNhdGlvbiIsImNlbGxQaG9uZSIsImNyZWF0aW9uRGF0ZSIsIkRhdGUiLCJhY3RpdmF0aW9uRGF0ZSIsInZlcmlmaWNhdGlvbkRhdGUiLCJsb2NhdGlvbiIsImNvdW50cnkiLCJzdGF0ZSIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwiY2VwIiwicHVibGljUGxhY2UiLCJuZWlnaGJvcmhvb2QiLCJudW1iZXIiLCJjb3VudHkiLCJjb21wbGVtZW50IiwidW5pdHMiLCJuYW1lIiwidXNlcnMiLCJwcm9maWxlIiwiYWNjZXNzIiwicGFzc3dvcmQiLCJwcm92aWRlcnMiLCJwcm92aWRlcklkIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFsQjtBQUNBLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QjtBQUNBLE1BQU1DLGlCQUFpQixHQUFHLElBQUlELE1BQUosQ0FBVztBQUNqQ0UsRUFBQUEsT0FBTyxFQUFFQyxNQUR3QjtBQUVqQ0MsRUFBQUEsSUFBSSxFQUFFRCxNQUYyQjtBQUdqQ0UsRUFBQUEsV0FBVyxFQUFFRixNQUhvQjtBQUlqQ0csRUFBQUEsTUFBTSxFQUFFQyxPQUp5QjtBQUtqQ0MsRUFBQUEsS0FBSyxFQUFFTCxNQUwwQjtBQU1qQ00sRUFBQUEsS0FBSyxFQUFFQyxNQU4wQjtBQU9qQ0MsRUFBQUEsS0FBSyxFQUFFUixNQVAwQjtBQVFqQ1MsRUFBQUEsY0FBYyxFQUFFVCxNQVJpQjtBQVNqQ1UsRUFBQUEsU0FBUyxFQUFFSCxNQVRzQjtBQVVqQ0ksRUFBQUEsWUFBWSxFQUFFQyxJQVZtQjtBQVdqQ0MsRUFBQUEsY0FBYyxFQUFFRCxJQVhpQjtBQVlqQ0UsRUFBQUEsZ0JBQWdCLEVBQUVGLElBWmU7QUFhakNHLEVBQUFBLFFBQVEsRUFBRTtBQUNOQyxJQUFBQSxPQUFPLEVBQUVoQixNQURIO0FBRU5pQixJQUFBQSxLQUFLLEVBQUVqQixNQUZEO0FBR05rQixJQUFBQSxRQUFRLEVBQUVYLE1BSEo7QUFJTlksSUFBQUEsU0FBUyxFQUFFWixNQUpMO0FBS05hLElBQUFBLEdBQUcsRUFBRXBCLE1BTEM7QUFNTnFCLElBQUFBLFdBQVcsRUFBRXJCLE1BTlA7QUFPTnNCLElBQUFBLFlBQVksRUFBRXRCLE1BUFI7QUFRTnVCLElBQUFBLE1BQU0sRUFBRWhCLE1BUkY7QUFTTmlCLElBQUFBLE1BQU0sRUFBRXhCLE1BVEY7QUFVTnlCLElBQUFBLFVBQVUsRUFBRXpCO0FBVk4sR0FidUI7QUF5QmpDMEIsRUFBQUEsS0FBSyxFQUFFLENBQ0g7QUFDSUMsSUFBQUEsSUFBSSxFQUFFM0IsTUFEVjtBQUVJZSxJQUFBQSxRQUFRLEVBQUU7QUFDTkMsTUFBQUEsT0FBTyxFQUFFaEIsTUFESDtBQUVOaUIsTUFBQUEsS0FBSyxFQUFFakIsTUFGRDtBQUdOa0IsTUFBQUEsUUFBUSxFQUFFWCxNQUhKO0FBSU5ZLE1BQUFBLFNBQVMsRUFBRVosTUFKTDtBQUtOYSxNQUFBQSxHQUFHLEVBQUVwQixNQUxDO0FBTU5xQixNQUFBQSxXQUFXLEVBQUVyQixNQU5QO0FBT05zQixNQUFBQSxZQUFZLEVBQUV0QixNQVBSO0FBUU51QixNQUFBQSxNQUFNLEVBQUVoQixNQVJGO0FBU05pQixNQUFBQSxNQUFNLEVBQUV4QixNQVRGO0FBVU55QixNQUFBQSxVQUFVLEVBQUV6QjtBQVZOO0FBRmQsR0FERyxDQXpCMEI7QUEwQ2pDNEIsRUFBQUEsS0FBSyxFQUFFLENBQ0g7QUFDSUQsSUFBQUEsSUFBSSxFQUFFM0IsTUFEVjtBQUVJUSxJQUFBQSxLQUFLLEVBQUVSLE1BRlg7QUFHSTZCLElBQUFBLE9BQU8sRUFBRTtBQUNMRixNQUFBQSxJQUFJLEVBQUUzQixNQUREO0FBRUw4QixNQUFBQSxNQUFNLEVBQUUsQ0FBQzlCLE1BQUQ7QUFGSCxLQUhiO0FBT0krQixJQUFBQSxRQUFRLEVBQUUvQixNQVBkO0FBUUlHLElBQUFBLE1BQU0sRUFBRUM7QUFSWixHQURHLENBMUMwQjtBQXNEakM0QixFQUFBQSxTQUFTLEVBQUUsQ0FBQztBQUNSQyxJQUFBQSxVQUFVLEVBQUVqQztBQURKLEdBQUQ7QUF0RHNCLENBQVgsQ0FBMUI7QUE0REFrQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QyxRQUFRLENBQUN5QyxLQUFULENBQWUsYUFBZixFQUE4QnRDLGlCQUE5QixDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaVxcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcbmNvbnN0IENvcnBvcmF0aW9uU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgICBjb21wYW55OiBTdHJpbmcsXHJcbiAgICBjbnBqOiBTdHJpbmcsXHJcbiAgICB0cmFkaW5nTmFtZTogU3RyaW5nLFxyXG4gICAgYWN0aXZlOiBCb29sZWFuLFxyXG4gICAgY2xhc3M6IFN0cmluZyxcclxuICAgIHBob25lOiBOdW1iZXIsXHJcbiAgICBlbWFpbDogU3RyaW5nLFxyXG4gICAgY2xhc3NpZmljYXRpb246IFN0cmluZyxcclxuICAgIGNlbGxQaG9uZTogTnVtYmVyLFxyXG4gICAgY3JlYXRpb25EYXRlOiBEYXRlLFxyXG4gICAgYWN0aXZhdGlvbkRhdGU6IERhdGUsXHJcbiAgICB2ZXJpZmljYXRpb25EYXRlOiBEYXRlLFxyXG4gICAgbG9jYXRpb246IHtcclxuICAgICAgICBjb3VudHJ5OiBTdHJpbmcsXHJcbiAgICAgICAgc3RhdGU6IFN0cmluZyxcclxuICAgICAgICBsYXRpdHVkZTogTnVtYmVyLFxyXG4gICAgICAgIGxvbmdpdHVkZTogTnVtYmVyLFxyXG4gICAgICAgIGNlcDogU3RyaW5nLFxyXG4gICAgICAgIHB1YmxpY1BsYWNlOiBTdHJpbmcsXHJcbiAgICAgICAgbmVpZ2hib3Job29kOiBTdHJpbmcsXHJcbiAgICAgICAgbnVtYmVyOiBOdW1iZXIsXHJcbiAgICAgICAgY291bnR5OiBTdHJpbmcsXHJcbiAgICAgICAgY29tcGxlbWVudDogU3RyaW5nXHJcbiAgICB9LFxyXG4gICAgdW5pdHM6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6IFN0cmluZyxcclxuICAgICAgICAgICAgbG9jYXRpb246IHtcclxuICAgICAgICAgICAgICAgIGNvdW50cnk6IFN0cmluZyxcclxuICAgICAgICAgICAgICAgIHN0YXRlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgICAgICBsYXRpdHVkZTogTnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgbG9uZ2l0dWRlOiBOdW1iZXIsXHJcbiAgICAgICAgICAgICAgICBjZXA6IFN0cmluZyxcclxuICAgICAgICAgICAgICAgIHB1YmxpY1BsYWNlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgICAgICBuZWlnaGJvcmhvb2Q6IFN0cmluZyxcclxuICAgICAgICAgICAgICAgIG51bWJlcjogTnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgY291bnR5OiBTdHJpbmcsXHJcbiAgICAgICAgICAgICAgICBjb21wbGVtZW50OiBTdHJpbmdcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIF0sXHJcbiAgICB1c2VyczogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogU3RyaW5nLFxyXG4gICAgICAgICAgICBlbWFpbDogU3RyaW5nLFxyXG4gICAgICAgICAgICBwcm9maWxlOiB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICAgICAgICAgICAgICBhY2Nlc3M6IFtTdHJpbmddXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHBhc3N3b3JkOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIGFjdGl2ZTogQm9vbGVhblxyXG4gICAgICAgIH1cclxuICAgIF0sXHJcbiAgICBwcm92aWRlcnM6IFt7XHJcbiAgICAgICAgcHJvdmlkZXJJZDogU3RyaW5nXHJcbiAgICB9XVxyXG5cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdjb3Jwb3JhdGlvbicsIENvcnBvcmF0aW9uU2NoZW1hKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "corporation.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "CorporationSchema",
        "company",
        "String",
        "cnpj",
        "tradingName",
        "active",
        "Boolean",
        "class",
        "phone",
        "Number",
        "email",
        "classification",
        "cellPhone",
        "creationDate",
        "Date",
        "activationDate",
        "verificationDate",
        "location",
        "country",
        "state",
        "latitude",
        "longitude",
        "cep",
        "publicPlace",
        "neighborhood",
        "number",
        "county",
        "complement",
        "units",
        "name",
        "users",
        "profile",
        "access",
        "password",
        "providers",
        "providerId",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAAA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAlB;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AACA,MAAMC,iBAAiB,GAAG,IAAID,MAAJ,CAAW;AACjCE,EAAAA,OAAO,EAAEC,MADwB;AAEjCC,EAAAA,IAAI,EAAED,MAF2B;AAGjCE,EAAAA,WAAW,EAAEF,MAHoB;AAIjCG,EAAAA,MAAM,EAAEC,OAJyB;AAKjCC,EAAAA,KAAK,EAAEL,MAL0B;AAMjCM,EAAAA,KAAK,EAAEC,MAN0B;AAOjCC,EAAAA,KAAK,EAAER,MAP0B;AAQjCS,EAAAA,cAAc,EAAET,MARiB;AASjCU,EAAAA,SAAS,EAAEH,MATsB;AAUjCI,EAAAA,YAAY,EAAEC,IAVmB;AAWjCC,EAAAA,cAAc,EAAED,IAXiB;AAYjCE,EAAAA,gBAAgB,EAAEF,IAZe;AAajCG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAEhB,MADH;AAENiB,IAAAA,KAAK,EAAEjB,MAFD;AAGNkB,IAAAA,QAAQ,EAAEX,MAHJ;AAINY,IAAAA,SAAS,EAAEZ,MAJL;AAKNa,IAAAA,GAAG,EAAEpB,MALC;AAMNqB,IAAAA,WAAW,EAAErB,MANP;AAONsB,IAAAA,YAAY,EAAEtB,MAPR;AAQNuB,IAAAA,MAAM,EAAEhB,MARF;AASNiB,IAAAA,MAAM,EAAExB,MATF;AAUNyB,IAAAA,UAAU,EAAEzB;AAVN,GAbuB;AAyBjC0B,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,IAAI,EAAE3B,MADV;AAEIe,IAAAA,QAAQ,EAAE;AACNC,MAAAA,OAAO,EAAEhB,MADH;AAENiB,MAAAA,KAAK,EAAEjB,MAFD;AAGNkB,MAAAA,QAAQ,EAAEX,MAHJ;AAINY,MAAAA,SAAS,EAAEZ,MAJL;AAKNa,MAAAA,GAAG,EAAEpB,MALC;AAMNqB,MAAAA,WAAW,EAAErB,MANP;AAONsB,MAAAA,YAAY,EAAEtB,MAPR;AAQNuB,MAAAA,MAAM,EAAEhB,MARF;AASNiB,MAAAA,MAAM,EAAExB,MATF;AAUNyB,MAAAA,UAAU,EAAEzB;AAVN;AAFd,GADG,CAzB0B;AA0CjC4B,EAAAA,KAAK,EAAE,CACH;AACID,IAAAA,IAAI,EAAE3B,MADV;AAEIQ,IAAAA,KAAK,EAAER,MAFX;AAGI6B,IAAAA,OAAO,EAAE;AACLF,MAAAA,IAAI,EAAE3B,MADD;AAEL8B,MAAAA,MAAM,EAAE,CAAC9B,MAAD;AAFH,KAHb;AAOI+B,IAAAA,QAAQ,EAAE/B,MAPd;AAQIG,IAAAA,MAAM,EAAEC;AARZ,GADG,CA1C0B;AAsDjC4B,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,UAAU,EAAEjC;AADJ,GAAD;AAtDsB,CAAX,CAA1B;AA4DAkC,MAAM,CAACC,OAAP,GAAiBxC,QAAQ,CAACyC,KAAT,CAAe,aAAf,EAA8BtC,iBAA9B,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\models",
      "sourcesContent": [
        "mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\nconst CorporationSchema = new Schema({\r\n    company: String,\r\n    cnpj: String,\r\n    tradingName: String,\r\n    active: Boolean,\r\n    class: String,\r\n    phone: Number,\r\n    email: String,\r\n    classification: String,\r\n    cellPhone: Number,\r\n    creationDate: Date,\r\n    activationDate: Date,\r\n    verificationDate: Date,\r\n    location: {\r\n        country: String,\r\n        state: String,\r\n        latitude: Number,\r\n        longitude: Number,\r\n        cep: String,\r\n        publicPlace: String,\r\n        neighborhood: String,\r\n        number: Number,\r\n        county: String,\r\n        complement: String\r\n    },\r\n    units: [\r\n        {\r\n            name: String,\r\n            location: {\r\n                country: String,\r\n                state: String,\r\n                latitude: Number,\r\n                longitude: Number,\r\n                cep: String,\r\n                publicPlace: String,\r\n                neighborhood: String,\r\n                number: Number,\r\n                county: String,\r\n                complement: String\r\n            }\r\n        }\r\n    ],\r\n    users: [\r\n        {\r\n            name: String,\r\n            email: String,\r\n            profile: {\r\n                name: String,\r\n                access: [String]\r\n            },\r\n            password: String,\r\n            active: Boolean\r\n        }\r\n    ],\r\n    providers: [{\r\n        providerId: String\r\n    }]\r\n\r\n});\r\n\r\nmodule.exports = mongoose.model('corporation', CorporationSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1560782586345
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\schema.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "const {\n  makeExecutableSchema\n} = require('graphql-tools');\n\nconst resolvers = require('./resolvers');\n\nconst schemaPath = './schemas/index.graphql';\nconst schema = makeExecutableSchema({\n  typeDefs: importSchema(schemaPath),\n  resolvers\n});\nmodule.exports = schema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJtYWtlRXhlY3V0YWJsZVNjaGVtYSIsInJlcXVpcmUiLCJyZXNvbHZlcnMiLCJzY2hlbWFQYXRoIiwic2NoZW1hIiwidHlwZURlZnMiLCJpbXBvcnRTY2hlbWEiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBMkJDLE9BQU8sQ0FBQyxlQUFELENBQXhDOztBQUNBLE1BQU1DLFNBQVMsR0FBSUQsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsVUFBVSxHQUFHLHlCQUFuQjtBQUdBLE1BQU1DLE1BQU0sR0FBR0osb0JBQW9CLENBQUM7QUFDaENLLEVBQUFBLFFBQVEsRUFBRUMsWUFBWSxDQUFDSCxVQUFELENBRFU7QUFFaENELEVBQUFBO0FBRmdDLENBQUQsQ0FBbkM7QUFJQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgbWFrZUV4ZWN1dGFibGVTY2hlbWEgfSA9IHJlcXVpcmUoJ2dyYXBocWwtdG9vbHMnKTtcclxuY29uc3QgcmVzb2x2ZXJzID0gIHJlcXVpcmUoJy4vcmVzb2x2ZXJzJyk7XHJcbmNvbnN0IHNjaGVtYVBhdGggPSAnLi9zY2hlbWFzL2luZGV4LmdyYXBocWwnO1xyXG5cclxuXHJcbmNvbnN0IHNjaGVtYSA9IG1ha2VFeGVjdXRhYmxlU2NoZW1hKHtcclxuICAgIHR5cGVEZWZzOiBpbXBvcnRTY2hlbWEoc2NoZW1hUGF0aCksXHJcbiAgICByZXNvbHZlcnNcclxufSk7XHJcbm1vZHVsZS5leHBvcnRzID0gc2NoZW1hOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "makeExecutableSchema",
        "require",
        "resolvers",
        "schemaPath",
        "schema",
        "typeDefs",
        "importSchema",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAA2BC,OAAO,CAAC,eAAD,CAAxC;;AACA,MAAMC,SAAS,GAAID,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,UAAU,GAAG,yBAAnB;AAGA,MAAMC,MAAM,GAAGJ,oBAAoB,CAAC;AAChCK,EAAAA,QAAQ,EAAEC,YAAY,CAACH,UAAD,CADU;AAEhCD,EAAAA;AAFgC,CAAD,CAAnC;AAIAK,MAAM,CAACC,OAAP,GAAiBJ,MAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourcesContent": [
        "const { makeExecutableSchema } = require('graphql-tools');\r\nconst resolvers =  require('./resolvers');\r\nconst schemaPath = './schemas/index.graphql';\r\n\r\n\r\nconst schema = makeExecutableSchema({\r\n    typeDefs: importSchema(schemaPath),\r\n    resolvers\r\n});\r\nmodule.exports = schema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1560210732119
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const corporation = require('./corporation/Mutation/corporation');\n\nmodule.exports = { ...corporation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvcnBvcmF0aW9uIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLG9DQUFELENBQTNCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsRUFDYixHQUFHSDtBQURVLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxyZWNvbnNpZGVyZVxccmVjb25zaWRlcmUtY29ycG9yYXRpb24tYXBpXFxyZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb3Jwb3JhdGlvbiA9IHJlcXVpcmUoJy4vY29ycG9yYXRpb24vTXV0YXRpb24vY29ycG9yYXRpb24nKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICAuLi5jb3Jwb3JhdGlvblxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "corporation",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,EACb,GAAGH;AADU,CAAjB",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers",
      "sourcesContent": [
        "const corporation = require('./corporation/Mutation/corporation')\r\n\r\nmodule.exports = {\r\n    ...corporation\r\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1560218814743
  },
  "{\"sourceRoot\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\corporation\\\\Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"filename\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\\\\resolvers\\\\corporation\\\\Mutation\\\\corporation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\reconsidere\\\\reconsidere-corporation-api\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\reconsidere\\reconsidere-corporation-api",
      "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation\\corporation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\reconsidere\\reconsidere-corporation-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation\\corporation.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation\\corporation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation",
        "sourceFileName": "corporation.js"
      }
    },
    "ast": null,
    "code": "Corporation = require('../../../models/corporation.model');\nmodule.exports = resolvers = {\n  Query: {\n    async getCorporation(root, {\n      _id\n    }) {\n      return await Corporation.findById(_id);\n    },\n\n    async getCorporationByUser(root, {\n      _id\n    }) {\n      var res = await Corporation.findOne({\n        'users._id': _id\n      });\n\n      if (!res) {\n        return null;\n      } else {\n        return res;\n      }\n    },\n\n    async allCorporations() {\n      return await Corporation.find();\n    },\n\n    async signIn(root, {\n      email,\n      password\n    }) {\n      var res = await Corporation.findOne({\n        $and: [{\n          'users.email': email\n        }, {\n          'users.password': password\n        }]\n      });\n\n      if (!res) {\n        return null;\n      } else {\n        res.users = res.users.filter(x => x.email === email && x.password === password);\n        return res;\n      }\n    }\n\n  },\n  Mutation: {\n    async createCorporation(root, {\n      input\n    }) {\n      var res = await Corporation.findOne({\n        'users.email': input.users[0].email\n      });\n\n      if (res) {\n        throw new Error('WRE005');\n      } else {\n        return await Corporation.create(input);\n      }\n    },\n\n    async updateCorporation(root, {\n      _id,\n      input\n    }) {\n      return await Corporation.findOneAndUpdate(_id, {\n        input\n      }, {\n        new: true\n      });\n    },\n\n    async deleteCorporation(root, {\n      _id\n    }) {\n      return await Product.findOneAndRemove({\n        _id\n      });\n    }\n\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcnBvcmF0aW9uLmpzIl0sIm5hbWVzIjpbIkNvcnBvcmF0aW9uIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXNvbHZlcnMiLCJRdWVyeSIsImdldENvcnBvcmF0aW9uIiwicm9vdCIsIl9pZCIsImZpbmRCeUlkIiwiZ2V0Q29ycG9yYXRpb25CeVVzZXIiLCJyZXMiLCJmaW5kT25lIiwiYWxsQ29ycG9yYXRpb25zIiwiZmluZCIsInNpZ25JbiIsImVtYWlsIiwicGFzc3dvcmQiLCIkYW5kIiwidXNlcnMiLCJmaWx0ZXIiLCJ4IiwiTXV0YXRpb24iLCJjcmVhdGVDb3Jwb3JhdGlvbiIsImlucHV0IiwiRXJyb3IiLCJjcmVhdGUiLCJ1cGRhdGVDb3Jwb3JhdGlvbiIsImZpbmRPbmVBbmRVcGRhdGUiLCJuZXciLCJkZWxldGVDb3Jwb3JhdGlvbiIsIlByb2R1Y3QiLCJmaW5kT25lQW5kUmVtb3ZlIl0sIm1hcHBpbmdzIjoiQUFBQUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsbUNBQUQsQ0FBckI7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxTQUFTLEdBQUc7QUFDekJDLEVBQUFBLEtBQUssRUFBRTtBQUNILFVBQU1DLGNBQU4sQ0FBcUJDLElBQXJCLEVBQTJCO0FBQ3ZCQyxNQUFBQTtBQUR1QixLQUEzQixFQUVHO0FBQ0MsYUFBTyxNQUFNUixXQUFXLENBQUNTLFFBQVosQ0FBcUJELEdBQXJCLENBQWI7QUFDSCxLQUxFOztBQU1ILFVBQU1FLG9CQUFOLENBQTJCSCxJQUEzQixFQUFpQztBQUM3QkMsTUFBQUE7QUFENkIsS0FBakMsRUFFRztBQUNDLFVBQUlHLEdBQUcsR0FBRyxNQUFNWCxXQUFXLENBQUNZLE9BQVosQ0FBb0I7QUFBRSxxQkFBYUo7QUFBZixPQUFwQixDQUFoQjs7QUFFQSxVQUFJLENBQUNHLEdBQUwsRUFBVTtBQUNOLGVBQU8sSUFBUDtBQUNILE9BRkQsTUFFTztBQUNILGVBQU9BLEdBQVA7QUFDSDtBQUNKLEtBaEJFOztBQWlCSCxVQUFNRSxlQUFOLEdBQXdCO0FBQ3BCLGFBQU8sTUFBTWIsV0FBVyxDQUFDYyxJQUFaLEVBQWI7QUFDSCxLQW5CRTs7QUFvQkgsVUFBTUMsTUFBTixDQUFhUixJQUFiLEVBQW1CO0FBQ2ZTLE1BQUFBLEtBRGU7QUFDUkMsTUFBQUE7QUFEUSxLQUFuQixFQUVHO0FBQ0MsVUFBSU4sR0FBRyxHQUFHLE1BQU1YLFdBQVcsQ0FBQ1ksT0FBWixDQUNaO0FBQ0lNLFFBQUFBLElBQUksRUFBRSxDQUNGO0FBQUUseUJBQWVGO0FBQWpCLFNBREUsRUFFRjtBQUFFLDRCQUFrQkM7QUFBcEIsU0FGRTtBQURWLE9BRFksQ0FBaEI7O0FBUUEsVUFBSSxDQUFDTixHQUFMLEVBQVU7QUFDTixlQUFPLElBQVA7QUFDSCxPQUZELE1BRU87QUFDSEEsUUFBQUEsR0FBRyxDQUFDUSxLQUFKLEdBQVlSLEdBQUcsQ0FBQ1EsS0FBSixDQUFVQyxNQUFWLENBQWlCQyxDQUFDLElBQUlBLENBQUMsQ0FBQ0wsS0FBRixLQUFZQSxLQUFaLElBQXFCSyxDQUFDLENBQUNKLFFBQUYsS0FBZUEsUUFBMUQsQ0FBWjtBQUNBLGVBQU9OLEdBQVA7QUFDSDtBQUNKOztBQXJDRSxHQURrQjtBQXdDekJXLEVBQUFBLFFBQVEsRUFBRTtBQUNOLFVBQU1DLGlCQUFOLENBQXdCaEIsSUFBeEIsRUFBOEI7QUFDMUJpQixNQUFBQTtBQUQwQixLQUE5QixFQUVHO0FBQ0MsVUFBSWIsR0FBRyxHQUFHLE1BQU1YLFdBQVcsQ0FBQ1ksT0FBWixDQUFvQjtBQUFFLHVCQUFlWSxLQUFLLENBQUNMLEtBQU4sQ0FBWSxDQUFaLEVBQWVIO0FBQWhDLE9BQXBCLENBQWhCOztBQUNBLFVBQUlMLEdBQUosRUFBUztBQUNMLGNBQU0sSUFBSWMsS0FBSixDQUFVLFFBQVYsQ0FBTjtBQUNILE9BRkQsTUFFTztBQUNILGVBQU8sTUFBTXpCLFdBQVcsQ0FBQzBCLE1BQVosQ0FBbUJGLEtBQW5CLENBQWI7QUFDSDtBQUNKLEtBVks7O0FBV04sVUFBTUcsaUJBQU4sQ0FBd0JwQixJQUF4QixFQUE4QjtBQUMxQkMsTUFBQUEsR0FEMEI7QUFFMUJnQixNQUFBQTtBQUYwQixLQUE5QixFQUdHO0FBQ0MsYUFBTyxNQUFNeEIsV0FBVyxDQUFDNEIsZ0JBQVosQ0FBNkJwQixHQUE3QixFQUFrQztBQUFFZ0IsUUFBQUE7QUFBRixPQUFsQyxFQUE2QztBQUFFSyxRQUFBQSxHQUFHLEVBQUU7QUFBUCxPQUE3QyxDQUFiO0FBQ0gsS0FoQks7O0FBaUJOLFVBQU1DLGlCQUFOLENBQXdCdkIsSUFBeEIsRUFBOEI7QUFDMUJDLE1BQUFBO0FBRDBCLEtBQTlCLEVBRUc7QUFDQyxhQUFPLE1BQU11QixPQUFPLENBQUNDLGdCQUFSLENBQXlCO0FBQ2xDeEIsUUFBQUE7QUFEa0MsT0FBekIsQ0FBYjtBQUdIOztBQXZCSztBQXhDZSxDQUE3QiIsInNvdXJjZVJvb3QiOiJDOlxccmVjb25zaWRlcmVcXHJlY29uc2lkZXJlLWNvcnBvcmF0aW9uLWFwaVxccmVzb2x2ZXJzXFxjb3Jwb3JhdGlvblxcTXV0YXRpb24iLCJzb3VyY2VzQ29udGVudCI6WyJDb3Jwb3JhdGlvbiA9IHJlcXVpcmUoJy4uLy4uLy4uL21vZGVscy9jb3Jwb3JhdGlvbi5tb2RlbCcpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHJlc29sdmVycyA9IHtcclxuICAgIFF1ZXJ5OiB7XHJcbiAgICAgICAgYXN5bmMgZ2V0Q29ycG9yYXRpb24ocm9vdCwge1xyXG4gICAgICAgICAgICBfaWRcclxuICAgICAgICB9KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBDb3Jwb3JhdGlvbi5maW5kQnlJZChfaWQpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXN5bmMgZ2V0Q29ycG9yYXRpb25CeVVzZXIocm9vdCwge1xyXG4gICAgICAgICAgICBfaWRcclxuICAgICAgICB9KSB7XHJcbiAgICAgICAgICAgIHZhciByZXMgPSBhd2FpdCBDb3Jwb3JhdGlvbi5maW5kT25lKHsgJ3VzZXJzLl9pZCc6IF9pZCB9XHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgaWYgKCFyZXMpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXN5bmMgYWxsQ29ycG9yYXRpb25zKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgQ29ycG9yYXRpb24uZmluZCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXN5bmMgc2lnbkluKHJvb3QsIHtcclxuICAgICAgICAgICAgZW1haWwsIHBhc3N3b3JkXHJcbiAgICAgICAgfSkge1xyXG4gICAgICAgICAgICB2YXIgcmVzID0gYXdhaXQgQ29ycG9yYXRpb24uZmluZE9uZShcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAkYW5kOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgJ3VzZXJzLmVtYWlsJzogZW1haWwgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyAndXNlcnMucGFzc3dvcmQnOiBwYXNzd29yZCB9LFxyXG4gICAgICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgaWYgKCFyZXMpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmVzLnVzZXJzID0gcmVzLnVzZXJzLmZpbHRlcih4ID0+IHguZW1haWwgPT09IGVtYWlsICYmIHgucGFzc3dvcmQgPT09IHBhc3N3b3JkKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIE11dGF0aW9uOiB7XHJcbiAgICAgICAgYXN5bmMgY3JlYXRlQ29ycG9yYXRpb24ocm9vdCwge1xyXG4gICAgICAgICAgICBpbnB1dFxyXG4gICAgICAgIH0pIHtcclxuICAgICAgICAgICAgdmFyIHJlcyA9IGF3YWl0IENvcnBvcmF0aW9uLmZpbmRPbmUoeyAndXNlcnMuZW1haWwnOiBpbnB1dC51c2Vyc1swXS5lbWFpbCB9KVxyXG4gICAgICAgICAgICBpZiAocmVzKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dSRTAwNScpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IENvcnBvcmF0aW9uLmNyZWF0ZShpbnB1dCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGFzeW5jIHVwZGF0ZUNvcnBvcmF0aW9uKHJvb3QsIHtcclxuICAgICAgICAgICAgX2lkLFxyXG4gICAgICAgICAgICBpbnB1dFxyXG4gICAgICAgIH0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IENvcnBvcmF0aW9uLmZpbmRPbmVBbmRVcGRhdGUoX2lkLCB7IGlucHV0IH0sIHsgbmV3OiB0cnVlIH0pXHJcbiAgICAgICAgfSxcclxuICAgICAgICBhc3luYyBkZWxldGVDb3Jwb3JhdGlvbihyb290LCB7XHJcbiAgICAgICAgICAgIF9pZFxyXG4gICAgICAgIH0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IFByb2R1Y3QuZmluZE9uZUFuZFJlbW92ZSh7XHJcbiAgICAgICAgICAgICAgICBfaWRcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "corporation.js"
      ],
      "names": [
        "Corporation",
        "require",
        "module",
        "exports",
        "resolvers",
        "Query",
        "getCorporation",
        "root",
        "_id",
        "findById",
        "getCorporationByUser",
        "res",
        "findOne",
        "allCorporations",
        "find",
        "signIn",
        "email",
        "password",
        "$and",
        "users",
        "filter",
        "x",
        "Mutation",
        "createCorporation",
        "input",
        "Error",
        "create",
        "updateCorporation",
        "findOneAndUpdate",
        "new",
        "deleteCorporation",
        "Product",
        "findOneAndRemove"
      ],
      "mappings": "AAAAA,WAAW,GAAGC,OAAO,CAAC,mCAAD,CAArB;AACAC,MAAM,CAACC,OAAP,GAAiBC,SAAS,GAAG;AACzBC,EAAAA,KAAK,EAAE;AACH,UAAMC,cAAN,CAAqBC,IAArB,EAA2B;AACvBC,MAAAA;AADuB,KAA3B,EAEG;AACC,aAAO,MAAMR,WAAW,CAACS,QAAZ,CAAqBD,GAArB,CAAb;AACH,KALE;;AAMH,UAAME,oBAAN,CAA2BH,IAA3B,EAAiC;AAC7BC,MAAAA;AAD6B,KAAjC,EAEG;AACC,UAAIG,GAAG,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB;AAAE,qBAAaJ;AAAf,OAApB,CAAhB;;AAEA,UAAI,CAACG,GAAL,EAAU;AACN,eAAO,IAAP;AACH,OAFD,MAEO;AACH,eAAOA,GAAP;AACH;AACJ,KAhBE;;AAiBH,UAAME,eAAN,GAAwB;AACpB,aAAO,MAAMb,WAAW,CAACc,IAAZ,EAAb;AACH,KAnBE;;AAoBH,UAAMC,MAAN,CAAaR,IAAb,EAAmB;AACfS,MAAAA,KADe;AACRC,MAAAA;AADQ,KAAnB,EAEG;AACC,UAAIN,GAAG,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACZ;AACIM,QAAAA,IAAI,EAAE,CACF;AAAE,yBAAeF;AAAjB,SADE,EAEF;AAAE,4BAAkBC;AAApB,SAFE;AADV,OADY,CAAhB;;AAQA,UAAI,CAACN,GAAL,EAAU;AACN,eAAO,IAAP;AACH,OAFD,MAEO;AACHA,QAAAA,GAAG,CAACQ,KAAJ,GAAYR,GAAG,CAACQ,KAAJ,CAAUC,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACL,KAAF,KAAYA,KAAZ,IAAqBK,CAAC,CAACJ,QAAF,KAAeA,QAA1D,CAAZ;AACA,eAAON,GAAP;AACH;AACJ;;AArCE,GADkB;AAwCzBW,EAAAA,QAAQ,EAAE;AACN,UAAMC,iBAAN,CAAwBhB,IAAxB,EAA8B;AAC1BiB,MAAAA;AAD0B,KAA9B,EAEG;AACC,UAAIb,GAAG,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB;AAAE,uBAAeY,KAAK,CAACL,KAAN,CAAY,CAAZ,EAAeH;AAAhC,OAApB,CAAhB;;AACA,UAAIL,GAAJ,EAAS;AACL,cAAM,IAAIc,KAAJ,CAAU,QAAV,CAAN;AACH,OAFD,MAEO;AACH,eAAO,MAAMzB,WAAW,CAAC0B,MAAZ,CAAmBF,KAAnB,CAAb;AACH;AACJ,KAVK;;AAWN,UAAMG,iBAAN,CAAwBpB,IAAxB,EAA8B;AAC1BC,MAAAA,GAD0B;AAE1BgB,MAAAA;AAF0B,KAA9B,EAGG;AACC,aAAO,MAAMxB,WAAW,CAAC4B,gBAAZ,CAA6BpB,GAA7B,EAAkC;AAAEgB,QAAAA;AAAF,OAAlC,EAA6C;AAAEK,QAAAA,GAAG,EAAE;AAAP,OAA7C,CAAb;AACH,KAhBK;;AAiBN,UAAMC,iBAAN,CAAwBvB,IAAxB,EAA8B;AAC1BC,MAAAA;AAD0B,KAA9B,EAEG;AACC,aAAO,MAAMuB,OAAO,CAACC,gBAAR,CAAyB;AAClCxB,QAAAA;AADkC,OAAzB,CAAb;AAGH;;AAvBK;AAxCe,CAA7B",
      "sourceRoot": "C:\\reconsidere\\reconsidere-corporation-api\\resolvers\\corporation\\Mutation",
      "sourcesContent": [
        "Corporation = require('../../../models/corporation.model');\r\nmodule.exports = resolvers = {\r\n    Query: {\r\n        async getCorporation(root, {\r\n            _id\r\n        }) {\r\n            return await Corporation.findById(_id);\r\n        },\r\n        async getCorporationByUser(root, {\r\n            _id\r\n        }) {\r\n            var res = await Corporation.findOne({ 'users._id': _id }\r\n            )\r\n            if (!res) {\r\n                return null;\r\n            } else {\r\n                return res;\r\n            }\r\n        },\r\n        async allCorporations() {\r\n            return await Corporation.find();\r\n        },\r\n        async signIn(root, {\r\n            email, password\r\n        }) {\r\n            var res = await Corporation.findOne(\r\n                {\r\n                    $and: [\r\n                        { 'users.email': email },\r\n                        { 'users.password': password },\r\n                    ],\r\n                }\r\n            )\r\n            if (!res) {\r\n                return null;\r\n            } else {\r\n                res.users = res.users.filter(x => x.email === email && x.password === password);\r\n                return res;\r\n            }\r\n        },\r\n    },\r\n    Mutation: {\r\n        async createCorporation(root, {\r\n            input\r\n        }) {\r\n            var res = await Corporation.findOne({ 'users.email': input.users[0].email })\r\n            if (res) {\r\n                throw new Error('WRE005');\r\n            } else {\r\n                return await Corporation.create(input);\r\n            }\r\n        },\r\n        async updateCorporation(root, {\r\n            _id,\r\n            input\r\n        }) {\r\n            return await Corporation.findOneAndUpdate(_id, { input }, { new: true })\r\n        },\r\n        async deleteCorporation(root, {\r\n            _id\r\n        }) {\r\n            return await Product.findOneAndRemove({\r\n                _id\r\n            });\r\n        }\r\n    }\r\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1560903563683
  }
}